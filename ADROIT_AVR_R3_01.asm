
;CodeVisionAVR C Compiler V2.05.3 Standard
;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com

;Chip type                : ATmega128
;Program type             : Application
;Clock frequency          : 16,000000 MHz
;Memory model             : Medium
;Optimize for             : Speed
;(s)printf features       : int, width
;(s)scanf features        : int, width
;External RAM size        : 0
;Data Stack size          : 2048 byte(s)
;Heap size                : 0 byte(s)
;Promote 'char' to 'int'  : No
;'char' is unsigned       : No
;8 bit enums              : Yes
;Global 'const' stored in FLASH     : Yes
;Enhanced function parameter passing: Yes
;Enhanced core instructions         : On
;Smart register allocation          : On
;Automatic register allocation      : On

	#pragma AVRPART ADMIN PART_NAME ATmega128
	#pragma AVRPART MEMORY PROG_FLASH 131072
	#pragma AVRPART MEMORY EEPROM 4096
	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU RAMPZ=0x3B
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F
	.EQU XMCRA=0x6D
	.EQU XMCRB=0x6C

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0100
	.EQU __SRAM_END=0x10FF
	.EQU __DSTACK_SIZE=0x0800
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __GETBRPF
	OUT  RAMPZ,R22
	ELPM R@0,Z
	.ENDM

	.MACRO __GETBRPF_INC
	OUT  RAMPZ,R22
	ELPM R@0,Z+
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X
	.ENDM

	.MACRO __GETD1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X+
	LD   R22,X
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z+
	LD   R23,Z
	MOVW R30,R0
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R1,X+
	LD   R24,X+
	LD   R25,X
	MOVW R26,R0
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF _dServo5=R5
	.DEF _dServo1=R4
	.DEF _dServo2=R7
	.DEF _dServo3=R6
	.DEF _dServo4=R9
	.DEF _Enkoder1=R10
	.DEF _Enkoder2=R12
	.DEF _SysTick=R8

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _ext_int6_isr
	JMP  _ext_int7_isr
	JMP  _timer2_comp_isr
	JMP  0x00
	JMP  _timer1_capt_isr
	JMP  0x00
	JMP  0x00
	JMP  _timer1_ovf_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer3_compc_isr
	JMP  0x00
	JMP  _usart1_rx_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_Melodi:
	.DB  0x4F,0xA,0x4F,0xA,0x0,0x0,0x4F,0xA
	.DB  0x0,0x0,0x2D,0x8,0x4F,0xA,0x0,0x0
	.DB  0x40,0xC,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x20,0x6,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x2D,0x8,0x0,0x0,0x0,0x0,0x20,0x6
	.DB  0x0,0x0,0x0,0x0,0x26,0x5,0x0,0x0
	.DB  0x0,0x0,0xE0,0x6,0x0,0x0,0xB7,0x7
	.DB  0x0,0x0,0x48,0x7,0xE0,0x6,0x0,0x0
	.DB  0x20,0x6,0x4F,0xA,0x40,0xC,0xC0,0xD
	.DB  0x0,0x0,0xE9,0xA,0x40,0xC,0x0,0x0
	.DB  0x4F,0xA,0x0,0x0,0x2D,0x8,0x2D,0x9
	.DB  0xB7,0x7,0x0,0x0,0x0,0x0,0x2D,0x8
	.DB  0x0,0x0,0x0,0x0,0x20,0x6,0x0,0x0
	.DB  0x0,0x0,0x26,0x5,0x0,0x0,0x0,0x0
	.DB  0xE0,0x6,0x0,0x0,0xB7,0x7,0x0,0x0
	.DB  0x48,0x7,0xE0,0x6,0x0,0x0,0x20,0x6
	.DB  0x4F,0xA,0x40,0xC,0xC0,0xD,0x0,0x0
	.DB  0xE9,0xA,0x40,0xC,0x0,0x0,0x4F,0xA
	.DB  0x0,0x0,0x2D,0x8,0x2D,0x9,0xB7,0x7
	.DB  0x0,0x0,0x0,0x0
_Tempo:
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x23,0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x23
	.DB  0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
_tbl10_G100:
	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
	.DB  0x1,0x0
_tbl16_G100:
	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0

;REGISTER BIT VARIABLES INITIALIZATION
__REG_BIT_VARS:
	.DW  0x0000

_0x152:
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0
_0x0:
	.DB  0x4B,0x61,0x6C,0x69,0x62,0x72,0x61,0x73
	.DB  0x69,0x20,0x53,0x65,0x6E,0x73,0x6F,0x72
	.DB  0x0,0x53,0x65,0x6C,0x65,0x73,0x61,0x69
	.DB  0x20,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E
	.DB  0x3E,0x0,0x44,0x69,0x68,0x65,0x6E,0x74
	.DB  0x69,0x6B,0x61,0x6E,0x20,0x3E,0x3E,0x3E
	.DB  0x3E,0x3E,0x0,0x4D,0x65,0x72,0x61,0x68
	.DB  0x2D,0x48,0x69,0x6A,0x61,0x75,0x2D,0x42
	.DB  0x69,0x72,0x75,0x0,0x31,0x2E,0x57,0x61
	.DB  0x72,0x6E,0x61,0x20,0x4D,0x65,0x72,0x61
	.DB  0x68,0x20,0x3E,0x3E,0x0,0x54,0x65,0x6B
	.DB  0x61,0x6E,0x20,0x54,0x6F,0x6D,0x62,0x6F
	.DB  0x6C,0x20,0x31,0x3C,0x3C,0x0,0x32,0x2E
	.DB  0x57,0x61,0x72,0x6E,0x61,0x20,0x48,0x69
	.DB  0x6A,0x61,0x75,0x20,0x3E,0x3E,0x0,0x33
	.DB  0x2E,0x57,0x61,0x72,0x6E,0x61,0x20,0x42
	.DB  0x69,0x72,0x75,0x20,0x3E,0x3E,0x3E,0x0
	.DB  0x34,0x2E,0x57,0x61,0x72,0x6E,0x61,0x20
	.DB  0x48,0x69,0x74,0x61,0x6D,0x20,0x3E,0x3E
	.DB  0x0,0x48,0x69,0x74,0x61,0x6D,0x50,0x75
	.DB  0x74,0x69,0x68,0x2D,0x4D,0x65,0x72,0x61
	.DB  0x68,0x0,0x48,0x69,0x74,0x61,0x6D,0x50
	.DB  0x75,0x74,0x69,0x68,0x2D,0x48,0x69,0x6A
	.DB  0x61,0x75,0x0,0x48,0x69,0x74,0x61,0x6D
	.DB  0x50,0x75,0x74,0x69,0x68,0x2D,0x42,0x69
	.DB  0x72,0x75,0x20,0x0,0x31,0x2E,0x57,0x61
	.DB  0x72,0x6E,0x61,0x20,0x50,0x75,0x74,0x69
	.DB  0x68,0x20,0x3E,0x3E,0x0,0x32,0x2E,0x57
	.DB  0x61,0x72,0x6E,0x61,0x20,0x48,0x69,0x74
	.DB  0x61,0x6D,0x20,0x3E,0x3E,0x0,0x4C,0x43
	.DB  0x44,0x20,0x54,0x45,0x53,0x54,0x2E,0x2E
	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x0,0x31
	.DB  0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39
	.DB  0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x0
	.DB  0x49,0x4D,0x55,0x20,0x54,0x65,0x73,0x74
	.DB  0x20,0x4F,0x4B,0x20,0x3E,0x3E,0x3E,0x3E
	.DB  0x0,0x57,0x61,0x69,0x74,0x20,0x34,0x20
	.DB  0x47,0x79,0x72,0x6F,0x73,0x63,0x6F,0x70
	.DB  0x65,0x0,0x49,0x4D,0x55,0x20,0x54,0x65
	.DB  0x73,0x74,0x20,0x46,0x61,0x69,0x6C,0x20
	.DB  0x3E,0x3E,0x0,0x43,0x68,0x65,0x63,0x6B
	.DB  0x20,0x48,0x61,0x72,0x64,0x77,0x61,0x72
	.DB  0x65,0x21,0x21,0x0,0x47,0x79,0x72,0x6F
	.DB  0x20,0x43,0x61,0x6C,0x6C,0x69,0x62,0x72
	.DB  0x61,0x74,0x65,0x64,0x0,0x4D,0x61,0x67
	.DB  0x6E,0x65,0x74,0x6F,0x20,0x54,0x65,0x73
	.DB  0x74,0x20,0x4F,0x4B,0x2E,0x0,0x3C,0x3C
	.DB  0x3C,0x3C,0x3C,0x3C,0x3C,0x3C,0x3E,0x3E
	.DB  0x3E,0x3E,0x3E,0x3E,0x3E,0x3E,0x0,0x4D
	.DB  0x61,0x67,0x65,0x74,0x6F,0x20,0x54,0x65
	.DB  0x73,0x74,0x20,0x46,0x61,0x69,0x6C,0x0
	.DB  0x4D,0x6F,0x64,0x65,0x42,0x61,0x6C,0x61
	.DB  0x6E,0x63,0x69,0x6E,0x67,0x20,0x4F,0x4E
	.DB  0x0,0x3C,0x3C,0x3C,0x3C,0x3C,0x20,0x50
	.DB  0x75,0x74,0x61,0x72,0x20,0x4B,0x69,0x72
	.DB  0x69,0x0,0x3E,0x3E,0x3E,0x3E,0x20,0x50
	.DB  0x75,0x74,0x61,0x72,0x20,0x4B,0x61,0x6E
	.DB  0x61,0x6E,0x0,0x42,0x61,0x6C,0x61,0x6E
	.DB  0x54,0x72,0x61,0x63,0x65,0x72,0x20,0x4D
	.DB  0x6F,0x64,0x65,0x0
_0x2040060:
	.DB  0x1
_0x2040000:
	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
	.DB  0x0

__GLOBAL_INI_TBL:
	.DW  0x01
	.DW  0x02
	.DD  __REG_BIT_VARS*2

	.DW  0x0A
	.DW  0x04
	.DD  _0x152*2

	.DW  0x01
	.DW  __seed_G102
	.DD  _0x2040060*2

_0xFFFFFFFF:
	.DW  0

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30
	STS  XMCRB,R30

;DISABLE WATCHDOG
	LDI  R31,0x18
	OUT  WDTCR,R31
	OUT  WDTCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,LOW(__SRAM_START)
	LDI  R27,HIGH(__SRAM_START)
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	OUT  RAMPZ,R29
	ELPM R24,Z+
	ELPM R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	ELPM R26,Z+
	ELPM R27,Z+
	ELPM R0,Z+
	ELPM R1,Z+
	ELPM R28,Z+
	ELPM R29,Z+
	MOVW R22,R30
	IN   R29,RAMPZ
	MOVW R30,R0
	OUT  RAMPZ,R28
__GLOBAL_INI_LOOP:
	ELPM R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0

	.DSEG
	.ORG 0x900

	.CSEG
;/*****************************************************
;Project : ADROIT AVR Rev.3
;Version : 1
;Date    : 3/13/2014
;Author  : Eko Henfri Binugroho
;Company : ER2C
;
;Chip type           : ATmega128
;Program type        : Application
;Clock frequency     : 16,000000 MHz
;Memory model        : Small
;External SRAM size  : 0
;Data Stack size     : 1024
;*****************************************************/
;
;#include <stdio.h>
;#include <mem.h>
;#include <math.h>
;#include "Include/mySystem.h"
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_SudutServo5:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut
	MOV  R5,R30
	RJMP _0x20A0007
_SudutServo1:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut
	MOV  R4,R30
	RJMP _0x20A0007
_SudutServo2:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut
	MOV  R7,R30
	RJMP _0x20A0007
_SudutServo3:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut
	MOV  R6,R30
	RJMP _0x20A0007
_SudutServo4:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut
	MOV  R9,R30
	RJMP _0x20A0007
_HitungSudut:
	ST   -Y,R27
	ST   -Y,R26
;	sudut -> Y+0
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(8)
	CALL __MULB1W2U
	MOVW R26,R30
	LDI  R30,LOW(18)
	LDI  R31,HIGH(18)
	CALL __DIVW21U
	SUBI R30,-LOW(20)
	RJMP _0x20A0009
_HitungSudut2:
	ST   -Y,R27
	ST   -Y,R26
;	sudut -> Y+0
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(200)
	CALL __MULB1W2U
	MOVW R26,R30
	LDI  R30,LOW(18)
	LDI  R31,HIGH(18)
	CALL __DIVW21U
	SUBI R30,LOW(-500)
	SBCI R31,HIGH(-500)
	RJMP _0x20A0009
_SudutServo6:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut2
	OUT  0x2A+1,R31
	OUT  0x2A,R30
	RJMP _0x20A0007
_SudutServo7:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut2
	OUT  0x28+1,R31
	OUT  0x28,R30
	RJMP _0x20A0007
_SudutServo8:
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	posisi -> Y+2
;	dServo8 -> R16,R17
	LDD  R26,Y+2
	CLR  R27
	RCALL _HitungSudut2
	MOVW R16,R30
	STS  121,R17
	STS  120,R16
	RJMP _0x20A0011
_SetDataMotorPWM:
	ST   -Y,R27
	ST   -Y,R26
;	Ka -> Y+2
;	Ki -> Y+0
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ST   Y,R30
	STD  Y+1,R31
	LDD  R26,Y+3
	TST  R26
	BRPL _0x3
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	CALL __ANEGW1
	MOV  R30,R31
	LDI  R31,0
	STS  133,R30
	LDD  R30,Y+2
	NEG  R30
	STS  132,R30
	SBI  0x3,5
	RJMP _0x6
_0x3:
	LDD  R30,Y+3
	STS  133,R30
	LDD  R30,Y+2
	STS  132,R30
	CBI  0x3,5
_0x6:
	LDD  R26,Y+1
	TST  R26
	BRPL _0x9
	LD   R30,Y
	LDD  R31,Y+1
	CALL __ANEGW1
	MOV  R30,R31
	LDI  R31,0
	STS  135,R30
	LD   R30,Y
	NEG  R30
	STS  134,R30
	CBI  0x3,2
	RJMP _0xC
_0x9:
	LDD  R30,Y+1
	STS  135,R30
	LD   R30,Y
	STS  134,R30
	SBI  0x3,2
_0xC:
	RJMP _0x20A0008
_Stop:
	LDI  R30,LOW(0)
	STS  135,R30
	STS  134,R30
	STS  133,R30
	STS  132,R30
	RET
_LCD_Init_Cmd:
	ST   -Y,R26
;	xData -> Y+0
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	ORI  R30,4
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	RJMP _0x20A0007
_LCD_Perintah:
	ST   -Y,R26
;	xData -> Y+0
	CBI  0x1B,0
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	ORI  R30,LOW(0xC)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USB 27
	LD   R30,Y
	SWAP R30
	ANDI R30,0xF0
	ORI  R30,LOW(0xC)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USW 2800
	SBI  0x1B,2
	RJMP _0x20A0007
_LCD_Data:
	ST   -Y,R26
;	xData -> Y+0
	SBI  0x1B,0
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	ORI  R30,LOW(0xD)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USB 27
	LD   R30,Y
	SWAP R30
	ANDI R30,0xF0
	ORI  R30,LOW(0xD)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USB 213
	SBI  0x1B,2
	RJMP _0x20A0007
_LCD_Init:
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(48)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(5)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(48)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(48)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(32)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(40)
	RCALL _LCD_Perintah
	LDI  R26,LOW(16)
	RCALL _LCD_Perintah
	LDI  R26,LOW(12)
	RCALL _LCD_Perintah
	LDI  R26,LOW(6)
	RCALL _LCD_Perintah
	RJMP _0x20A0012
_LCD_GotoXY:
	ST   -Y,R26
	ST   -Y,R17
;	x -> Y+2
;	y -> Y+1
;	baris -> R17
	LDD  R30,Y+1
	CPI  R30,0
	BRNE _0x21
	LDD  R26,Y+2
	SUBI R26,-LOW(128)
	RJMP _0x141
_0x21:
	LDD  R26,Y+2
	SUBI R26,-LOW(192)
_0x141:
	RCALL _LCD_Perintah
	LDD  R17,Y+0
	RJMP _0x20A0010
_LCD_TextF:
	CALL __PUTPARD2
;	*text -> Y+0
_0x23:
	CALL __GETD1S0
	__GETBRPF 30
	CPI  R30,0
	BREQ _0x25
	CALL __GETD1S0
	__GETBRPF 26
	RCALL _LCD_Data
	MOVW R26,R28
	CALL __GETD1P_INC
	__ADDD1N 1
	CALL __PUTDP1_DEC
	__SUBD1N 1
	RJMP _0x23
_0x25:
	RJMP _0x20A0008
;	*text -> Y+0
_LCD_TulisF:
	CALL __PUTPARD2
;	Baris -> Y+4
;	*text -> Y+0
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _LCD_GotoXY
	CALL __GETD2S0
	RCALL _LCD_TextF
	RJMP _0x20A000A
_LCD_Hapus:
_0x20A0012:
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	RET
;	Baris -> Y+1
;	i -> R17
_LCD_HapusKiri:
	ST   -Y,R26
	ST   -Y,R17
;	Baris -> Y+1
;	i -> R17
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+2
	RCALL _LCD_GotoXY
	LDI  R17,LOW(0)
_0x2D:
	CPI  R17,16
	BRSH _0x2E
	LDI  R26,LOW(32)
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,-1
	RJMP _0x2D
_0x2E:
	LDD  R17,Y+0
	RJMP _0x20A0009
_LCD_HapusKanan:
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	Baris -> Y+2
;	i -> R17
;	j -> R16
	LDD  R30,Y+2
	LDI  R26,LOW(64)
	MUL  R30,R26
	MOVW R30,R0
	SUBI R30,-LOW(128)
	MOV  R16,R30
	LDI  R17,LOW(15)
_0x30:
	LDI  R30,LOW(255)
	CP   R30,R17
	BRGE _0x31
	MOV  R26,R17
	ADD  R26,R16
	RCALL _LCD_Perintah
	LDI  R26,LOW(32)
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,1
	RJMP _0x30
_0x31:
_0x20A0011:
	LDD  R17,Y+1
	LDD  R16,Y+0
_0x20A0010:
	ADIW R28,3
	RET
_LCD_TulisKiri:
	CALL __PUTPARD2
	ST   -Y,R17
;	Baris -> Y+5
;	*text -> Y+1
;	i -> R17
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+6
	RCALL _LCD_GotoXY
	LDI  R17,LOW(0)
_0x33:
	CPI  R17,16
	BRSH _0x34
	MOV  R30,R17
	__GETD2S 1
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __ADDD12
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,-1
	RJMP _0x33
_0x34:
	LDD  R17,Y+0
	RJMP _0x20A0005
_LCD_TulisKanan:
	CALL __PUTPARD2
	ST   -Y,R17
	ST   -Y,R16
;	Baris -> Y+6
;	*text -> Y+2
;	i -> R17
;	j -> R16
	LDD  R30,Y+6
	LDI  R26,LOW(64)
	MUL  R30,R26
	MOVW R30,R0
	SUBI R30,-LOW(128)
	MOV  R16,R30
	LDI  R17,LOW(15)
_0x36:
	LDI  R30,LOW(255)
	CP   R30,R17
	BRGE _0x37
	MOV  R26,R17
	ADD  R26,R16
	RCALL _LCD_Perintah
	MOV  R30,R17
	__GETD2S 2
	CALL __CBD1
	CALL __ADDD12
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,1
	RJMP _0x36
_0x37:
	RJMP _0x20A000F
_LCD_TulisTengah:
	CALL __PUTPARD2
	ST   -Y,R17
	ST   -Y,R16
;	Baris -> Y+6
;	*text -> Y+2
;	i -> R17
;	j -> R16
	LDD  R30,Y+6
	LDI  R26,LOW(64)
	MUL  R30,R26
	MOVW R30,R0
	SUBI R30,-LOW(128)
	MOV  R16,R30
	LDI  R17,LOW(7)
_0x39:
	LDI  R30,LOW(255)
	CP   R30,R17
	BRGE _0x3A
	MOV  R26,R17
	ADD  R26,R16
	RCALL _LCD_Perintah
	MOV  R30,R17
	__GETD2S 2
	CALL __CBD1
	CALL __ADDD12
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	MOV  R30,R16
	SUB  R30,R17
	SUBI R30,-LOW(15)
	MOV  R26,R30
	RCALL _LCD_Perintah
	MOV  R30,R17
	__GETD2S 2
	CALL __CBD1
	CALL __SWAPD12
	CALL __SUBD12
	__ADDD1N 15
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,1
	RJMP _0x39
_0x3A:
_0x20A000F:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,7
	RET
;	Baris -> Y+6
;	*text -> Y+2
;	i -> R17
;	j -> R16
_LCD_Angka4:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+0
	LDD  R26,Y+1
	TST  R26
	BRPL _0x3E
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ST   Y,R30
	STD  Y+1,R31
	LDI  R26,LOW(45)
	RCALL _LCD_Data
_0x3E:
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MODW21
	MOVW R26,R30
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __MODW21
	MOVW R26,R30
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	RJMP _0x20A0009
_LCD_Angka3:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+0
	LDD  R26,Y+1
	TST  R26
	BRPL _0x3F
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ST   Y,R30
	STD  Y+1,R31
	LDI  R26,LOW(45)
	RCALL _LCD_Data
_0x3F:
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __MODW21
	MOVW R26,R30
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	RJMP _0x20A0009
;	x -> Y+0
_LCD_uByte:
	ST   -Y,R26
;	x -> Y+0
	LD   R26,Y
	LDI  R30,LOW(100)
	CALL __DIVB21U
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDI  R30,LOW(100)
	CALL __MODB21U
	MOV  R26,R30
	LDI  R30,LOW(10)
	CALL __DIVB21U
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDI  R30,LOW(10)
	CALL __MODB21U
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	RJMP _0x20A0007
_LCD_Biner:
	ST   -Y,R26
	ST   -Y,R17
;	x -> Y+1
;	i -> R17
	LDI  R17,LOW(0)
_0x42:
	CPI  R17,8
	BRSH _0x43
	LDI  R30,LOW(7)
	SUB  R30,R17
	LDI  R26,LOW(1)
	CALL __LSLB12
	LDD  R26,Y+1
	AND  R30,R26
	BRNE _0x44
	LDI  R26,LOW(48)
	RJMP _0x142
_0x44:
	LDI  R26,LOW(49)
_0x142:
	RCALL _LCD_Data
	SUBI R17,-1
	RJMP _0x42
_0x43:
	LDD  R17,Y+0
	RJMP _0x20A0009
_I2C_Init:
	LDI  R30,LOW(0)
	STS  113,R30
	LDI  R30,LOW(72)
	STS  112,R30
	RET
_I2C_Start:
	ST   -Y,R26
	ST   -Y,R17
;	address -> Y+1
;	twst -> R17
	LDI  R30,LOW(164)
	STS  116,R30
_0x46:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x46
	LDS  R30,113
	ANDI R30,LOW(0xF8)
	MOV  R17,R30
	CPI  R17,8
	BREQ _0x4A
	CPI  R17,16
	BRNE _0x4B
_0x4A:
	RJMP _0x49
_0x4B:
	LDI  R30,LOW(1)
	LDD  R17,Y+0
	RJMP _0x20A0009
_0x49:
	LDD  R30,Y+1
	STS  115,R30
	LDI  R30,LOW(132)
	STS  116,R30
_0x4C:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x4C
	LDS  R30,113
	ANDI R30,LOW(0xF8)
	MOV  R17,R30
	CPI  R17,24
	BREQ _0x50
	CPI  R17,64
	BRNE _0x51
_0x50:
	RJMP _0x4F
_0x51:
	LDI  R30,LOW(1)
	LDD  R17,Y+0
	RJMP _0x20A0009
_0x4F:
	LDI  R30,LOW(0)
	LDD  R17,Y+0
	RJMP _0x20A0009
_I2C_Start_Wait:
	ST   -Y,R26
	ST   -Y,R17
;	address -> Y+1
;	twst -> R17
_0x52:
	LDI  R30,LOW(164)
	STS  116,R30
_0x55:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x55
	LDS  R30,113
	ANDI R30,LOW(0xF8)
	MOV  R17,R30
	CPI  R17,8
	BREQ _0x59
	CPI  R17,16
	BRNE _0x5A
_0x59:
	RJMP _0x58
_0x5A:
	RJMP _0x52
_0x58:
	LDD  R30,Y+1
	STS  115,R30
	LDI  R30,LOW(132)
	STS  116,R30
_0x5B:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x5B
	LDS  R30,113
	ANDI R30,LOW(0xF8)
	MOV  R17,R30
	CPI  R17,32
	BREQ _0x5F
	CPI  R17,88
	BRNE _0x5E
_0x5F:
	LDI  R30,LOW(148)
	STS  116,R30
_0x61:
	LDS  R30,116
	ANDI R30,LOW(0x10)
	BRNE _0x61
	RJMP _0x52
_0x5E:
	LDD  R17,Y+0
	RJMP _0x20A0009
;	address -> Y+0
_I2C_Stop:
	LDI  R30,LOW(148)
	STS  116,R30
_0x64:
	LDS  R30,116
	ANDI R30,LOW(0x10)
	BRNE _0x64
	RET
_I2C_Write:
	ST   -Y,R26
	ST   -Y,R17
;	data -> Y+1
;	twst -> R17
	LDD  R30,Y+1
	STS  115,R30
	LDI  R30,LOW(132)
	STS  116,R30
_0x67:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x67
	LDS  R30,113
	ANDI R30,LOW(0xF8)
	MOV  R17,R30
	CPI  R17,40
	BREQ _0x6A
	LDI  R30,LOW(1)
	LDD  R17,Y+0
	RJMP _0x20A0009
_0x6A:
	LDI  R30,LOW(0)
	LDD  R17,Y+0
	RJMP _0x20A0009
_I2C_ReadAck:
	LDI  R30,LOW(196)
	STS  116,R30
_0x6B:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x6B
	RJMP _0x20A000E
_I2C_ReadNak:
	LDI  R30,LOW(132)
	STS  116,R30
_0x6E:
	LDS  R30,116
	ANDI R30,LOW(0x80)
	BREQ _0x6E
_0x20A000E:
	LDS  R30,115
	RET
_BuzzerOff:
	LDI  R30,LOW(0)
	OUT  0x33,R30
	CBI  0x18,4
	OUT  0x30,R30
	RET
_FBuzzer:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+0
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x7D)
	LDI  R30,HIGH(0x7D)
	CPC  R27,R30
	BRLO _0x74
	CPI  R26,LOW(0x2711)
	LDI  R30,HIGH(0x2711)
	CPC  R27,R30
	BRLO _0x75
_0x74:
	RJMP _0x73
_0x75:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x7D0)
	LDI  R30,HIGH(0x7D0)
	CPC  R27,R30
	BRLO _0x76
	LDI  R30,LOW(26)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x7A120
	CALL __DIVD21
	OUT  0x31,R30
_0x76:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x3E8)
	LDI  R30,HIGH(0x3E8)
	CPC  R27,R30
	BRLO _0x77
	LDI  R30,LOW(27)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x3D090
	CALL __DIVD21
	RJMP _0x143
_0x77:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x1F4)
	LDI  R30,HIGH(0x1F4)
	CPC  R27,R30
	BRLO _0x79
	LDI  R30,LOW(28)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x1E848
	CALL __DIVD21
	RJMP _0x143
_0x79:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0xFA)
	LDI  R30,HIGH(0xFA)
	CPC  R27,R30
	BRLO _0x7B
	LDI  R30,LOW(29)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x107AC
	CALL __DIVD21
	RJMP _0x143
_0x7B:
	LDI  R30,LOW(30)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(33750)
	LDI  R27,HIGH(33750)
	CALL __DIVW21U
_0x143:
	OUT  0x31,R30
	RJMP _0x7D
_0x73:
	RCALL _BuzzerOff
_0x7D:
	RJMP _0x20A0009
_Buzzer:
	ST   -Y,R27
	ST   -Y,R26
;	Frek -> Y+2
;	Tempo -> Y+0
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	RCALL _FBuzzer
	LD   R26,Y
	LDD  R27,Y+1
	CALL _delay_ms
	RCALL _BuzzerOff
	RJMP _0x20A0008
_Nada1:
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(100)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(50)
	RJMP _0x20A000D
_Nada2:
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(100)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(2500)
	LDI  R31,HIGH(2500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(150)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(50)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	RJMP _0x20A000C
_Nada3:
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(50)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(150)
_0x20A000D:
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(100)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(500)
	LDI  R31,HIGH(500)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R30,LOW(2000)
	LDI  R31,HIGH(2000)
_0x20A000C:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(50)
	LDI  R27,0
	RCALL _Buzzer
	RET
_usart1_rx_isr:
	ST   -Y,R26
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	SBIW R28,2
;	status -> Y+1
;	data -> Y+0
	LDS  R30,155
	STD  Y+1,R30
	LDS  R30,156
	ST   Y,R30
	LDD  R30,Y+1
	ANDI R30,LOW(0x1C)
	BRNE _0x7E
	LDS  R30,_rx_wr_index1
	LDI  R31,0
	SUBI R30,LOW(-_rx_buffer1)
	SBCI R31,HIGH(-_rx_buffer1)
	LD   R26,Y
	STD  Z+0,R26
	LDS  R26,_rx_wr_index1
	SUBI R26,-LOW(1)
	STS  _rx_wr_index1,R26
	CPI  R26,LOW(0x10)
	BRNE _0x7F
	LDI  R30,LOW(0)
	STS  _rx_wr_index1,R30
_0x7F:
	LDS  R26,_rx_counter1
	SUBI R26,-LOW(1)
	STS  _rx_counter1,R26
	CPI  R26,LOW(0x10)
	BRNE _0x80
	LDI  R30,LOW(0)
	STS  _rx_counter1,R30
	SET
	BLD  R2,4
_0x80:
_0x7E:
	ADIW R28,2
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R26,Y+
	RETI
_BacaSerial1:
	ST   -Y,R27
	ST   -Y,R26
	CALL __SAVELOCR4
;	TimeOut -> Y+4
;	i -> R16,R17
;	data -> R19
	CLT
	BLD  R2,1
	__GETWRN 16,17,0
_0x82:
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	CP   R16,R30
	CPC  R17,R31
	BRSH _0x83
	LDS  R30,_rx_counter1
	CPI  R30,0
	BREQ _0x84
	SET
	BLD  R2,1
	LDS  R30,_rx_rd_index1
	LDI  R31,0
	SUBI R30,LOW(-_rx_buffer1)
	SBCI R31,HIGH(-_rx_buffer1)
	LD   R19,Z
	LDS  R26,_rx_rd_index1
	SUBI R26,-LOW(1)
	STS  _rx_rd_index1,R26
	CPI  R26,LOW(0x10)
	BRNE _0x85
	LDI  R30,LOW(0)
	STS  _rx_rd_index1,R30
_0x85:
	cli
	LDS  R30,_rx_counter1
	SUBI R30,LOW(1)
	STS  _rx_counter1,R30
	sei
	MOV  R30,R19
	CALL __LOADLOCR4
	RJMP _0x20A0005
_0x84:
	__DELAY_USB 5
	__ADDWRN 16,17,1
	RJMP _0x82
_0x83:
	LDI  R30,LOW(0)
	CALL __LOADLOCR4
	RJMP _0x20A0005
;	data -> R17
_putchar1:
	ST   -Y,R26
;	c -> Y+0
_0x87:
	LDS  R30,155
	ANDI R30,LOW(0x20)
	BREQ _0x87
	LD   R30,Y
	STS  156,R30
	RJMP _0x20A0007
_BacaSensor:
	ST   -Y,R26
;	Alamat -> Y+1
;	Protokol -> Y+0
	LDD  R30,Y+1
	LD   R26,Y
	OR   R30,R26
	MOV  R26,R30
	RCALL _putchar1
	RJMP _0x20A0009
_TungguTombolKalibrasi:
	ST   -Y,R26
	ST   -Y,R17
;	Alamat -> Y+2
;	Protokol -> Y+1
;	filter -> R17
	LDI  R17,0
_0x8A:
	CPI  R17,101
	BRSH _0x8C
	SBIC 0x13,3
	LDI  R17,LOW(0)
	SUBI R17,-1
	RJMP _0x8A
_0x8C:
	SBIC 0x13,3
	RJMP _0x8E
	LDD  R30,Y+2
	LDD  R26,Y+1
	OR   R30,R26
	MOV  R26,R30
	RCALL _putchar1
	LDI  R30,LOW(1)
	LDD  R17,Y+0
	RJMP _0x20A0002
_0x8E:
	LDI  R26,LOW(0)
	RCALL _putchar1
	LDI  R30,LOW(0)
	LDD  R17,Y+0
	RJMP _0x20A0002
_PesanKalibrasiBerhasil:
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,0
	RCALL _LCD_TulisF
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,17
	RJMP _0x20A000B
_PesanKalibrasiGagal:
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,0
	RCALL _LCD_TulisF
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,34
_0x20A000B:
	RCALL _LCD_TulisKiri
	RET
;	Alamat -> Y+0
_KalibrasiHitamPutih:
	ST   -Y,R26
;	Alamat -> Y+1
;	Protocol -> Y+0
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,0
	RCALL _LCD_TulisF
	LD   R26,Y
	CPI  R26,LOW(0xC0)
	BRNE _0x95
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,153
	RCALL _LCD_TulisF
	RJMP _0x96
_0x95:
	LD   R26,Y
	CPI  R26,LOW(0xA0)
	BRNE _0x97
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,170
	RCALL _LCD_TulisF
	RJMP _0x98
_0x97:
	LD   R26,Y
	CPI  R26,LOW(0x90)
	BRNE _0x99
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,187
	RCALL _LCD_TulisF
	RJMP _0x9A
_0x99:
	RCALL _PesanKalibrasiGagal
	LDI  R30,LOW(0)
	RJMP _0x20A0009
_0x9A:
_0x98:
_0x96:
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RCALL _Buzzer
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDD  R30,Y+1
	LD   R26,Y
	OR   R30,R26
	MOV  R26,R30
	RCALL _putchar1
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,204
	RCALL _LCD_TulisKiri
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,85
	RCALL _LCD_TulisKanan
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	RCALL _TungguTombolKalibrasi
	CPI  R30,0
	BREQ _0x9B
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(200)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R26,LOW(0)
	RCALL _LCD_HapusKanan
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,221
	RCALL _LCD_TulisKiri
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	RCALL _TungguTombolKalibrasi
	CPI  R30,0
	BREQ _0x9C
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(200)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	RCALL _BacaSerial1
	MOV  R26,R30
	LD   R30,Y
	CP   R30,R26
	BRNE _0x9D
	RCALL _PesanKalibrasiBerhasil
	LDI  R30,LOW(1)
	RJMP _0x20A0009
_0x9D:
_0x9C:
_0x9B:
	RCALL _PesanKalibrasiGagal
	LDI  R30,LOW(0)
	RJMP _0x20A0009
_MPU6050ReadBytes:
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
;	regAddr -> Y+4
;	length -> Y+3
;	*data -> Y+1
;	i -> R17
	LDD  R26,Y+3
	CPI  R26,LOW(0x1)
	BRLO _0x9E
	LDI  R26,LOW(208)
	RCALL _I2C_Start
	LDD  R26,Y+4
	RCALL _I2C_Write
	__DELAY_USB 27
	LDI  R26,LOW(209)
	RCALL _I2C_Start
	LDD  R30,Y+3
	SUBI R30,LOW(1)
	STD  Y+3,R30
	LDD  R17,Y+3
_0xA0:
	CPI  R17,0
	BRLT _0xA1
	CPI  R17,0
	BRNE _0xA2
	MOV  R30,R17
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	PUSH R31
	PUSH R30
	RCALL _I2C_ReadNak
	POP  R26
	POP  R27
	RJMP _0x144
_0xA2:
	MOV  R30,R17
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	PUSH R31
	PUSH R30
	RCALL _I2C_ReadAck
	POP  R26
	POP  R27
_0x144:
	ST   X,R30
	SUBI R17,1
	RJMP _0xA0
_0xA1:
	RCALL _I2C_Stop
_0x9E:
	LDD  R17,Y+0
_0x20A000A:
	ADIW R28,5
	RET
_MPU6050ReadByte:
	ST   -Y,R27
	ST   -Y,R26
;	regAddr -> Y+2
;	*data -> Y+0
	LDI  R26,LOW(208)
	RCALL _I2C_Start
	LDD  R26,Y+2
	RCALL _I2C_Write
	__DELAY_USB 27
	LDI  R26,LOW(209)
	RCALL _I2C_Start
	RCALL _I2C_ReadNak
	LD   R26,Y
	LDD  R27,Y+1
	ST   X,R30
	RCALL _I2C_Stop
	LDI  R30,LOW(1)
	RJMP _0x20A0002
_MPU6050WriteByte:
	ST   -Y,R26
;	regAddr -> Y+1
;	data -> Y+0
	LDI  R26,LOW(208)
	RCALL _I2C_Start
	LDD  R26,Y+1
	RCALL _I2C_Write
	LD   R26,Y
	RCALL _I2C_Write
	RCALL _I2C_Stop
_0x20A0009:
	ADIW R28,2
	RET
;	regAddr -> Y+4
;	length -> Y+3
;	*data -> Y+1
;	i -> R17
_mpu6050_readBits:
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
;	regAddr -> Y+5
;	bitStart -> Y+4
;	length -> Y+3
;	*data -> Y+1
;	count -> R17
	LDI  R17,0
	LDD  R26,Y+3
	CPI  R26,LOW(0x1)
	BRLO _0xA8
	SBIW R28,1
;	regAddr -> Y+6
;	bitStart -> Y+5
;	length -> Y+4
;	*data -> Y+2
;	b -> Y+0
	LDD  R30,Y+6
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,1
	RCALL _MPU6050ReadByte
	MOV  R17,R30
	CPI  R30,0
	BREQ _0xA9
	SBIW R28,1
;	regAddr -> Y+7
;	bitStart -> Y+6
;	length -> Y+5
;	*data -> Y+3
;	b -> Y+1
;	mask -> Y+0
	LDD  R30,Y+5
	LDI  R26,LOW(1)
	CALL __LSLB12
	SUBI R30,LOW(1)
	MOV  R0,R30
	LDD  R26,Y+5
	LDD  R30,Y+6
	SUB  R30,R26
	SUBI R30,-LOW(1)
	MOV  R26,R0
	CALL __LSLB12
	ST   Y,R30
	LDD  R26,Y+1
	AND  R30,R26
	STD  Y+1,R30
	LDD  R26,Y+5
	LDD  R30,Y+6
	SUB  R30,R26
	SUBI R30,-LOW(1)
	LDD  R26,Y+1
	CALL __LSRB12
	STD  Y+1,R30
	LDD  R26,Y+3
	LDD  R27,Y+3+1
	ST   X,R30
	ADIW R28,1
_0xA9:
	ADIW R28,1
_0xA8:
	MOV  R30,R17
	LDD  R17,Y+0
	RJMP _0x20A0005
;	regAddr -> Y+5
;	bitNum -> Y+4
;	*data -> Y+2
;	b -> R17
;	count -> R16
_mpu6050_writeBits:
	ST   -Y,R26
;	regAddr -> Y+3
;	bitStart -> Y+2
;	length -> Y+1
;	data -> Y+0
	LDD  R26,Y+1
	CPI  R26,LOW(0x1)
	BRLO _0xAA
	SBIW R28,1
	LDI  R30,LOW(0)
	ST   Y,R30
;	regAddr -> Y+4
;	bitStart -> Y+3
;	length -> Y+2
;	data -> Y+1
;	b -> Y+0
	LDD  R30,Y+4
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,1
	RCALL _MPU6050ReadByte
	CPI  R30,0
	BREQ _0xAB
	SBIW R28,1
;	regAddr -> Y+5
;	bitStart -> Y+4
;	length -> Y+3
;	data -> Y+2
;	b -> Y+1
;	mask -> Y+0
	LDD  R30,Y+3
	LDI  R26,LOW(1)
	CALL __LSLB12
	SUBI R30,LOW(1)
	MOV  R0,R30
	LDD  R26,Y+3
	LDD  R30,Y+4
	SUB  R30,R26
	SUBI R30,-LOW(1)
	MOV  R26,R0
	CALL __LSLB12
	ST   Y,R30
	LDD  R26,Y+3
	LDD  R30,Y+4
	SUB  R30,R26
	SUBI R30,-LOW(1)
	LDD  R26,Y+2
	CALL __LSLB12
	STD  Y+2,R30
	LD   R30,Y
	LDD  R26,Y+2
	AND  R30,R26
	STD  Y+2,R30
	LD   R30,Y
	COM  R30
	LDD  R26,Y+1
	AND  R30,R26
	STD  Y+1,R30
	LDD  R30,Y+2
	LDD  R26,Y+1
	OR   R30,R26
	STD  Y+1,R30
	LDD  R30,Y+5
	ST   -Y,R30
	LDD  R26,Y+2
	RCALL _MPU6050WriteByte
	ADIW R28,1
_0xAB:
	ADIW R28,1
_0xAA:
	RJMP _0x20A0008
_mpu6050_writeBit:
	ST   -Y,R26
	ST   -Y,R17
;	regAddr -> Y+3
;	bitNum -> Y+2
;	data -> Y+1
;	b -> R17
	LDD  R30,Y+3
	ST   -Y,R30
	IN   R26,SPL
	IN   R27,SPH
	PUSH R17
	RCALL _MPU6050ReadByte
	POP  R17
	LDD  R26,Y+1
	CPI  R26,LOW(0x0)
	BREQ _0xAC
	LDD  R30,Y+2
	LDI  R26,LOW(1)
	CALL __LSLB12
	OR   R30,R17
	RJMP _0xAD
_0xAC:
	LDD  R30,Y+2
	LDI  R26,LOW(1)
	CALL __LSLB12
	COM  R30
	AND  R30,R17
_0xAD:
	MOV  R17,R30
	LDD  R30,Y+3
	ST   -Y,R30
	MOV  R26,R17
	RCALL _MPU6050WriteByte
	LDD  R17,Y+0
_0x20A0008:
	ADIW R28,4
	RET
_MPU6050_SleepDisabled:
	LDI  R30,LOW(107)
	ST   -Y,R30
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(0)
	RJMP _0x20A0006
_MPU6050_TestConnection:
	SBIW R28,1
;	buffer -> Y+0
	LDI  R30,LOW(117)
	ST   -Y,R30
	LDI  R30,LOW(6)
	ST   -Y,R30
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,3
	RCALL _mpu6050_readBits
	LD   R26,Y
	CPI  R26,LOW(0x34)
	BRNE _0xAF
	LDI  R30,LOW(1)
	RJMP _0x20A0007
_0xAF:
	LDI  R30,LOW(0)
_0x20A0007:
	ADIW R28,1
	RET
_MPU6050_Init:
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	RCALL _MPU6050_SleepDisabled
	LDI  R26,LOW(10)
	LDI  R27,0
	CALL _delay_ms
	LDI  R30,LOW(107)
	ST   -Y,R30
	LDI  R30,LOW(2)
	ST   -Y,R30
	LDI  R30,LOW(3)
	ST   -Y,R30
	LDI  R26,LOW(1)
	RCALL _mpu6050_writeBits
	LDI  R30,LOW(26)
	ST   -Y,R30
	LDI  R30,LOW(2)
	ST   -Y,R30
	LDI  R30,LOW(3)
	ST   -Y,R30
	LDI  R26,LOW(3)
	RCALL _mpu6050_writeBits
	LDI  R30,LOW(25)
	ST   -Y,R30
	LDI  R26,LOW(9)
	RCALL _MPU6050WriteByte
	LDI  R30,LOW(27)
	ST   -Y,R30
	LDI  R30,LOW(4)
	ST   -Y,R30
	LDI  R30,LOW(2)
	ST   -Y,R30
	LDI  R26,LOW(2)
	RCALL _mpu6050_writeBits
	LDI  R30,LOW(28)
	ST   -Y,R30
	LDI  R30,LOW(4)
	ST   -Y,R30
	LDI  R30,LOW(2)
	ST   -Y,R30
	LDI  R26,LOW(0)
	RCALL _mpu6050_writeBits
	LDI  R30,LOW(106)
	ST   -Y,R30
	LDI  R30,LOW(5)
	ST   -Y,R30
	LDI  R26,LOW(0)
	RCALL _mpu6050_writeBit
	LDI  R30,LOW(55)
	ST   -Y,R30
	LDI  R30,LOW(1)
	ST   -Y,R30
	LDI  R26,LOW(1)
_0x20A0006:
	RCALL _mpu6050_writeBit
	RET
_BacaAccelerometer:
	SBIW R28,6
;	buffer -> Y+0
	LDI  R30,LOW(59)
	ST   -Y,R30
	LDI  R30,LOW(6)
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,2
	RCALL _MPU6050ReadBytes
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	STS  _Ax,R30
	STS  _Ax+1,R31
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	STS  _Ay,R30
	STS  _Ay+1,R31
	LD   R30,Y
	LDD  R31,Y+1
	STS  _Az,R30
	STS  _Az+1,R31
	RJMP _0x20A0005
_BacaGyroScope:
	SBIW R28,6
;	buffer -> Y+0
	LDI  R30,LOW(67)
	ST   -Y,R30
	LDI  R30,LOW(6)
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,2
	RCALL _MPU6050ReadBytes
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	STS  _Gx,R30
	STS  _Gx+1,R31
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	STS  _Gy,R30
	STS  _Gy+1,R31
	LD   R30,Y
	LDD  R31,Y+1
	STS  _Gz,R30
	STS  _Gz+1,R31
_0x20A0005:
	ADIW R28,6
	RET
_invSqrt:
	CALL __PUTPARD2
	SBIW R28,12
;	x -> Y+12
;	halfx -> Y+8
;	y -> Y+4
;	i -> Y+0
	__GETD1S 12
	__GETD2N 0x3F000000
	CALL __MULF12
	__PUTD1S 8
	__GETD1S 12
	__PUTD1S 4
	CALL __PUTD1S0
	CALL __ASRD1
	__GETD2N 0x5F3759DF
	CALL __SUBD21
	CALL __PUTD2S0
	CALL __GETD1S0
	__PUTD1S 4
	__GETD2S 8
	CALL __MULF12
	__GETD2S 4
	CALL __MULF12
	__GETD2N 0x3FC00000
	CALL __SWAPD12
	CALL __SUBF12
	__GETD2S 4
	CALL __MULF12
	__PUTD1S 4
	RJMP _0x20A0004
;	x -> Y+2
;	*i -> R16,R17
;	K_0 -> Y+8
;	K_1 -> Y+4
;	buffer -> Y+0
_HitungKalmanPitch:
	SBIW R28,16
;	K_0 -> Y+12
;	K_1 -> Y+8
;	buffer -> Y+4
;	AccPitch -> Y+0
	LDS  R30,_P_11_S000004B000
	LDS  R31,_P_11_S000004B000+1
	LDS  R22,_P_11_S000004B000+2
	LDS  R23,_P_11_S000004B000+3
	__GETD2N 0x3BA3D70A
	CALL __MULF12
	__PUTD1S 4
	LDS  R26,_P_10_S000004B000
	LDS  R27,_P_10_S000004B000+1
	LDS  R24,_P_10_S000004B000+2
	LDS  R25,_P_10_S000004B000+3
	CALL __SUBF12
	LDS  R26,_P_01_S000004B000
	LDS  R27,_P_01_S000004B000+1
	LDS  R24,_P_01_S000004B000+2
	LDS  R25,_P_01_S000004B000+3
	CALL __SUBF12
	__GETD2N 0x3A83126F
	CALL __ADDF12
	__GETD2N 0x3BA3D70A
	CALL __MULF12
	LDS  R26,_P_00_S000004B000
	LDS  R27,_P_00_S000004B000+1
	LDS  R24,_P_00_S000004B000+2
	LDS  R25,_P_00_S000004B000+3
	CALL __ADDF12
	STS  _P_00_S000004B000,R30
	STS  _P_00_S000004B000+1,R31
	STS  _P_00_S000004B000+2,R22
	STS  _P_00_S000004B000+3,R23
	__GETD2S 4
	LDS  R30,_P_01_S000004B000
	LDS  R31,_P_01_S000004B000+1
	LDS  R22,_P_01_S000004B000+2
	LDS  R23,_P_01_S000004B000+3
	CALL __SUBF12
	STS  _P_01_S000004B000,R30
	STS  _P_01_S000004B000+1,R31
	STS  _P_01_S000004B000+2,R22
	STS  _P_01_S000004B000+3,R23
	__GETD2S 4
	LDS  R30,_P_10_S000004B000
	LDS  R31,_P_10_S000004B000+1
	LDS  R22,_P_10_S000004B000+2
	LDS  R23,_P_10_S000004B000+3
	CALL __SUBF12
	STS  _P_10_S000004B000,R30
	STS  _P_10_S000004B000+1,R31
	STS  _P_10_S000004B000+2,R22
	STS  _P_10_S000004B000+3,R23
	LDS  R30,_P_11_S000004B000
	LDS  R31,_P_11_S000004B000+1
	LDS  R22,_P_11_S000004B000+2
	LDS  R23,_P_11_S000004B000+3
	__GETD2N 0x377BA882
	CALL __ADDF12
	STS  _P_11_S000004B000,R30
	STS  _P_11_S000004B000+1,R31
	STS  _P_11_S000004B000+2,R22
	STS  _P_11_S000004B000+3,R23
	LDS  R30,_P_00_S000004B000
	LDS  R31,_P_00_S000004B000+1
	LDS  R22,_P_00_S000004B000+2
	LDS  R23,_P_00_S000004B000+3
	__GETD2N 0x3CF5C28F
	CALL __ADDF12
	__GETD2N 0x3F800000
	CALL __DIVF21
	__PUTD1S 4
	LDS  R26,_P_00_S000004B000
	LDS  R27,_P_00_S000004B000+1
	LDS  R24,_P_00_S000004B000+2
	LDS  R25,_P_00_S000004B000+3
	CALL __MULF12
	__PUTD1S 12
	__GETD1S 4
	LDS  R26,_P_10_S000004B000
	LDS  R27,_P_10_S000004B000+1
	LDS  R24,_P_10_S000004B000+2
	LDS  R25,_P_10_S000004B000+3
	CALL __MULF12
	__PUTD1S 8
	LDS  R30,_Gy
	LDS  R31,_Gy+1
	CALL __CWD1
	CALL __CDF1
	LDS  R26,_GyOffset
	LDS  R27,_GyOffset+1
	LDS  R24,_GyOffset+2
	LDS  R25,_GyOffset+3
	CALL __SUBF12
	__GETD2N 0x391FD80A
	CALL __MULF12
	LDS  R26,_Pitch
	LDS  R27,_Pitch+1
	LDS  R24,_Pitch+2
	LDS  R25,_Pitch+3
	CALL __ADDF12
	STS  _Pitch,R30
	STS  _Pitch+1,R31
	STS  _Pitch+2,R22
	STS  _Pitch+3,R23
	LDS  R26,_Ax
	LDS  R27,_Ax+1
	CALL __CPW02
	BRLT PC+3
	JMP _0xB5
	LDS  R30,_Az
	LDS  R31,_Az+1
	CALL __CWD1
	CALL __CDF1
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_Ax
	LDS  R31,_Ax+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_Ax
	LDS  R31,_Ax+1
	CALL __CWD1
	CALL __CDF1
	CALL __MULF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_Ay
	LDS  R31,_Ay+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_Ay
	LDS  R31,_Ay+1
	CALL __CWD1
	CALL __CDF1
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
	MOVW R26,R30
	MOVW R24,R22
	RCALL _invSqrt
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	CALL _atan
	__GETD2N 0x42652EE1
	CALL __MULF12
	RJMP _0x147
_0xB5:
	LDS  R26,_Az
	LDS  R27,_Az+1
	CALL __CPW02
	BRLT PC+3
	JMP _0xB7
	LDS  R30,_Ax
	LDS  R31,_Ax+1
	CALL __CWD1
	CALL __CDF1
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_Az
	LDS  R31,_Az+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_Az
	LDS  R31,_Az+1
	CALL __CWD1
	CALL __CDF1
	CALL __MULF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_Ay
	LDS  R31,_Ay+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_Ay
	LDS  R31,_Ay+1
	CALL __CWD1
	CALL __CDF1
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
	MOVW R26,R30
	MOVW R24,R22
	RCALL _invSqrt
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	CALL _atan
	__GETD2N 0x42652EE1
	CALL __MULF12
	__GETD2N 0x42B40000
	RJMP _0x148
_0xB7:
	LDS  R30,_Ax
	LDS  R31,_Ax+1
	CALL __CWD1
	CALL __CDF1
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_Az
	LDS  R31,_Az+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_Az
	LDS  R31,_Az+1
	CALL __CWD1
	CALL __CDF1
	CALL __MULF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_Ay
	LDS  R31,_Ay+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	LDS  R30,_Ay
	LDS  R31,_Ay+1
	CALL __CWD1
	CALL __CDF1
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
	MOVW R26,R30
	MOVW R24,R22
	RCALL _invSqrt
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	CALL _atan
	__GETD2N 0x42652EE1
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x42B40000
_0x148:
	CALL __SWAPD12
	CALL __SUBF12
_0x147:
	CALL __PUTD1S0
	LDS  R26,_Pitch
	LDS  R27,_Pitch+1
	LDS  R24,_Pitch+2
	LDS  R25,_Pitch+3
	CALL __SUBF12
	__PUTD1S 4
	__GETD2S 12
	CALL __MULF12
	LDS  R26,_Pitch
	LDS  R27,_Pitch+1
	LDS  R24,_Pitch+2
	LDS  R25,_Pitch+3
	CALL __ADDF12
	STS  _Pitch,R30
	STS  _Pitch+1,R31
	STS  _Pitch+2,R22
	STS  _Pitch+3,R23
	__GETD1S 4
	__GETD2S 8
	CALL __MULF12
	LDS  R26,_GyOffset
	LDS  R27,_GyOffset+1
	LDS  R24,_GyOffset+2
	LDS  R25,_GyOffset+3
	CALL __ADDF12
	STS  _GyOffset,R30
	STS  _GyOffset+1,R31
	STS  _GyOffset+2,R22
	STS  _GyOffset+3,R23
	LDS  R30,_P_00_S000004B000
	LDS  R31,_P_00_S000004B000+1
	LDS  R22,_P_00_S000004B000+2
	LDS  R23,_P_00_S000004B000+3
	__GETD2S 12
	CALL __MULF12
	LDS  R26,_P_00_S000004B000
	LDS  R27,_P_00_S000004B000+1
	LDS  R24,_P_00_S000004B000+2
	LDS  R25,_P_00_S000004B000+3
	CALL __SWAPD12
	CALL __SUBF12
	STS  _P_00_S000004B000,R30
	STS  _P_00_S000004B000+1,R31
	STS  _P_00_S000004B000+2,R22
	STS  _P_00_S000004B000+3,R23
	LDS  R30,_P_01_S000004B000
	LDS  R31,_P_01_S000004B000+1
	LDS  R22,_P_01_S000004B000+2
	LDS  R23,_P_01_S000004B000+3
	__GETD2S 12
	CALL __MULF12
	LDS  R26,_P_01_S000004B000
	LDS  R27,_P_01_S000004B000+1
	LDS  R24,_P_01_S000004B000+2
	LDS  R25,_P_01_S000004B000+3
	CALL __SWAPD12
	CALL __SUBF12
	STS  _P_01_S000004B000,R30
	STS  _P_01_S000004B000+1,R31
	STS  _P_01_S000004B000+2,R22
	STS  _P_01_S000004B000+3,R23
	LDS  R30,_P_00_S000004B000
	LDS  R31,_P_00_S000004B000+1
	LDS  R22,_P_00_S000004B000+2
	LDS  R23,_P_00_S000004B000+3
	__GETD2S 8
	CALL __MULF12
	LDS  R26,_P_10_S000004B000
	LDS  R27,_P_10_S000004B000+1
	LDS  R24,_P_10_S000004B000+2
	LDS  R25,_P_10_S000004B000+3
	CALL __SWAPD12
	CALL __SUBF12
	STS  _P_10_S000004B000,R30
	STS  _P_10_S000004B000+1,R31
	STS  _P_10_S000004B000+2,R22
	STS  _P_10_S000004B000+3,R23
	LDS  R30,_P_01_S000004B000
	LDS  R31,_P_01_S000004B000+1
	LDS  R22,_P_01_S000004B000+2
	LDS  R23,_P_01_S000004B000+3
	__GETD2S 8
	CALL __MULF12
	LDS  R26,_P_11_S000004B000
	LDS  R27,_P_11_S000004B000+1
	LDS  R24,_P_11_S000004B000+2
	LDS  R25,_P_11_S000004B000+3
	CALL __SWAPD12
	CALL __SUBF12
	STS  _P_11_S000004B000,R30
	STS  _P_11_S000004B000+1,R31
	STS  _P_11_S000004B000+2,R22
	STS  _P_11_S000004B000+3,R23
_0x20A0004:
	ADIW R28,16
	RET
_HitungYaw:
	LDS  R30,_Gx
	LDS  R31,_Gx+1
	CALL __CWD1
	CALL __CDF1
	LDS  R26,_GxOffset
	LDS  R27,_GxOffset+1
	LDS  R24,_GxOffset+2
	LDS  R25,_GxOffset+3
	CALL __SUBF12
	__GETD2N 0x391FD80A
	CALL __MULF12
	LDS  R26,_Yaw
	LDS  R27,_Yaw+1
	LDS  R24,_Yaw+2
	LDS  R25,_Yaw+3
	CALL __ADDF12
	STS  _Yaw,R30
	STS  _Yaw+1,R31
	STS  _Yaw+2,R22
	STS  _Yaw+3,R23
	RET
_KalibrasiGyroScope:
	ST   -Y,R17
;	i -> R17
	LDI  R30,LOW(0)
	STS  _GxOffset,R30
	STS  _GxOffset+1,R30
	STS  _GxOffset+2,R30
	STS  _GxOffset+3,R30
	STS  _GyOffset,R30
	STS  _GyOffset+1,R30
	STS  _GyOffset+2,R30
	STS  _GyOffset+3,R30
	STS  _GzOffset,R30
	STS  _GzOffset+1,R30
	STS  _GzOffset+2,R30
	STS  _GzOffset+3,R30
	LDI  R17,LOW(0)
_0xBA:
	CPI  R17,100
	BRLO PC+3
	JMP _0xBB
	RCALL _BacaGyroScope
	LDS  R30,_Gx
	LDS  R31,_Gx+1
	LDS  R26,_GxOffset
	LDS  R27,_GxOffset+1
	LDS  R24,_GxOffset+2
	LDS  R25,_GxOffset+3
	CALL __CWD1
	CALL __CDF1
	CALL __ADDF12
	STS  _GxOffset,R30
	STS  _GxOffset+1,R31
	STS  _GxOffset+2,R22
	STS  _GxOffset+3,R23
	LDS  R30,_Gy
	LDS  R31,_Gy+1
	LDS  R26,_GyOffset
	LDS  R27,_GyOffset+1
	LDS  R24,_GyOffset+2
	LDS  R25,_GyOffset+3
	CALL __CWD1
	CALL __CDF1
	CALL __ADDF12
	STS  _GyOffset,R30
	STS  _GyOffset+1,R31
	STS  _GyOffset+2,R22
	STS  _GyOffset+3,R23
	LDS  R30,_Gz
	LDS  R31,_Gz+1
	LDS  R26,_GzOffset
	LDS  R27,_GzOffset+1
	LDS  R24,_GzOffset+2
	LDS  R25,_GzOffset+3
	CALL __CWD1
	CALL __CDF1
	CALL __ADDF12
	STS  _GzOffset,R30
	STS  _GzOffset+1,R31
	STS  _GzOffset+2,R22
	STS  _GzOffset+3,R23
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,-1
	RJMP _0xBA
_0xBB:
	LDS  R26,_GxOffset
	LDS  R27,_GxOffset+1
	LDS  R24,_GxOffset+2
	LDS  R25,_GxOffset+3
	__GETD1N 0x3C23D70A
	CALL __MULF12
	STS  _GxOffset,R30
	STS  _GxOffset+1,R31
	STS  _GxOffset+2,R22
	STS  _GxOffset+3,R23
	LDS  R26,_GyOffset
	LDS  R27,_GyOffset+1
	LDS  R24,_GyOffset+2
	LDS  R25,_GyOffset+3
	__GETD1N 0x3C23D70A
	CALL __MULF12
	STS  _GyOffset,R30
	STS  _GyOffset+1,R31
	STS  _GyOffset+2,R22
	STS  _GyOffset+3,R23
	LDS  R26,_GzOffset
	LDS  R27,_GzOffset+1
	LDS  R24,_GzOffset+2
	LDS  R25,_GzOffset+3
	__GETD1N 0x3C23D70A
	CALL __MULF12
	STS  _GzOffset,R30
	STS  _GzOffset+1,R31
	STS  _GzOffset+2,R22
	STS  _GzOffset+3,R23
	RJMP _0x20A0003
_HMC5883L_Init:
	ST   -Y,R17
;	regValue -> R17
	LDI  R17,0
	LDI  R30,LOW(0)
	STS  _hmc5883l_scale_G000,R30
	STS  _hmc5883l_scale_G000+1,R30
	STS  _hmc5883l_scale_G000+2,R30
	STS  _hmc5883l_scale_G000+3,R30
	LDI  R17,LOW(1)
	__GETD1N 0x3F6B851F
	STS  _hmc5883l_scale_G000,R30
	STS  _hmc5883l_scale_G000+1,R31
	STS  _hmc5883l_scale_G000+2,R22
	STS  _hmc5883l_scale_G000+3,R23
	MOV  R30,R17
	SWAP R30
	ANDI R30,0xF0
	LSL  R30
	MOV  R17,R30
	LDI  R26,LOW(60)
	CALL _I2C_Start_Wait
	LDI  R26,LOW(1)
	CALL _I2C_Write
	MOV  R26,R17
	CALL _I2C_Write
	CALL _I2C_Stop
	LDI  R26,LOW(60)
	CALL _I2C_Start_Wait
	LDI  R26,LOW(2)
	CALL _I2C_Write
	LDI  R26,LOW(0)
	CALL _I2C_Write
	CALL _I2C_Stop
_0x20A0003:
	LD   R17,Y+
	RET
;	rate -> R17
;	rate -> Y+1
;	buffer -> R17
;	*mxraw -> Y+11
;	*myraw -> Y+9
;	*mzraw -> Y+7
;	i -> R17
;	buffer -> Y+1
;	*mx -> Y+22
;	*my -> Y+20
;	*mz -> Y+18
;	mxraw -> R16,R17
;	myraw -> R18,R19
;	mzraw -> R20,R21
;	mxt -> Y+14
;	myt -> Y+10
;	mzt -> Y+6
_HMC5883L_TestConnection:
	SBIW R28,3
;	buffer -> Y+0
	LDI  R26,LOW(60)
	CALL _I2C_Start_Wait
	LDI  R26,LOW(10)
	CALL _I2C_Write
	CALL _I2C_Stop
	LDI  R26,LOW(61)
	CALL _I2C_Start_Wait
	CALL _I2C_ReadAck
	ST   Y,R30
	CALL _I2C_ReadAck
	STD  Y+1,R30
	CALL _I2C_ReadNak
	STD  Y+2,R30
	CALL _I2C_Stop
	LD   R26,Y
	CPI  R26,LOW(0x48)
	BRNE _0xC2
	LDD  R26,Y+1
	CPI  R26,LOW(0x34)
	BRNE _0xC2
	LDD  R26,Y+2
	CPI  R26,LOW(0x33)
	BREQ _0xC3
_0xC2:
	RJMP _0xC1
_0xC3:
	LDI  R30,LOW(1)
	RJMP _0x20A0002
_0xC1:
	LDI  R30,LOW(0)
_0x20A0002:
	ADIW R28,3
	RET
_ext_int6_isr:
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	SBIS 0x1,6
	RJMP _0xC5
	SBIS 0x16,0
	RJMP _0xC6
	cli
	MOVW R30,R10
	ADIW R30,1
	MOVW R10,R30
	sei
	RJMP _0xC7
_0xC6:
	cli
	MOVW R30,R10
	SBIW R30,1
	MOVW R10,R30
	sei
_0xC7:
	RJMP _0xC8
_0xC5:
	SBIS 0x16,0
	RJMP _0xC9
	cli
	MOVW R30,R10
	SBIW R30,1
	MOVW R10,R30
	sei
	RJMP _0xCA
_0xC9:
	cli
	MOVW R30,R10
	ADIW R30,1
	MOVW R10,R30
	sei
_0xCA:
_0xC8:
	LDS  R30,_dCounter1
	SUBI R30,-LOW(1)
	STS  _dCounter1,R30
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	RETI
_ext_int7_isr:
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	SBIS 0x1,7
	RJMP _0xCB
	SBIS 0x16,2
	RJMP _0xCC
	cli
	MOVW R30,R12
	SBIW R30,1
	MOVW R12,R30
	sei
	RJMP _0xCD
_0xCC:
	cli
	MOVW R30,R12
	ADIW R30,1
	MOVW R12,R30
	sei
_0xCD:
	RJMP _0xCE
_0xCB:
	SBIS 0x16,2
	RJMP _0xCF
	cli
	MOVW R30,R12
	ADIW R30,1
	MOVW R12,R30
	sei
	RJMP _0xD0
_0xCF:
	cli
	MOVW R30,R12
	SBIW R30,1
	MOVW R12,R30
	sei
_0xD0:
_0xCE:
	LDS  R30,_dCounter2
	SUBI R30,-LOW(1)
	STS  _dCounter2,R30
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	RETI
_timer3_compc_isr:
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	LDI  R26,LOW(_ServoCounter_S0000059000)
	LDI  R27,HIGH(_ServoCounter_S0000059000)
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	CPI  R30,LOW(0x51)
	LDI  R26,HIGH(0x51)
	CPC  R31,R26
	BRSH _0xD1
	LDS  R26,_ServoCounter_S0000059000
	CP   R4,R26
	BRNE _0xD2
	CBI  0x12,4
_0xD2:
	LDS  R26,_ServoCounter_S0000059000
	CP   R7,R26
	BRNE _0xD5
	CBI  0x12,5
_0xD5:
	LDS  R26,_ServoCounter_S0000059000
	CP   R6,R26
	BRNE _0xD8
	CBI  0x12,6
_0xD8:
	LDS  R26,_ServoCounter_S0000059000
	CP   R9,R26
	BRNE _0xDB
	CBI  0x12,7
_0xDB:
	LDS  R26,_ServoCounter_S0000059000
	CP   R5,R26
	BRNE _0xDE
	CBI  0x18,3
_0xDE:
	RJMP _0xE1
_0xD1:
	LDS  R26,_ServoCounter_S0000059000
	LDS  R27,_ServoCounter_S0000059000+1
	CPI  R26,LOW(0x321)
	LDI  R30,HIGH(0x321)
	CPC  R27,R30
	BRLO _0xE2
	LDI  R30,LOW(0)
	STS  _ServoCounter_S0000059000,R30
	STS  _ServoCounter_S0000059000+1,R30
	SBI  0x12,4
	SBI  0x12,5
	SBI  0x12,6
	SBI  0x12,7
	SBI  0x18,3
_0xE2:
_0xE1:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	RETI
_BalancingControl:
	SBIW R28,20
;	CenterB -> Y+16
;	Error -> Y+12
;	dError -> Y+8
;	U -> Y+4
;	ErrorSpeed -> Y+0
	LDS  R26,_Rotary1_S000005A000
	LDS  R27,_Rotary1_S000005A000+1
	MOVW R30,R10
	SUB  R30,R26
	SBC  R31,R27
	MOVW R0,R30
	LDS  R26,_Rotary2_S000005A000
	LDS  R27,_Rotary2_S000005A000+1
	MOVW R30,R12
	SUB  R30,R26
	SBC  R31,R27
	ADD  R30,R0
	ADC  R31,R1
	CALL __CWD1
	CALL __CDF1
	__GETD2N 0x3F000000
	CALL __MULF12
	LDS  R26,_TargetSpeedB
	CALL __CBD2
	CALL __CDF2
	CALL __SWAPD12
	CALL __SUBF12
	CALL __PUTD1S0
	__PUTWMRN _Rotary1_S000005A000,0,10,11
	__PUTWMRN _Rotary2_S000005A000,0,12,13
	CALL __GETD2S0
	__GETD1N 0x3DCCCCCD
	CALL __MULF12
	LDS  R26,_iErrorSpeed_S000005A000
	LDS  R27,_iErrorSpeed_S000005A000+1
	LDS  R24,_iErrorSpeed_S000005A000+2
	LDS  R25,_iErrorSpeed_S000005A000+3
	CALL __ADDF12
	STS  _iErrorSpeed_S000005A000,R30
	STS  _iErrorSpeed_S000005A000+1,R31
	STS  _iErrorSpeed_S000005A000+2,R22
	STS  _iErrorSpeed_S000005A000+3,R23
	CALL __CFD1
	SBIW R30,4
	BRLT _0xED
	__GETD1N 0x40400000
	RJMP _0x14A
_0xED:
	LDS  R30,_iErrorSpeed_S000005A000
	LDS  R31,_iErrorSpeed_S000005A000+1
	LDS  R22,_iErrorSpeed_S000005A000+2
	LDS  R23,_iErrorSpeed_S000005A000+3
	CALL __CFD1
	CPI  R30,LOW(0xFFFD)
	LDI  R26,HIGH(0xFFFD)
	CPC  R31,R26
	BRGE _0xEF
	__GETD1N 0xC0400000
_0x14A:
	STS  _iErrorSpeed_S000005A000,R30
	STS  _iErrorSpeed_S000005A000+1,R31
	STS  _iErrorSpeed_S000005A000+2,R22
	STS  _iErrorSpeed_S000005A000+3,R23
_0xEF:
	CALL __GETD2S0
	__GETD1N 0x3E4CCCCD
	CALL __MULF12
	__GETD2N 0x41000000
	CALL __ADDF12
	LDS  R26,_iErrorSpeed_S000005A000
	LDS  R27,_iErrorSpeed_S000005A000+1
	LDS  R24,_iErrorSpeed_S000005A000+2
	LDS  R25,_iErrorSpeed_S000005A000+3
	CALL __ADDF12
	__PUTD1S 16
	LDS  R30,_Pitch
	LDS  R31,_Pitch+1
	LDS  R22,_Pitch+2
	LDS  R23,_Pitch+3
	CALL __CFD1
	CPI  R30,LOW(0x2D)
	BRGE _0xF1
	MOV  R26,R30
	LDI  R30,LOW(211)
	CP   R30,R26
	BRLT _0xF2
_0xF1:
	RJMP _0xF0
_0xF2:
	__GETD2S 16
	LDS  R30,_Pitch
	LDS  R31,_Pitch+1
	LDS  R22,_Pitch+2
	LDS  R23,_Pitch+3
	CALL __SUBF12
	__PUTD1S 12
	__GETD2S 12
	__GETD1N 0x3EB33333
	CALL __MULF12
	LDS  R26,_iError_S000005A000
	LDS  R27,_iError_S000005A000+1
	LDS  R24,_iError_S000005A000+2
	LDS  R25,_iError_S000005A000+3
	CALL __ADDF12
	STS  _iError_S000005A000,R30
	STS  _iError_S000005A000+1,R31
	STS  _iError_S000005A000+2,R22
	STS  _iError_S000005A000+3,R23
	__GETD1S 12
	STS  _LastError_S000005A000,R30
	STS  _LastError_S000005A000+1,R31
	STS  _LastError_S000005A000+2,R22
	STS  _LastError_S000005A000+3,R23
	LDS  R26,_iError_S000005A000
	LDS  R27,_iError_S000005A000+1
	LDS  R24,_iError_S000005A000+2
	LDS  R25,_iError_S000005A000+3
	__GETD1N 0x42C80000
	CALL __CMPF12
	BREQ PC+2
	BRCC PC+3
	JMP  _0xF3
	RJMP _0x14B
_0xF3:
	LDS  R26,_iError_S000005A000
	LDS  R27,_iError_S000005A000+1
	LDS  R24,_iError_S000005A000+2
	LDS  R25,_iError_S000005A000+3
	__GETD1N 0xC2C80000
	CALL __CMPF12
	BRSH _0xF5
_0x14B:
	STS  _iError_S000005A000,R30
	STS  _iError_S000005A000+1,R31
	STS  _iError_S000005A000+2,R22
	STS  _iError_S000005A000+3,R23
_0xF5:
	LDS  R30,_Gy
	LDS  R31,_Gy+1
	CALL __CWD1
	CALL __CDF1
	LDS  R26,_GyOffset
	LDS  R27,_GyOffset+1
	LDS  R24,_GyOffset+2
	LDS  R25,_GyOffset+3
	CALL __SUBF12
	__PUTD1S 8
	LDS  R30,_LastError_S000005A000
	LDS  R31,_LastError_S000005A000+1
	LDS  R22,_LastError_S000005A000+2
	LDS  R23,_LastError_S000005A000+3
	__GETD2S 12
	CALL __ADDF12
	__GETD2N 0x40C00000
	CALL __MULF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	__GETD2S 8
	__GETD1N 0x3CA3D70A
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	LDS  R30,_iError_S000005A000
	LDS  R31,_iError_S000005A000+1
	LDS  R22,_iError_S000005A000+2
	LDS  R23,_iError_S000005A000+3
	__GETD2N 0x40800000
	CALL __MULF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __ADDF12
	__PUTD1S 4
	__GETD2S 4
	__GETD1N 0x43C80000
	CALL __CMPF12
	BREQ PC+2
	BRCC PC+3
	JMP  _0xF6
	RJMP _0x14C
_0xF6:
	__GETD2S 4
	__GETD1N 0xC3C80000
	CALL __CMPF12
	BRSH _0xF8
_0x14C:
	__PUTD1S 4
_0xF8:
	__GETD1S 4
	CALL __CFD1
	MOVW R26,R30
	LDS  R30,_SteerB
	LDS  R31,_SteerB+1
	SUB  R26,R30
	SBC  R27,R31
	ST   -Y,R27
	ST   -Y,R26
	__GETD1S 6
	CALL __CFD1
	LDS  R26,_SteerB
	LDS  R27,_SteerB+1
	ADD  R26,R30
	ADC  R27,R31
	CALL _SetDataMotorPWM
	RJMP _0xF9
_0xF0:
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	LDI  R27,0
	CALL _SetDataMotorPWM
	LDI  R30,LOW(0)
	STS  _iError_S000005A000,R30
	STS  _iError_S000005A000+1,R30
	STS  _iError_S000005A000+2,R30
	STS  _iError_S000005A000+3,R30
_0xF9:
	ADIW R28,20
	RET
_timer1_capt_isr:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,RAMPZ
	ST   -Y,R30
	IN   R30,SREG
	ST   -Y,R30
	sei
	LDS  R26,_ServoCounter_S000005B000
	SUBI R26,-LOW(1)
	STS  _ServoCounter_S000005B000,R26
	CPI  R26,LOW(0x5)
	BRLO _0xFA
	LDI  R30,LOW(0)
	STS  _ServoCounter_S000005B000,R30
	LDI  R30,LOW(170)
	OUT  0x2F,R30
	RJMP _0xFB
_0xFA:
	LDI  R30,LOW(2)
	OUT  0x2F,R30
	CBI  0x18,5
	CBI  0x18,6
	CBI  0x18,7
_0xFB:
	SBRS R2,0
	RJMP _0x102
	LDS  R26,_TempoTick_S000005B000
	SUBI R26,-LOW(1)
	STS  _TempoTick_S000005B000,R26
	LDS  R30,_LaguTick_S000005B000
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	CP   R26,R30
	BRLO _0x103
	LDI  R30,LOW(0)
	STS  _TempoTick_S000005B000,R30
	LDS  R30,_LaguTick_S000005B000
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW2PF
	CALL _FBuzzer
	LDS  R26,_LaguTick_S000005B000
	SUBI R26,-LOW(1)
	STS  _LaguTick_S000005B000,R26
	CPI  R26,LOW(0x4E)
	BRLO _0x104
	LDI  R30,LOW(0)
	STS  _LaguTick_S000005B000,R30
_0x104:
_0x103:
_0x102:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R30,Y+
	OUT  RAMPZ,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
_timer1_ovf_isr:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,RAMPZ
	ST   -Y,R30
	IN   R30,SREG
	ST   -Y,R30
	ST   -Y,R17
;	i -> R17
	sei
	SBRS R2,3
	RJMP _0x105
	MOV  R17,R8
	CALL _BacaAccelerometer
	CALL _BacaGyroScope
	CALL _HitungKalmanPitch
	CALL _HitungYaw
	RCALL _BalancingControl
	CP   R17,R8
	BRSH _0x106
	MOV  R30,R8
	SUB  R30,R17
	RJMP _0x14D
_0x106:
	LDI  R30,LOW(255)
	SUB  R30,R17
	ADD  R30,R8
	SUBI R30,-LOW(1)
_0x14D:
	STS  _WaktuEksekusi,R30
_0x105:
	LD   R17,Y+
	LD   R30,Y+
	OUT  SREG,R30
	LD   R30,Y+
	OUT  RAMPZ,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
_timer2_comp_isr:
	ST   -Y,R26
	ST   -Y,R30
	IN   R30,SREG
	ST   -Y,R30
	INC  R8
	sei
	LDS  R26,_Timer2Tick_S000005D000
	SUBI R26,-LOW(1)
	STS  _Timer2Tick_S000005D000,R26
	CPI  R26,LOW(0x4)
	BRNE _0x108
	LDS  R30,__dCounter1_S000005D000
	LDS  R26,_dCounter1
	CP   R30,R26
	BRSH _0x109
	LDS  R26,__dCounter1_S000005D000
	LDS  R30,_dCounter1
	SUB  R30,R26
	RJMP _0x14E
_0x109:
	LDS  R26,__dCounter1_S000005D000
	LDI  R30,LOW(255)
	SUB  R30,R26
	LDS  R26,_dCounter1
	ADD  R30,R26
	SUBI R30,-LOW(1)
_0x14E:
	STS  _dSpeed1,R30
	LDS  R30,_dCounter1
	STS  __dCounter1_S000005D000,R30
	RJMP _0x10B
_0x108:
	LDS  R26,_Timer2Tick_S000005D000
	CPI  R26,LOW(0x5)
	BREQ _0x10D
	CPI  R26,LOW(0x9)
	BRNE _0x10E
	LDS  R30,__dCounter2_S000005D000
	LDS  R26,_dCounter2
	CP   R30,R26
	BRSH _0x10F
	LDS  R26,__dCounter2_S000005D000
	LDS  R30,_dCounter2
	SUB  R30,R26
	RJMP _0x14F
_0x10F:
	LDS  R26,__dCounter2_S000005D000
	LDI  R30,LOW(255)
	SUB  R30,R26
	LDS  R26,_dCounter2
	ADD  R30,R26
	SUBI R30,-LOW(1)
_0x14F:
	STS  _dSpeed2,R30
	LDS  R30,_dCounter2
	STS  __dCounter2_S000005D000,R30
	RJMP _0x111
_0x10E:
	LDS  R26,_Timer2Tick_S000005D000
	CPI  R26,LOW(0xA)
	BRLO _0x112
	LDI  R30,LOW(0)
	STS  _Timer2Tick_S000005D000,R30
_0x112:
_0x111:
_0x10D:
_0x10B:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R30,Y+
	LD   R26,Y+
	RETI
_SystemInit:
	LDI  R30,LOW(0)
	OUT  0x1B,R30
	LDI  R30,LOW(255)
	OUT  0x1A,R30
	LDI  R30,LOW(5)
	OUT  0x18,R30
	LDI  R30,LOW(248)
	OUT  0x17,R30
	LDI  R30,LOW(255)
	OUT  0x15,R30
	LDI  R30,LOW(240)
	OUT  0x14,R30
	LDI  R30,LOW(0)
	OUT  0x12,R30
	LDI  R30,LOW(240)
	OUT  0x11,R30
	LDI  R30,LOW(192)
	OUT  0x3,R30
	LDI  R30,LOW(60)
	OUT  0x2,R30
	LDI  R30,LOW(0)
	STS  98,R30
	STS  97,R30
	LDI  R30,LOW(23)
	STS  101,R30
	LDI  R30,LOW(0)
	STS  100,R30
	OUT  0x30,R30
	OUT  0x33,R30
	OUT  0x32,R30
	OUT  0x31,R30
	LDI  R30,LOW(170)
	OUT  0x2F,R30
	LDI  R30,LOW(18)
	OUT  0x2E,R30
	LDI  R30,LOW(0)
	OUT  0x2D,R30
	OUT  0x2C,R30
	LDI  R30,LOW(39)
	OUT  0x27,R30
	LDI  R30,LOW(16)
	OUT  0x26,R30
	LDI  R30,LOW(19)
	OUT  0x27,R30
	LDI  R30,LOW(136)
	OUT  0x26,R30
	LDI  R30,LOW(0)
	OUT  0x2B,R30
	OUT  0x2A,R30
	OUT  0x29,R30
	OUT  0x28,R30
	STS  121,R30
	STS  120,R30
	LDI  R30,LOW(11)
	OUT  0x25,R30
	LDI  R30,LOW(0)
	OUT  0x24,R30
	LDI  R30,LOW(250)
	OUT  0x23,R30
	LDI  R30,LOW(242)
	STS  139,R30
	LDI  R30,LOW(17)
	STS  138,R30
	LDI  R30,LOW(0)
	STS  137,R30
	STS  136,R30
	LDI  R30,LOW(1)
	STS  129,R30
	LDI  R30,LOW(144)
	STS  128,R30
	LDI  R30,LOW(0)
	STS  135,R30
	STS  134,R30
	STS  133,R30
	STS  132,R30
	STS  131,R30
	LDI  R30,LOW(200)
	STS  130,R30
	LDI  R30,LOW(0)
	STS  106,R30
	LDI  R30,LOW(80)
	OUT  0x3A,R30
	LDI  R30,LOW(192)
	OUT  0x39,R30
	OUT  0x38,R30
	LDI  R30,LOW(164)
	OUT  0x37,R30
	LDI  R30,LOW(2)
	STS  125,R30
	LDI  R30,LOW(0)
	STS  155,R30
	LDI  R30,LOW(152)
	STS  154,R30
	LDI  R30,LOW(6)
	STS  157,R30
	LDI  R30,LOW(0)
	STS  152,R30
	LDI  R30,LOW(103)
	STS  153,R30
	LDI  R30,LOW(128)
	OUT  0x8,R30
	LDI  R30,LOW(0)
	OUT  0x20,R30
	CALL _LCD_Init
	CALL _Stop
	LDI  R26,LOW(90)
	CALL _SudutServo1
	LDI  R26,LOW(90)
	CALL _SudutServo2
	LDI  R26,LOW(90)
	CALL _SudutServo3
	LDI  R26,LOW(90)
	CALL _SudutServo4
	LDI  R26,LOW(90)
	CALL _SudutServo5
	LDI  R26,LOW(90)
	CALL _SudutServo6
	LDI  R26,LOW(90)
	CALL _SudutServo7
	LDI  R26,LOW(90)
	CALL _SudutServo8
	cli
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,238
	CALL _LCD_TulisKiri
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,255
	CALL _LCD_TulisKiri
	CALL _I2C_Init
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
	CALL _MPU6050_Init
	SET
	BLD  R2,2
	CALL _MPU6050_TestConnection
	CPI  R30,0
	BREQ _0x113
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,272
	CALL _LCD_TulisKiri
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,289
	CALL _LCD_TulisKiri
	CALL _Nada1
	RJMP _0x114
_0x113:
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,306
	CALL _LCD_TulisKiri
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,323
	CALL _LCD_TulisKiri
	CALL _Nada2
_0x114:
	LDI  R26,LOW(800)
	LDI  R27,HIGH(800)
	CALL _delay_ms
	CALL _KalibrasiGyroScope
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,340
	CALL _LCD_TulisF
	CALL _Nada3
	CALL _HMC5883L_Init
	CALL _HMC5883L_TestConnection
	CPI  R30,0
	BREQ _0x115
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,357
	RJMP _0x150
_0x115:
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,391
_0x150:
	CALL _LCD_TulisKiri
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,374
	CALL _LCD_TulisTengah
	CALL _Nada1
	sei
	sei
	RET
;
;
;//  --------------  DEKLARASI VARIABEL GLOBAL --------------------------
;
;
;/*
;float  iError=0;
;int KP,KI,KD;
;signed char lError=0;
;
;#pragma used+
;void SetPID(int kp, int ki, int kd){ KP=kp;    KI=ki;  KD=kd;}
;void ResetPID(void){ iError=0; lError=0; }
;
;short int HitungPID(signed char Error)
;{ float PIDTime, U;
;  PIDTime = (float)PIDTick/1000;
;  PIDTick = 0;
;  // Menghitung Nilai Kendali Derivatif
;  U = (float)KD * (float)(Error-lError)/PIDTime;
;  // Menghitung Nilai Integral Error
;  iError += (float)((Error + lError)/2) * PIDTime;
;  // Membatasi Nilai Integral Error
;  if((short int) iError > MaxIntegral) iError = MaxIntegral;
;  else if((signed int) iError < -MaxIntegral) iError = -MaxIntegral;
;  // Menambahkan Nilai Kendali Integral
;  U+= (float)KI * iError;
;  // Menambahkan Nilai Kendali Proporsional
;  U+= (float)KP * (float)Error;
;  lError = Error;
;  LCD_GotoXY(0,0); LCD_Angka3(PIDTime*1000);
;  return ((short int)U);
;}
;
;// ------------------------  Kendali Gerak Robot --------------------------------------------
;    void GerakRobot(short int Speed, short int U)
;    { int PWMKi, PWMKa;
;       // Menghitung Aktuasi Kendali pada Roda Kanan dan Kiri
;      PWMKa = Speed + U;
;      PWMKi = Speed - U;
;      // Menghitung Kecepatan dan arah putaran Motor Roda Kanan
;      if(PWMKa<0)   {PWMKa = -PWMKa; M2_CCW;}
;      else          {M2_CW;}
;      if (PWMKa<MaxSpeed)
;        {   PwmM1H = ByteH(PWMKa);      PwmM1L = ByteL(PWMKa);}
;      else
;        {   PwmM1H = ByteH(MaxSpeed);   PwmM1L = ByteL(MaxSpeed);}
;      // Menghitung Kecepatan dan arah putaran Motor Roda Kiri
;      if(PWMKi<0)   {PWMKi = -PWMKi; M1_CW;}
;      else          {M1_CCW;}
;      if (PWMKi<MaxSpeed)
;        {   PwmM2H = ByteH(PWMKi);      PwmM2L = ByteL(PWMKi);}
;      else
;        {   PwmM2H = ByteH(MaxSpeed);   PwmM2L = ByteL(MaxSpeed);}
;       //LCD_GotoXY(0,0);    LCD_Angka3(PWMKa);
;       //LCD_Data(' ');      LCD_Angka3(PWMKi);
;    }
;
;#pragma used-
;
;
;*/
;
;
;void main(void)
; 0000 0055 {   int16_t i,j, counter;
_main:
; 0000 0056     unsigned char sensor;
; 0000 0057     SystemInit();
	SBIW R28,1
;	i -> R16,R17
;	j -> R18,R19
;	counter -> R20,R21
;	sensor -> Y+0
	RCALL _SystemInit
; 0000 0058     SetDataMotorPWM(0,0);
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	LDI  R27,0
	CALL _SetDataMotorPWM
; 0000 0059     #if UsePIDmotor==1
; 0000 005A         PIDMotorOn = 0;
; 0000 005B     #endif
; 0000 005C 
; 0000 005D     ImuStart = 0;       // menonaktifkan mode balancing
	CLT
	BLD  R2,3
; 0000 005E     delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
; 0000 005F 
; 0000 0060     if (PB4==0) KalibrasiHitamPutih(0,pKalibrasiHPR);       // kalibrasi warna hitam dan putih dengan LED merah
	SBIC 0x13,0
	RJMP _0x117
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(192)
	CALL _KalibrasiHitamPutih
; 0000 0061     LCD_Hapus();
_0x117:
	CALL _LCD_Hapus
; 0000 0062 
; 0000 0063     while(PB1)
_0x118:
	SBIS 0x13,3
	RJMP _0x11A
; 0000 0064     {   LCD_GotoXY(0,0);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
; 0000 0065         BacaSensor(0,pBacaSensorR);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BacaSensor
; 0000 0066         if(BacaSerial1(5000)==pBacaSensorR)
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	CPI  R30,LOW(0x40)
	BRNE _0x11B
; 0000 0067         {   LCD_Biner(BacaSerial1(5000));
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	MOV  R26,R30
	CALL _LCD_Biner
; 0000 0068         }
; 0000 0069     }
_0x11B:
	RJMP _0x118
_0x11A:
; 0000 006A 
; 0000 006B     LCD_Hapus();
	CALL _LCD_Hapus
; 0000 006C     while(PB2)
_0x11C:
	SBIS 0x13,2
	RJMP _0x11E
; 0000 006D     {       LCD_GotoXY(0,0);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	MOVW R26,R10
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
; 0000 006E             LCD_GotoXY(6,0);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	MOVW R26,R12
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
; 0000 006F             LCD_GotoXY(0,1);    LCD_uByte(dSpeed1);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDS  R26,_dSpeed1
	CALL _LCD_uByte
; 0000 0070             LCD_GotoXY(4,1);    LCD_uByte(dSpeed2);
	LDI  R30,LOW(4)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDS  R26,_dSpeed2
	CALL _LCD_uByte
; 0000 0071             LCD_GotoXY(8,1);    LCD_uByte(WaktuEksekusi);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDS  R26,_WaktuEksekusi
	CALL _LCD_uByte
; 0000 0072             LCD_GotoXY(13,1);   LCD_Angka3(MODE);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDS  R30,99
	ANDI R30,LOW(0x7)
	MOV  R26,R30
	LDS  R30,99
	ANDI R30,LOW(0x10)
	LSR  R30
	OR   R30,R26
	LDI  R31,0
	MOVW R26,R30
	CALL _LCD_Angka3
; 0000 0073     }
	RJMP _0x11C
_0x11E:
; 0000 0074 
; 0000 0075 //    uint8_t TungguTombolKalibrasi(uint8_t Alamat, uint8_t Protokol);
; 0000 0076 //    void PesanKalibrasiBerhasil(void);
; 0000 0077 //    void PesanKalibrasiGagal(void);
; 0000 0078 //    int8_t KalibrasiRGB(uint8_t Alamat);
; 0000 0079 
; 0000 007A     LCD_Hapus();
	CALL _LCD_Hapus
; 0000 007B     LCD_TulisF(0,"ModeBalancing ON");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,408
	CALL _LCD_TulisF
; 0000 007C     ImuStart = 1;       // menonaktifkan mode balancing
	SET
	BLD  R2,3
; 0000 007D 
; 0000 007E     LaguOn = 1;
	BLD  R2,0
; 0000 007F 
; 0000 0080     while(PB3)
_0x11F:
	SBIS 0x13,1
	RJMP _0x121
; 0000 0081     {  LCD_HapusKiri(1);
	LDI  R26,LOW(1)
	CALL _LCD_HapusKiri
; 0000 0082             if(PB3) LCD_TulisKanan(1,"<<<<< Putar Kiri");
	SBIS 0x13,1
	RJMP _0x122
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,425
	CALL _LCD_TulisKanan
; 0000 0083             for(i=0;i<10;i++)
_0x122:
	__GETWRN 16,17,0
_0x124:
	__CPWRN 16,17,10
	BRGE _0x125
; 0000 0084             {   if(!PB3)     break;
	SBIS 0x13,1
	RJMP _0x125
; 0000 0085                 TargetSpeedB=0;    SteerB = -120;       delay_ms(100);
	LDI  R30,LOW(0)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(65416)
	LDI  R31,HIGH(65416)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 0086             }
	__ADDWRN 16,17,1
	RJMP _0x124
_0x125:
; 0000 0087             if(PB3) TargetSpeedB=0;    SteerB = -80;    delay_ms(100);
	SBIS 0x13,1
	RJMP _0x127
	LDI  R30,LOW(0)
	STS  _TargetSpeedB,R30
_0x127:
	LDI  R30,LOW(65456)
	LDI  R31,HIGH(65456)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 0088             if(PB3) TargetSpeedB=0;    SteerB = 20;
	SBIS 0x13,1
	RJMP _0x128
	LDI  R30,LOW(0)
	STS  _TargetSpeedB,R30
_0x128:
	LDI  R30,LOW(20)
	LDI  R31,HIGH(20)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
; 0000 0089             if(PB3) LCD_HapusKanan(1);
	SBIS 0x13,1
	RJMP _0x129
	LDI  R26,LOW(1)
	CALL _LCD_HapusKanan
; 0000 008A             if(PB3) LCD_TulisKiri(1,">>>> Putar Kanan");
_0x129:
	SBIS 0x13,1
	RJMP _0x12A
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,442
	CALL _LCD_TulisKiri
; 0000 008B             for(i=0;i<10;i++)
_0x12A:
	__GETWRN 16,17,0
_0x12C:
	__CPWRN 16,17,10
	BRGE _0x12D
; 0000 008C             {   if(!PB3)     break;
	SBIS 0x13,1
	RJMP _0x12D
; 0000 008D                 TargetSpeedB=0;    SteerB = 120;       delay_ms(100);
	LDI  R30,LOW(0)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(120)
	LDI  R31,HIGH(120)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 008E             }
	__ADDWRN 16,17,1
	RJMP _0x12C
_0x12D:
; 0000 008F             if(PB3) TargetSpeedB=0;    SteerB = 80;    delay_ms(100);
	SBIS 0x13,1
	RJMP _0x12F
	LDI  R30,LOW(0)
	STS  _TargetSpeedB,R30
_0x12F:
	LDI  R30,LOW(80)
	LDI  R31,HIGH(80)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 0090             if(PB3) TargetSpeedB=0;    SteerB = -20;
	SBIS 0x13,1
	RJMP _0x130
	LDI  R30,LOW(0)
	STS  _TargetSpeedB,R30
_0x130:
	LDI  R30,LOW(65516)
	LDI  R31,HIGH(65516)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
; 0000 0091     }
	RJMP _0x11F
_0x121:
; 0000 0092 
; 0000 0093 
; 0000 0094     LCD_Hapus();
	CALL _LCD_Hapus
; 0000 0095     LCD_TulisF(0,"BalanTracer Mode");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,459
	CALL _LCD_TulisF
; 0000 0096     ImuStart = 1;       // menonaktifkan mode balancing
	SET
	BLD  R2,3
; 0000 0097     TargetSpeedB=-5;    SteerB = 40;
	LDI  R30,LOW(251)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(40)
	LDI  R31,HIGH(40)
	STS  _SteerB,R30
	STS  _SteerB+1,R31
; 0000 0098     while(PB4)
_0x131:
	SBIS 0x13,0
	RJMP _0x133
; 0000 0099     {  BacaSensor(0,pBacaSensorR);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BacaSensor
; 0000 009A        if(BacaSerial1(5000)==pBacaSensorR)
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	CPI  R30,LOW(0x40)
	BREQ PC+3
	JMP _0x134
; 0000 009B        {    LCD_GotoXY(0,1);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
; 0000 009C             sensor = BacaSerial1(5000);
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	ST   Y,R30
; 0000 009D             LCD_Biner(sensor);
	LD   R26,Y
	CALL _LCD_Biner
; 0000 009E             switch(sensor)
	LD   R30,Y
; 0000 009F             {   case 0B01111111: TargetSpeedB=-1;    SteerB = -50; break;
	CPI  R30,LOW(0x7F)
	BRNE _0x138
	LDI  R30,LOW(255)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(65486)
	LDI  R31,HIGH(65486)
	RJMP _0x151
; 0000 00A0                 case 0B10111111: TargetSpeedB=-1;    SteerB = -30; break;
_0x138:
	CPI  R30,LOW(0xBF)
	BRNE _0x139
	LDI  R30,LOW(255)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(65506)
	LDI  R31,HIGH(65506)
	RJMP _0x151
; 0000 00A1                 case 0B11011111: TargetSpeedB=-3;    SteerB = -20; break;
_0x139:
	CPI  R30,LOW(0xDF)
	BRNE _0x13A
	LDI  R30,LOW(253)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(65516)
	LDI  R31,HIGH(65516)
	RJMP _0x151
; 0000 00A2                 case 0B11101111: TargetSpeedB=-3;    SteerB = -10; break;
_0x13A:
	CPI  R30,LOW(0xEF)
	BRNE _0x13B
	LDI  R30,LOW(253)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(65526)
	LDI  R31,HIGH(65526)
	RJMP _0x151
; 0000 00A3                 case 0B11110111: TargetSpeedB=-3;    SteerB = 10; break;
_0x13B:
	CPI  R30,LOW(0xF7)
	BRNE _0x13C
	LDI  R30,LOW(253)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	RJMP _0x151
; 0000 00A4                 case 0B11111011: TargetSpeedB=-3;    SteerB = 20; break;
_0x13C:
	CPI  R30,LOW(0xFB)
	BRNE _0x13D
	LDI  R30,LOW(253)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(20)
	LDI  R31,HIGH(20)
	RJMP _0x151
; 0000 00A5                 case 0B11111101: TargetSpeedB=-1;    SteerB = 30; break;
_0x13D:
	CPI  R30,LOW(0xFD)
	BRNE _0x13E
	LDI  R30,LOW(255)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(30)
	LDI  R31,HIGH(30)
	RJMP _0x151
; 0000 00A6                 case 0B11111110: TargetSpeedB=-1;    SteerB = 50; break;
_0x13E:
	CPI  R30,LOW(0xFE)
	BRNE _0x137
	LDI  R30,LOW(255)
	STS  _TargetSpeedB,R30
	LDI  R30,LOW(50)
	LDI  R31,HIGH(50)
_0x151:
	STS  _SteerB,R30
	STS  _SteerB+1,R31
; 0000 00A7             }
_0x137:
; 0000 00A8 
; 0000 00A9 
; 0000 00AA        }
; 0000 00AB     }
_0x134:
	RJMP _0x131
_0x133:
; 0000 00AC 
; 0000 00AD     /*
; 0000 00AE     while(1)
; 0000 00AF     {   TargetSpeedB=0;    SteerB = 0;
; 0000 00B0         if ((MODE)==15)
; 0000 00B1         {
; 0000 00B2             #if ModeBalancing == 1
; 0000 00B3             LCD_TulisF(0,"ModeBalancing ON");
; 0000 00B4             SudutServo1(0);     SudutServo2(0);     SudutServo3(0);     SudutServo4(0);
; 0000 00B5             SudutServo5(0);     SudutServo6(0);     SudutServo7(0);     SudutServo8(0);
; 0000 00B6             TargetSpeedB=0;    SteerB = -120;       delay_ms(1000);
; 0000 00B7             TargetSpeedB=0;    SteerB = -40;       delay_ms(100);
; 0000 00B8             TargetSpeedB=0;    SteerB = 20;
; 0000 00B9             LCD_HapusKanan(1);
; 0000 00BA             LCD_TulisKiri(1,">>>> Putar Kanan");
; 0000 00BB             SudutServo1(180);     SudutServo2(180);     SudutServo3(180);     SudutServo4(180);
; 0000 00BC             SudutServo5(180);     SudutServo6(180);     SudutServo7(180);     SudutServo8(180);
; 0000 00BD             TargetSpeedB=0;    SteerB = 120;        delay_ms(1000);
; 0000 00BE             TargetSpeedB=0;    SteerB = 40;       delay_ms(100);
; 0000 00BF             TargetSpeedB=0;    SteerB = -20;
; 0000 00C0             LCD_HapusKiri(1);
; 0000 00C1             LCD_TulisKanan(1,"<<<<< Putar Kiri");
; 0000 00C2             #endif
; 0000 00C3         }
; 0000 00C4         else if ((MODE)==14)
; 0000 00C5         {   LCD_TulisF(0,"Mode Walking ON.");
; 0000 00C6             LCD_TulisF(1,"MKI Depan Mundur");
; 0000 00C7             for (i=135,j=70;i>70;i--,j++)
; 0000 00C8             {   SudutServo1(90);         SudutServo2(j);
; 0000 00C9                 SudutServo3(135);        SudutServo4(j);
; 0000 00CA                 SudutServo5(135);        SudutServo6(i);
; 0000 00CB                 SudutServo7(90);         SudutServo8(i);
; 0000 00CC                 delay_ms(5);
; 0000 00CD             }
; 0000 00CE             //step kanan depan  mundur
; 0000 00CF             LCD_TulisF(1,"MKA Depan Mundur");
; 0000 00D0             for (i=70,j=135;i<135;j--,i++)
; 0000 00D1             {   SudutServo1(45);         SudutServo2(j);
; 0000 00D2                 SudutServo3(90);         SudutServo4(j);
; 0000 00D3                 SudutServo5(90);         SudutServo6(i);
; 0000 00D4                 SudutServo7(45);         SudutServo8(i);
; 0000 00D5                 delay_ms(5);
; 0000 00D6             }
; 0000 00D7         }
; 0000 00D8         else
; 0000 00D9         {   SetDataMotorPWM(100,100);
; 0000 00DA             LCD_GotoXY(0,0);    LCD_Angka4(Enkoder1);
; 0000 00DB             LCD_GotoXY(5,0);    LCD_Angka4(Enkoder2);
; 0000 00DC             LCD_GotoXY(10,0);   LCD_Angka3(MODE);
; 0000 00DD             LCD_GotoXY(0,1);    LCD_uByte(dSpeed1);
; 0000 00DE             LCD_GotoXY(4,1);    LCD_uByte(dSpeed2);
; 0000 00DF             LCD_GotoXY(8,1);    LCD_uByte(WaktuEksekusi);
; 0000 00E0 
; 0000 00E1         }
; 0000 00E2         LED1 = ~PB1;
; 0000 00E3         LED2 = ~PB2;
; 0000 00E4         LED3 = ~PB3;
; 0000 00E5         LED4 = ~PB4;
; 0000 00E6 
; 0000 00E7 
; 0000 00E8 
; 0000 00E9         //SetDataMotorPID(KalmanRoll/5,KalmanPitch/5);
; 0000 00EA         if(MODE1)
; 0000 00EB         {
; 0000 00EC             LCD_GotoXY(0,0);    LCD_Angka4((int)(Roll));
; 0000 00ED             LCD_GotoXY(6,0);    LCD_Angka4((int)(Pitch));
; 0000 00EE             LCD_GotoXY(0,1);    LCD_Angka4((int)(Yaw));
; 0000 00EF         }
; 0000 00F0         else
; 0000 00F1         {   LCD_GotoXY(0,0);    LCD_Angka4(Gx);
; 0000 00F2             LCD_GotoXY(8,0);    LCD_Angka4(Gy);
; 0000 00F3             LCD_GotoXY(0,1);    LCD_Angka4(Gz);
; 0000 00F4         }
; 0000 00F5         LCD_GotoXY(6,1);    LCD_uByte(WaktuEksekusi);
; 0000 00F6         LCD_GotoXY(12,0);   LCD_Angka4(dCounter1);
; 0000 00F7         LCD_GotoXY(12,1);   LCD_Angka4(dCounter2);
; 0000 00F8 
; 0000 00F9         delay_ms(10);
; 0000 00FA 
; 0000 00FB     };
; 0000 00FC 
; 0000 00FD     //dServo1 = 20;
; 0000 00FE     //dServo2 = 80;
; 0000 00FF     /*SudutServo1(0);
; 0000 0100     SudutServo2(45);
; 0000 0101     SudutServo3(90);
; 0000 0102     SudutServo4(135);
; 0000 0103     SudutServo5(180);
; 0000 0104     SudutServo6(180);
; 0000 0105     SudutServo7(0);
; 0000 0106     SudutServo8(90);  */
; 0000 0107     /*LCD_GotoXY(0,0);    LCD_Angka3(dServo1);
; 0000 0108     LCD_GotoXY(4,0);    LCD_Angka3(dServo2);
; 0000 0109     LCD_GotoXY(8,0);    LCD_Angka3(dServo3);
; 0000 010A     LCD_GotoXY(12,0);   LCD_Angka3(dServo4);
; 0000 010B     LCD_GotoXY(0,1);    LCD_Angka3(dServo5);
; 0000 010C     LCD_GotoXY(4,1);    LCD_Angka4(dServo6);
; 0000 010D     LCD_GotoXY(8,1);    LCD_Angka4(dServo7);
; 0000 010E     LCD_GotoXY(12,1);   LCD_Angka4(BacadServo8);
; 0000 010F     */
; 0000 0110 
; 0000 0111     //Nada1();
; 0000 0112 
; 0000 0113     /*
; 0000 0114     while (1)
; 0000 0115       {
; 0000 0116       // Place your code here
; 0000 0117 
; 0000 0118          LCD_BackLight = 1;
; 0000 0119          //if (!PB3) KalibrasiRGB(0);
; 0000 011A          if (!PB1) Nada1();
; 0000 011B          if (!PB2) Nada2();
; 0000 011C          if (!PB3) Nada3();
; 0000 011D          if (!PB4) Nada4();
; 0000 011E 
; 0000 011F          i = SysTick;
; 0000 0120          do{    BacaSensor(0,pBacaSensorRGB);//  putchar1(pBacaSensorRGB);
; 0000 0121          }  while(BacaSerial1(5000)!=pBacaSensorRGB);
; 0000 0122          r = BacaSerial1(5000);
; 0000 0123          g = BacaSerial1(5000);
; 0000 0124          b = BacaSerial1(5000);
; 0000 0125          if(SysTick>i)    i = SysTick - i;
; 0000 0126          else             i = 0xFF - i + SysTick + 1;
; 0000 0127 
; 0000 0128          if (FlagSerial)
; 0000 0129          {  LCD_GotoXY(0,0);
; 0000 012A             LCD_uByte(r);  LCD_Data(' ');
; 0000 012B             LCD_uByte(g);  LCD_Data(' ');
; 0000 012C             LCD_uByte(b);  LCD_Data(' ');
; 0000 012D          }
; 0000 012E          else
; 0000 012F          {  LCD_TulisF(0, "TimeOut"); }
; 0000 0130          LCD_GotoXY(0,1);
; 0000 0131          LCD_uByte(i);
; 0000 0132 
; 0000 0133          LCD_Data(' ');
; 0000 0134          LCD_sByte(getchar1());
; 0000 0135          LCD_Data(' ');
; 0000 0136          LCD_sByte(getchar1());
; 0000 0137          */
; 0000 0138 
; 0000 0139 
; 0000 013A         //Stop();
; 0000 013B        /* SetDataMotorPWM(300,300);
; 0000 013C         for(i=0;i<1000;i++)
; 0000 013D         {   //PIDTick=0; while(PIDTick<10);
; 0000 013E             //PIDmotor();
; 0000 013F             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
; 0000 0140             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
; 0000 0141             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
; 0000 0142             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
; 0000 0143         }
; 0000 0144         SetDataMotorPWM(100,100);
; 0000 0145         for(i=0;i<1000;i++)
; 0000 0146         {   //PIDTick=0; while(PIDTick<10);
; 0000 0147             //PIDmotor();
; 0000 0148             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
; 0000 0149             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
; 0000 014A             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
; 0000 014B             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
; 0000 014C         }
; 0000 014D         SetDataMotorPWM(0,0);
; 0000 014E         for(i=0;i<500;i++)
; 0000 014F         {   //PIDTick=0; while(PIDTick<10);
; 0000 0150             //PIDmotor();
; 0000 0151             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
; 0000 0152             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
; 0000 0153             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
; 0000 0154             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
; 0000 0155         }
; 0000 0156         SetDataMotorPID(-10,-10);
; 0000 0157         for(i=0;i<1000;i++)
; 0000 0158         {   //PIDTick=0; while(PIDTick<10);
; 0000 0159             //PIDmotor();
; 0000 015A             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
; 0000 015B             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
; 0000 015C             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
; 0000 015D             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
; 0000 015E         }
; 0000 015F         SetDataMotorPID(-3,-3);
; 0000 0160         for(i=0;i<1000;i++)
; 0000 0161         {   //PIDTick=0; while(PIDTick<10);
; 0000 0162             //PIDmotor();
; 0000 0163             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
; 0000 0164             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
; 0000 0165             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
; 0000 0166             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
; 0000 0167         }
; 0000 0168         SetDataMotorPID(0,0);
; 0000 0169         for(i=0;i<500;i++)
; 0000 016A         {   //PIDTick=0; while(PIDTick<10);
; 0000 016B             //PIDmotor();
; 0000 016C             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
; 0000 016D             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
; 0000 016E             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
; 0000 016F             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
; 0000 0170         }
; 0000 0171 
; 0000 0172   } */
; 0000 0173 }
	ADIW R28,1
_0x140:
	RJMP _0x140
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG

	.CSEG
_xatan:
	CALL __PUTPARD2
	SBIW R28,4
	__GETD1S 4
	__GETD2S 4
	CALL __MULF12
	CALL __PUTD1S0
	__GETD2N 0x40CBD065
	CALL __MULF12
	__GETD2N 0x414A8F4E
	CALL __ADDF12
	__GETD2S 4
	CALL __MULF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL __GETD1S0
	__GETD2N 0x41296D00
	CALL __ADDF12
	CALL __GETD2S0
	CALL __MULF12
	__GETD2N 0x414A8F4E
	CALL __ADDF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __DIVF21
	ADIW R28,8
	RET
_yatan:
	CALL __PUTPARD2
	CALL __GETD2S0
	__GETD1N 0x3ED413CD
	CALL __CMPF12
	BRSH _0x2020020
	RCALL _xatan
	RJMP _0x20A0001
_0x2020020:
	CALL __GETD2S0
	__GETD1N 0x401A827A
	CALL __CMPF12
	BREQ PC+2
	BRCC PC+3
	JMP  _0x2020021
	CALL __GETD1S0
	__GETD2N 0x3F800000
	CALL __DIVF21
	MOVW R26,R30
	MOVW R24,R22
	RCALL _xatan
	__GETD2N 0x3FC90FDB
	CALL __SWAPD12
	CALL __SUBF12
	RJMP _0x20A0001
_0x2020021:
	CALL __GETD1S0
	__GETD2N 0x3F800000
	CALL __SUBF12
	PUSH R23
	PUSH R22
	PUSH R31
	PUSH R30
	CALL __GETD1S0
	__GETD2N 0x3F800000
	CALL __ADDF12
	POP  R26
	POP  R27
	POP  R24
	POP  R25
	CALL __DIVF21
	MOVW R26,R30
	MOVW R24,R22
	RCALL _xatan
	__GETD2N 0x3F490FDB
	CALL __ADDF12
	RJMP _0x20A0001
_atan:
	CALL __PUTPARD2
	LDD  R26,Y+3
	TST  R26
	BRMI _0x202002C
	CALL __GETD2S0
	RCALL _yatan
	RJMP _0x20A0001
_0x202002C:
	CALL __GETD1S0
	CALL __ANEGF1
	MOVW R26,R30
	MOVW R24,R22
	RCALL _yatan
	CALL __ANEGF1
_0x20A0001:
	ADIW R28,4
	RET

	.CSEG

	.DSEG

	.CSEG

	.CSEG

	.CSEG

	.DSEG
_TargetSpeedB:
	.BYTE 0x1
_SteerB:
	.BYTE 0x2
_Ax:
	.BYTE 0x2
_Ay:
	.BYTE 0x2
_Az:
	.BYTE 0x2
_Gx:
	.BYTE 0x2
_Gy:
	.BYTE 0x2
_Gz:
	.BYTE 0x2
_GxOffset:
	.BYTE 0x4
_GyOffset:
	.BYTE 0x4
_GzOffset:
	.BYTE 0x4
_Roll:
	.BYTE 0x4
_Pitch:
	.BYTE 0x4
_Yaw:
	.BYTE 0x4
_dSpeed1:
	.BYTE 0x1
_dSpeed2:
	.BYTE 0x1
_dCounter1:
	.BYTE 0x1
_dCounter2:
	.BYTE 0x1
_rx_buffer1:
	.BYTE 0x10
_rx_wr_index1:
	.BYTE 0x1
_rx_rd_index1:
	.BYTE 0x1
_rx_counter1:
	.BYTE 0x1
_AccRoll:
	.BYTE 0x4
_P_00_S000004B000:
	.BYTE 0x4
_P_01_S000004B000:
	.BYTE 0x4
_P_10_S000004B000:
	.BYTE 0x4
_P_11_S000004B000:
	.BYTE 0x4
_hmc5883l_scale_G000:
	.BYTE 0x4
_WaktuEksekusi:
	.BYTE 0x1
_ServoCounter_S0000059000:
	.BYTE 0x2
_iErrorSpeed_S000005A000:
	.BYTE 0x4
_LastError_S000005A000:
	.BYTE 0x4
_iError_S000005A000:
	.BYTE 0x4
_Rotary1_S000005A000:
	.BYTE 0x2
_Rotary2_S000005A000:
	.BYTE 0x2
_ServoCounter_S000005B000:
	.BYTE 0x1
_LaguTick_S000005B000:
	.BYTE 0x1
_TempoTick_S000005B000:
	.BYTE 0x1
__dCounter1_S000005D000:
	.BYTE 0x1
__dCounter2_S000005D000:
	.BYTE 0x1
_Timer2Tick_S000005D000:
	.BYTE 0x1
__seed_G102:
	.BYTE 0x4

	.CSEG

	.CSEG
_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	__DELAY_USW 0xFA0
	wdr
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

__ANEGF1:
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	BREQ __ANEGF10
	SUBI R23,0x80
__ANEGF10:
	RET

__ROUND_REPACK:
	TST  R21
	BRPL __REPACK
	CPI  R21,0x80
	BRNE __ROUND_REPACK0
	SBRS R30,0
	RJMP __REPACK
__ROUND_REPACK0:
	ADIW R30,1
	ADC  R22,R25
	ADC  R23,R25
	BRVS __REPACK1

__REPACK:
	LDI  R21,0x80
	EOR  R21,R23
	BRNE __REPACK0
	PUSH R21
	RJMP __ZERORES
__REPACK0:
	CPI  R21,0xFF
	BREQ __REPACK1
	LSL  R22
	LSL  R0
	ROR  R21
	ROR  R22
	MOV  R23,R21
	RET
__REPACK1:
	PUSH R21
	TST  R0
	BRMI __REPACK2
	RJMP __MAXRES
__REPACK2:
	RJMP __MINRES

__UNPACK:
	LDI  R21,0x80
	MOV  R1,R25
	AND  R1,R21
	LSL  R24
	ROL  R25
	EOR  R25,R21
	LSL  R21
	ROR  R24

__UNPACK1:
	LDI  R21,0x80
	MOV  R0,R23
	AND  R0,R21
	LSL  R22
	ROL  R23
	EOR  R23,R21
	LSL  R21
	ROR  R22
	RET

__CFD1U:
	SET
	RJMP __CFD1U0
__CFD1:
	CLT
__CFD1U0:
	PUSH R21
	RCALL __UNPACK1
	CPI  R23,0x80
	BRLO __CFD10
	CPI  R23,0xFF
	BRCC __CFD10
	RJMP __ZERORES
__CFD10:
	LDI  R21,22
	SUB  R21,R23
	BRPL __CFD11
	NEG  R21
	CPI  R21,8
	BRTC __CFD19
	CPI  R21,9
__CFD19:
	BRLO __CFD17
	SER  R30
	SER  R31
	SER  R22
	LDI  R23,0x7F
	BLD  R23,7
	RJMP __CFD15
__CFD17:
	CLR  R23
	TST  R21
	BREQ __CFD15
__CFD18:
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R23
	DEC  R21
	BRNE __CFD18
	RJMP __CFD15
__CFD11:
	CLR  R23
__CFD12:
	CPI  R21,8
	BRLO __CFD13
	MOV  R30,R31
	MOV  R31,R22
	MOV  R22,R23
	SUBI R21,8
	RJMP __CFD12
__CFD13:
	TST  R21
	BREQ __CFD15
__CFD14:
	LSR  R23
	ROR  R22
	ROR  R31
	ROR  R30
	DEC  R21
	BRNE __CFD14
__CFD15:
	TST  R0
	BRPL __CFD16
	RCALL __ANEGD1
__CFD16:
	POP  R21
	RET

__CDF1U:
	SET
	RJMP __CDF1U0
__CDF1:
	CLT
__CDF1U0:
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	BREQ __CDF10
	CLR  R0
	BRTS __CDF11
	TST  R23
	BRPL __CDF11
	COM  R0
	RCALL __ANEGD1
__CDF11:
	MOV  R1,R23
	LDI  R23,30
	TST  R1
__CDF12:
	BRMI __CDF13
	DEC  R23
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R1
	RJMP __CDF12
__CDF13:
	MOV  R30,R31
	MOV  R31,R22
	MOV  R22,R1
	PUSH R21
	RCALL __REPACK
	POP  R21
__CDF10:
	RET

__SWAPACC:
	PUSH R20
	MOVW R20,R30
	MOVW R30,R26
	MOVW R26,R20
	MOVW R20,R22
	MOVW R22,R24
	MOVW R24,R20
	MOV  R20,R0
	MOV  R0,R1
	MOV  R1,R20
	POP  R20
	RET

__UADD12:
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	RET

__NEGMAN1:
	COM  R30
	COM  R31
	COM  R22
	SUBI R30,-1
	SBCI R31,-1
	SBCI R22,-1
	RET

__SUBF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R25,0x80
	BREQ __ADDF129
	LDI  R21,0x80
	EOR  R1,R21

	RJMP __ADDF120

__ADDF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R25,0x80
	BREQ __ADDF129

__ADDF120:
	CPI  R23,0x80
	BREQ __ADDF128
__ADDF121:
	MOV  R21,R23
	SUB  R21,R25
	BRVS __ADDF1211
	BRPL __ADDF122
	RCALL __SWAPACC
	RJMP __ADDF121
__ADDF122:
	CPI  R21,24
	BRLO __ADDF123
	CLR  R26
	CLR  R27
	CLR  R24
__ADDF123:
	CPI  R21,8
	BRLO __ADDF124
	MOV  R26,R27
	MOV  R27,R24
	CLR  R24
	SUBI R21,8
	RJMP __ADDF123
__ADDF124:
	TST  R21
	BREQ __ADDF126
__ADDF125:
	LSR  R24
	ROR  R27
	ROR  R26
	DEC  R21
	BRNE __ADDF125
__ADDF126:
	MOV  R21,R0
	EOR  R21,R1
	BRMI __ADDF127
	RCALL __UADD12
	BRCC __ADDF129
	ROR  R22
	ROR  R31
	ROR  R30
	INC  R23
	BRVC __ADDF129
	RJMP __MAXRES
__ADDF128:
	RCALL __SWAPACC
__ADDF129:
	RCALL __REPACK
	POP  R21
	RET
__ADDF1211:
	BRCC __ADDF128
	RJMP __ADDF129
__ADDF127:
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	BREQ __ZERORES
	BRCC __ADDF1210
	COM  R0
	RCALL __NEGMAN1
__ADDF1210:
	TST  R22
	BRMI __ADDF129
	LSL  R30
	ROL  R31
	ROL  R22
	DEC  R23
	BRVC __ADDF1210

__ZERORES:
	CLR  R30
	CLR  R31
	CLR  R22
	CLR  R23
	POP  R21
	RET

__MINRES:
	SER  R30
	SER  R31
	LDI  R22,0x7F
	SER  R23
	POP  R21
	RET

__MAXRES:
	SER  R30
	SER  R31
	LDI  R22,0x7F
	LDI  R23,0x7F
	POP  R21
	RET

__MULF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R23,0x80
	BREQ __ZERORES
	CPI  R25,0x80
	BREQ __ZERORES
	EOR  R0,R1
	SEC
	ADC  R23,R25
	BRVC __MULF124
	BRLT __ZERORES
__MULF125:
	TST  R0
	BRMI __MINRES
	RJMP __MAXRES
__MULF124:
	PUSH R0
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	CLR  R17
	CLR  R18
	CLR  R25
	MUL  R22,R24
	MOVW R20,R0
	MUL  R24,R31
	MOV  R19,R0
	ADD  R20,R1
	ADC  R21,R25
	MUL  R22,R27
	ADD  R19,R0
	ADC  R20,R1
	ADC  R21,R25
	MUL  R24,R30
	RCALL __MULF126
	MUL  R27,R31
	RCALL __MULF126
	MUL  R22,R26
	RCALL __MULF126
	MUL  R27,R30
	RCALL __MULF127
	MUL  R26,R31
	RCALL __MULF127
	MUL  R26,R30
	ADD  R17,R1
	ADC  R18,R25
	ADC  R19,R25
	ADC  R20,R25
	ADC  R21,R25
	MOV  R30,R19
	MOV  R31,R20
	MOV  R22,R21
	MOV  R21,R18
	POP  R20
	POP  R19
	POP  R18
	POP  R17
	POP  R0
	TST  R22
	BRMI __MULF122
	LSL  R21
	ROL  R30
	ROL  R31
	ROL  R22
	RJMP __MULF123
__MULF122:
	INC  R23
	BRVS __MULF125
__MULF123:
	RCALL __ROUND_REPACK
	POP  R21
	RET

__MULF127:
	ADD  R17,R0
	ADC  R18,R1
	ADC  R19,R25
	RJMP __MULF128
__MULF126:
	ADD  R18,R0
	ADC  R19,R1
__MULF128:
	ADC  R20,R25
	ADC  R21,R25
	RET

__DIVF21:
	PUSH R21
	RCALL __UNPACK
	CPI  R23,0x80
	BRNE __DIVF210
	TST  R1
__DIVF211:
	BRPL __DIVF219
	RJMP __MINRES
__DIVF219:
	RJMP __MAXRES
__DIVF210:
	CPI  R25,0x80
	BRNE __DIVF218
__DIVF217:
	RJMP __ZERORES
__DIVF218:
	EOR  R0,R1
	SEC
	SBC  R25,R23
	BRVC __DIVF216
	BRLT __DIVF217
	TST  R0
	RJMP __DIVF211
__DIVF216:
	MOV  R23,R25
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	CLR  R1
	CLR  R17
	CLR  R18
	CLR  R19
	CLR  R20
	CLR  R21
	LDI  R25,32
__DIVF212:
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	CPC  R20,R17
	BRLO __DIVF213
	SUB  R26,R30
	SBC  R27,R31
	SBC  R24,R22
	SBC  R20,R17
	SEC
	RJMP __DIVF214
__DIVF213:
	CLC
__DIVF214:
	ROL  R21
	ROL  R18
	ROL  R19
	ROL  R1
	ROL  R26
	ROL  R27
	ROL  R24
	ROL  R20
	DEC  R25
	BRNE __DIVF212
	MOVW R30,R18
	MOV  R22,R1
	POP  R20
	POP  R19
	POP  R18
	POP  R17
	TST  R22
	BRMI __DIVF215
	LSL  R21
	ROL  R30
	ROL  R31
	ROL  R22
	DEC  R23
	BRVS __DIVF217
__DIVF215:
	RCALL __ROUND_REPACK
	POP  R21
	RET

__CMPF12:
	TST  R25
	BRMI __CMPF120
	TST  R23
	BRMI __CMPF121
	CP   R25,R23
	BRLO __CMPF122
	BRNE __CMPF121
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	BRLO __CMPF122
	BREQ __CMPF123
__CMPF121:
	CLZ
	CLC
	RET
__CMPF122:
	CLZ
	SEC
	RET
__CMPF123:
	SEZ
	CLC
	RET
__CMPF120:
	TST  R23
	BRPL __CMPF122
	CP   R25,R23
	BRLO __CMPF121
	BRNE __CMPF122
	CP   R30,R26
	CPC  R31,R27
	CPC  R22,R24
	BRLO __CMPF122
	BREQ __CMPF123
	RJMP __CMPF121

__ADDD12:
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	ADC  R23,R25
	RET

__SUBD12:
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	SBC  R23,R25
	RET

__SUBD21:
	SUB  R26,R30
	SBC  R27,R31
	SBC  R24,R22
	SBC  R25,R23
	RET

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__ANEGD1:
	COM  R31
	COM  R22
	COM  R23
	NEG  R30
	SBCI R31,-1
	SBCI R22,-1
	SBCI R23,-1
	RET

__LSLB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSLB12R
__LSLB12L:
	LSL  R30
	DEC  R0
	BRNE __LSLB12L
__LSLB12R:
	RET

__LSRB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSRB12R
__LSRB12L:
	LSR  R30
	DEC  R0
	BRNE __LSRB12L
__LSRB12R:
	RET

__ASRD1:
	ASR  R23
	ROR  R22
	ROR  R31
	ROR  R30
	RET

__LSLD1:
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R23
	RET

__CBD1:
	MOV  R31,R30
	ADD  R31,R31
	SBC  R31,R31
	MOV  R22,R31
	MOV  R23,R31
	RET

__CWD1:
	MOV  R22,R31
	ADD  R22,R22
	SBC  R22,R22
	MOV  R23,R22
	RET

__CBD2:
	MOV  R27,R26
	ADD  R27,R27
	SBC  R27,R27
	MOV  R24,R27
	MOV  R25,R27
	RET

__MULW12U:
	MUL  R31,R26
	MOV  R31,R0
	MUL  R30,R27
	ADD  R31,R0
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	RET

__MULB1W2U:
	MOV  R22,R30
	MUL  R22,R26
	MOVW R30,R0
	MUL  R22,R27
	ADD  R31,R0
	RET

__MULW12:
	RCALL __CHKSIGNW
	RCALL __MULW12U
	BRTC __MULW121
	RCALL __ANEGW1
__MULW121:
	RET

__DIVB21U:
	CLR  R0
	LDI  R25,8
__DIVB21U1:
	LSL  R26
	ROL  R0
	SUB  R0,R30
	BRCC __DIVB21U2
	ADD  R0,R30
	RJMP __DIVB21U3
__DIVB21U2:
	SBR  R26,1
__DIVB21U3:
	DEC  R25
	BRNE __DIVB21U1
	MOV  R30,R26
	MOV  R26,R0
	RET

__DIVW21U:
	CLR  R0
	CLR  R1
	LDI  R25,16
__DIVW21U1:
	LSL  R26
	ROL  R27
	ROL  R0
	ROL  R1
	SUB  R0,R30
	SBC  R1,R31
	BRCC __DIVW21U2
	ADD  R0,R30
	ADC  R1,R31
	RJMP __DIVW21U3
__DIVW21U2:
	SBR  R26,1
__DIVW21U3:
	DEC  R25
	BRNE __DIVW21U1
	MOVW R30,R26
	MOVW R26,R0
	RET

__DIVW21:
	RCALL __CHKSIGNW
	RCALL __DIVW21U
	BRTC __DIVW211
	RCALL __ANEGW1
__DIVW211:
	RET

__DIVD21U:
	PUSH R19
	PUSH R20
	PUSH R21
	CLR  R0
	CLR  R1
	CLR  R20
	CLR  R21
	LDI  R19,32
__DIVD21U1:
	LSL  R26
	ROL  R27
	ROL  R24
	ROL  R25
	ROL  R0
	ROL  R1
	ROL  R20
	ROL  R21
	SUB  R0,R30
	SBC  R1,R31
	SBC  R20,R22
	SBC  R21,R23
	BRCC __DIVD21U2
	ADD  R0,R30
	ADC  R1,R31
	ADC  R20,R22
	ADC  R21,R23
	RJMP __DIVD21U3
__DIVD21U2:
	SBR  R26,1
__DIVD21U3:
	DEC  R19
	BRNE __DIVD21U1
	MOVW R30,R26
	MOVW R22,R24
	MOVW R26,R0
	MOVW R24,R20
	POP  R21
	POP  R20
	POP  R19
	RET

__DIVD21:
	RCALL __CHKSIGND
	RCALL __DIVD21U
	BRTC __DIVD211
	RCALL __ANEGD1
__DIVD211:
	RET

__MODB21U:
	RCALL __DIVB21U
	MOV  R30,R26
	RET

__MODW21:
	CLT
	SBRS R27,7
	RJMP __MODW211
	COM  R26
	COM  R27
	ADIW R26,1
	SET
__MODW211:
	SBRC R31,7
	RCALL __ANEGW1
	RCALL __DIVW21U
	MOVW R30,R26
	BRTC __MODW212
	RCALL __ANEGW1
__MODW212:
	RET

__CHKSIGNW:
	CLT
	SBRS R31,7
	RJMP __CHKSW1
	RCALL __ANEGW1
	SET
__CHKSW1:
	SBRS R27,7
	RJMP __CHKSW2
	COM  R26
	COM  R27
	ADIW R26,1
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSW2:
	RET

__CHKSIGND:
	CLT
	SBRS R23,7
	RJMP __CHKSD1
	RCALL __ANEGD1
	SET
__CHKSD1:
	SBRS R25,7
	RJMP __CHKSD2
	CLR  R0
	COM  R26
	COM  R27
	COM  R24
	COM  R25
	ADIW R26,1
	ADC  R24,R0
	ADC  R25,R0
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSD2:
	RET

__GETD1P_INC:
	LD   R30,X+
	LD   R31,X+
	LD   R22,X+
	LD   R23,X+
	RET

__PUTDP1_DEC:
	ST   -X,R23
	ST   -X,R22
	ST   -X,R31
	ST   -X,R30
	RET

__GETW2PF:
	OUT  RAMPZ,R22
	ELPM R26,Z+
	ELPM R27,Z
	RET

__GETD1S0:
	LD   R30,Y
	LDD  R31,Y+1
	LDD  R22,Y+2
	LDD  R23,Y+3
	RET

__GETD2S0:
	LD   R26,Y
	LDD  R27,Y+1
	LDD  R24,Y+2
	LDD  R25,Y+3
	RET

__PUTD1S0:
	ST   Y,R30
	STD  Y+1,R31
	STD  Y+2,R22
	STD  Y+3,R23
	RET

__PUTD2S0:
	ST   Y,R26
	STD  Y+1,R27
	STD  Y+2,R24
	STD  Y+3,R25
	RET

__PUTPARD2:
	ST   -Y,R25
	ST   -Y,R24
	ST   -Y,R27
	ST   -Y,R26
	RET

__CDF2U:
	SET
	RJMP __CDF2U0
__CDF2:
	CLT
__CDF2U0:
	RCALL __SWAPD12
	RCALL __CDF1U0

__SWAPD12:
	MOV  R1,R24
	MOV  R24,R22
	MOV  R22,R1
	MOV  R1,R25
	MOV  R25,R23
	MOV  R23,R1

__SWAPW12:
	MOV  R1,R27
	MOV  R27,R31
	MOV  R31,R1

__SWAPB12:
	MOV  R1,R26
	MOV  R26,R30
	MOV  R30,R1
	RET

__CPW02:
	CLR  R0
	CP   R0,R26
	CPC  R0,R27
	RET

__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

;END OF CODE MARKER
__END_OF_CODE:
