
AVRASM ver. 2.1.30  C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm Tue Nov 18 16:20:19 2014

C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1084): warning: Register r5 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1085): warning: Register r4 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1086): warning: Register r7 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1087): warning: Register r6 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1088): warning: Register r9 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1089): warning: Register r10 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1090): warning: Register r12 already defined by the .DEF directive
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1091): warning: Register r8 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 16,000000 MHz
                 ;Memory model             : Medium
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2048 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : No
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dServo5=R5
                 	.DEF _dServo1=R4
                 	.DEF _dServo2=R7
                 	.DEF _dServo3=R6
                 	.DEF _dServo4=R9
                 	.DEF _Enkoder1=R10
                 	.DEF _Enkoder2=R12
                 	.DEF _SysTick=R8
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 01cb 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0cf8 	JMP  _ext_int6_isr
000010 940c 0d23 	JMP  _ext_int7_isr
000012 940c 0fd4 	JMP  _timer2_comp_isr
000014 940c 0000 	JMP  0x00
000016 940c 0f39 	JMP  _timer1_capt_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0f9b 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0d4e 	JMP  _timer3_compc_isr
00003a 940c 0000 	JMP  0x00
00003c 940c 060f 	JMP  _usart1_rx_isr
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _Melodi:
000046 0a4f
000047 0a4f
000048 0000
000049 0a4f      	.DB  0x4F,0xA,0x4F,0xA,0x0,0x0,0x4F,0xA
00004a 0000
00004b 082d
00004c 0a4f
00004d 0000      	.DB  0x0,0x0,0x2D,0x8,0x4F,0xA,0x0,0x0
00004e 0c40
00004f 0000
000050 0000
000051 0000      	.DB  0x40,0xC,0x0,0x0,0x0,0x0,0x0,0x0
000052 0620
000053 0000
000054 0000
000055 0000      	.DB  0x20,0x6,0x0,0x0,0x0,0x0,0x0,0x0
000056 082d
000057 0000
000058 0000
000059 0620      	.DB  0x2D,0x8,0x0,0x0,0x0,0x0,0x20,0x6
00005a 0000
00005b 0000
00005c 0526
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x26,0x5,0x0,0x0
00005e 0000
00005f 06e0
000060 0000
000061 07b7      	.DB  0x0,0x0,0xE0,0x6,0x0,0x0,0xB7,0x7
000062 0000
000063 0748
000064 06e0
000065 0000      	.DB  0x0,0x0,0x48,0x7,0xE0,0x6,0x0,0x0
000066 0620
000067 0a4f
000068 0c40
000069 0dc0      	.DB  0x20,0x6,0x4F,0xA,0x40,0xC,0xC0,0xD
00006a 0000
00006b 0ae9
00006c 0c40
00006d 0000      	.DB  0x0,0x0,0xE9,0xA,0x40,0xC,0x0,0x0
00006e 0a4f
00006f 0000
000070 082d
000071 092d      	.DB  0x4F,0xA,0x0,0x0,0x2D,0x8,0x2D,0x9
000072 07b7
000073 0000
000074 0000
000075 082d      	.DB  0xB7,0x7,0x0,0x0,0x0,0x0,0x2D,0x8
000076 0000
000077 0000
000078 0620
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x20,0x6,0x0,0x0
00007a 0000
00007b 0526
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x26,0x5,0x0,0x0,0x0,0x0
00007e 06e0
00007f 0000
000080 07b7
000081 0000      	.DB  0xE0,0x6,0x0,0x0,0xB7,0x7,0x0,0x0
000082 0748
000083 06e0
000084 0000
000085 0620      	.DB  0x48,0x7,0xE0,0x6,0x0,0x0,0x20,0x6
000086 0a4f
000087 0c40
000088 0dc0
000089 0000      	.DB  0x4F,0xA,0x40,0xC,0xC0,0xD,0x0,0x0
00008a 0ae9
00008b 0c40
00008c 0000
00008d 0a4f      	.DB  0xE9,0xA,0x40,0xC,0x0,0x0,0x4F,0xA
00008e 0000
00008f 082d
000090 092d
000091 07b7      	.DB  0x0,0x0,0x2D,0x8,0x2D,0x9,0xB7,0x7
000092 0000
000093 0000      	.DB  0x0,0x0,0x0,0x0
                 _Tempo:
000094 1e1e
000095 1e1e
000096 1e1e
000097 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
000098 1e1e
000099 1e1e
00009a 1e1e
00009b 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
00009c 1e1e
00009d 1e1e
00009e 1e1e
00009f 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000a0 1e1e
0000a1 1e1e
0000a2 1e1e
0000a3 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000a4 2323
0000a5 1823
0000a6 1e1e
0000a7 1e1e      	.DB  0x23,0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E
0000a8 1e1e
0000a9 1e1e
0000aa 1e1e
0000ab 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000ac 1e1e
0000ad 1e1e
0000ae 1e1e
0000af 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000b0 1e1e
0000b1 1e1e
0000b2 1e1e
0000b3 231e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x23
0000b4 2323
0000b5 1e18
0000b6 1e1e
0000b7 1e1e      	.DB  0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E,0x1E
0000b8 1e1e
0000b9 1e1e
0000ba 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
                 _tbl10_G100:
0000bb 2710
0000bc 03e8
0000bd 0064
0000be 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
0000bf 0001      	.DB  0x1,0x0
                 _tbl16_G100:
0000c0 1000
0000c1 0100
0000c2 0010
0000c3 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
0000c4 0000      	.DW  0x0000
                 
                 _0x152:
0000c5 0000
0000c6 0000
0000c7 0000
0000c8 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000c9 0000      	.DB  0x0,0x0
                 _0x0:
0000ca 614b
0000cb 696c
0000cc 7262
0000cd 7361      	.DB  0x4B,0x61,0x6C,0x69,0x62,0x72,0x61,0x73
0000ce 2069
0000cf 6553
0000d0 736e
0000d1 726f      	.DB  0x69,0x20,0x53,0x65,0x6E,0x73,0x6F,0x72
0000d2 5300
0000d3 6c65
0000d4 7365
0000d5 6961      	.DB  0x0,0x53,0x65,0x6C,0x65,0x73,0x61,0x69
0000d6 3e20
0000d7 3e3e
0000d8 3e3e
0000d9 3e3e      	.DB  0x20,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E
0000da 003e
0000db 6944
0000dc 6568
0000dd 746e      	.DB  0x3E,0x0,0x44,0x69,0x68,0x65,0x6E,0x74
0000de 6b69
0000df 6e61
0000e0 3e20
0000e1 3e3e      	.DB  0x69,0x6B,0x61,0x6E,0x20,0x3E,0x3E,0x3E
0000e2 3e3e
0000e3 4d00
0000e4 7265
0000e5 6861      	.DB  0x3E,0x3E,0x0,0x4D,0x65,0x72,0x61,0x68
0000e6 482d
0000e7 6a69
0000e8 7561
0000e9 422d      	.DB  0x2D,0x48,0x69,0x6A,0x61,0x75,0x2D,0x42
0000ea 7269
0000eb 0075
0000ec 2e31
0000ed 6157      	.DB  0x69,0x72,0x75,0x0,0x31,0x2E,0x57,0x61
0000ee 6e72
0000ef 2061
0000f0 654d
0000f1 6172      	.DB  0x72,0x6E,0x61,0x20,0x4D,0x65,0x72,0x61
0000f2 2068
0000f3 3e3e
0000f4 5400
0000f5 6b65      	.DB  0x68,0x20,0x3E,0x3E,0x0,0x54,0x65,0x6B
0000f6 6e61
0000f7 5420
0000f8 6d6f
0000f9 6f62      	.DB  0x61,0x6E,0x20,0x54,0x6F,0x6D,0x62,0x6F
0000fa 206c
0000fb 3c31
0000fc 003c
0000fd 2e32      	.DB  0x6C,0x20,0x31,0x3C,0x3C,0x0,0x32,0x2E
0000fe 6157
0000ff 6e72
000100 2061
000101 6948      	.DB  0x57,0x61,0x72,0x6E,0x61,0x20,0x48,0x69
000102 616a
000103 2075
000104 3e3e
000105 3300      	.DB  0x6A,0x61,0x75,0x20,0x3E,0x3E,0x0,0x33
000106 572e
000107 7261
000108 616e
000109 4220      	.DB  0x2E,0x57,0x61,0x72,0x6E,0x61,0x20,0x42
00010a 7269
00010b 2075
00010c 3e3e
00010d 003e      	.DB  0x69,0x72,0x75,0x20,0x3E,0x3E,0x3E,0x0
00010e 2e34
00010f 6157
000110 6e72
000111 2061      	.DB  0x34,0x2E,0x57,0x61,0x72,0x6E,0x61,0x20
000112 6948
000113 6174
000114 206d
000115 3e3e      	.DB  0x48,0x69,0x74,0x61,0x6D,0x20,0x3E,0x3E
000116 4800
000117 7469
000118 6d61
000119 7550      	.DB  0x0,0x48,0x69,0x74,0x61,0x6D,0x50,0x75
00011a 6974
00011b 2d68
00011c 654d
00011d 6172      	.DB  0x74,0x69,0x68,0x2D,0x4D,0x65,0x72,0x61
00011e 0068
00011f 6948
000120 6174
000121 506d      	.DB  0x68,0x0,0x48,0x69,0x74,0x61,0x6D,0x50
000122 7475
000123 6869
000124 482d
000125 6a69      	.DB  0x75,0x74,0x69,0x68,0x2D,0x48,0x69,0x6A
000126 7561
000127 4800
000128 7469
000129 6d61      	.DB  0x61,0x75,0x0,0x48,0x69,0x74,0x61,0x6D
00012a 7550
00012b 6974
00012c 2d68
00012d 6942      	.DB  0x50,0x75,0x74,0x69,0x68,0x2D,0x42,0x69
00012e 7572
00012f 0020
000130 2e31
000131 6157      	.DB  0x72,0x75,0x20,0x0,0x31,0x2E,0x57,0x61
000132 6e72
000133 2061
000134 7550
000135 6974      	.DB  0x72,0x6E,0x61,0x20,0x50,0x75,0x74,0x69
000136 2068
000137 3e3e
000138 3200
000139 572e      	.DB  0x68,0x20,0x3E,0x3E,0x0,0x32,0x2E,0x57
00013a 7261
00013b 616e
00013c 4820
00013d 7469      	.DB  0x61,0x72,0x6E,0x61,0x20,0x48,0x69,0x74
00013e 6d61
00013f 3e20
000140 003e
000141 434c      	.DB  0x61,0x6D,0x20,0x3E,0x3E,0x0,0x4C,0x43
000142 2044
000143 4554
000144 5453
000145 2e2e      	.DB  0x44,0x20,0x54,0x45,0x53,0x54,0x2E,0x2E
000146 2e2e
000147 2e2e
000148 2e2e
000149 3100      	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x0,0x31
00014a 3332
00014b 3534
00014c 3736
00014d 3938      	.DB  0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39
00014e 3130
00014f 3332
000150 3534
000151 0036      	.DB  0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x0
000152 4d49
000153 2055
000154 6554
000155 7473      	.DB  0x49,0x4D,0x55,0x20,0x54,0x65,0x73,0x74
000156 4f20
000157 204b
000158 3e3e
000159 3e3e      	.DB  0x20,0x4F,0x4B,0x20,0x3E,0x3E,0x3E,0x3E
00015a 5700
00015b 6961
00015c 2074
00015d 2034      	.DB  0x0,0x57,0x61,0x69,0x74,0x20,0x34,0x20
00015e 7947
00015f 6f72
000160 6373
000161 706f      	.DB  0x47,0x79,0x72,0x6F,0x73,0x63,0x6F,0x70
000162 0065
000163 4d49
000164 2055
000165 6554      	.DB  0x65,0x0,0x49,0x4D,0x55,0x20,0x54,0x65
000166 7473
000167 4620
000168 6961
000169 206c      	.DB  0x73,0x74,0x20,0x46,0x61,0x69,0x6C,0x20
00016a 3e3e
00016b 4300
00016c 6568
00016d 6b63      	.DB  0x3E,0x3E,0x0,0x43,0x68,0x65,0x63,0x6B
00016e 4820
00016f 7261
000170 7764
000171 7261      	.DB  0x20,0x48,0x61,0x72,0x64,0x77,0x61,0x72
000172 2165
000173 0021
000174 7947
000175 6f72      	.DB  0x65,0x21,0x21,0x0,0x47,0x79,0x72,0x6F
000176 4320
000177 6c61
000178 696c
000179 7262      	.DB  0x20,0x43,0x61,0x6C,0x6C,0x69,0x62,0x72
00017a 7461
00017b 6465
00017c 4d00
00017d 6761      	.DB  0x61,0x74,0x65,0x64,0x0,0x4D,0x61,0x67
00017e 656e
00017f 6f74
000180 5420
000181 7365      	.DB  0x6E,0x65,0x74,0x6F,0x20,0x54,0x65,0x73
000182 2074
000183 4b4f
000184 002e
000185 3c3c      	.DB  0x74,0x20,0x4F,0x4B,0x2E,0x0,0x3C,0x3C
000186 3c3c
000187 3c3c
000188 3c3c
000189 3e3e      	.DB  0x3C,0x3C,0x3C,0x3C,0x3C,0x3C,0x3E,0x3E
00018a 3e3e
00018b 3e3e
00018c 3e3e
00018d 4d00      	.DB  0x3E,0x3E,0x3E,0x3E,0x3E,0x3E,0x0,0x4D
00018e 6761
00018f 7465
000190 206f
000191 6554      	.DB  0x61,0x67,0x65,0x74,0x6F,0x20,0x54,0x65
000192 7473
000193 4620
000194 6961
000195 006c      	.DB  0x73,0x74,0x20,0x46,0x61,0x69,0x6C,0x0
000196 6f4d
000197 6564
000198 6142
000199 616c      	.DB  0x4D,0x6F,0x64,0x65,0x42,0x61,0x6C,0x61
00019a 636e
00019b 6e69
00019c 2067
00019d 4e4f      	.DB  0x6E,0x63,0x69,0x6E,0x67,0x20,0x4F,0x4E
00019e 3c00
00019f 3c3c
0001a0 3c3c
0001a1 5020      	.DB  0x0,0x3C,0x3C,0x3C,0x3C,0x3C,0x20,0x50
0001a2 7475
0001a3 7261
0001a4 4b20
0001a5 7269      	.DB  0x75,0x74,0x61,0x72,0x20,0x4B,0x69,0x72
0001a6 0069
0001a7 3e3e
0001a8 3e3e
0001a9 5020      	.DB  0x69,0x0,0x3E,0x3E,0x3E,0x3E,0x20,0x50
0001aa 7475
0001ab 7261
0001ac 4b20
0001ad 6e61      	.DB  0x75,0x74,0x61,0x72,0x20,0x4B,0x61,0x6E
0001ae 6e61
0001af 4200
0001b0 6c61
0001b1 6e61      	.DB  0x61,0x6E,0x0,0x42,0x61,0x6C,0x61,0x6E
0001b2 7254
0001b3 6361
0001b4 7265
0001b5 4d20      	.DB  0x54,0x72,0x61,0x63,0x65,0x72,0x20,0x4D
0001b6 646f
0001b7 0065      	.DB  0x6F,0x64,0x65,0x0
                 _0x2040060:
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1243): warning: .cseg .db misalignment - padding zero byte
0001b8 0001      	.DB  0x1
                 _0x2040000:
0001b9 4e2d
0001ba 4e41
0001bb 4900
0001bc 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\Eko Henfri\Dropbox\ER2C.share\ER2C Robot Education\Program\ADROIT_AVR_R3_01.asm(1246): warning: .cseg .db misalignment - padding zero byte
0001bd 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
0001be 0001      	.DW  0x01
0001bf 0002      	.DW  0x02
0001c0 0188 0000 	.DD  __REG_BIT_VARS*2
                 
0001c2 000a      	.DW  0x0A
0001c3 0004      	.DW  0x04
0001c4 018a 0000 	.DD  _0x152*2
                 
0001c6 0001      	.DW  0x01
0001c7 096f      	.DW  __seed_G102
0001c8 0370 0000 	.DD  _0x2040060*2
                 
                 _0xFFFFFFFF:
0001ca 0000      	.DW  0
                 
                 __RESET:
0001cb 94f8      	CLI
0001cc 27ee      	CLR  R30
0001cd bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0001ce e0f1      	LDI  R31,1
0001cf bff5      	OUT  MCUCR,R31
0001d0 bfe5      	OUT  MCUCR,R30
0001d1 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0001d3 e1f8      	LDI  R31,0x18
0001d4 bdf1      	OUT  WDTCR,R31
0001d5 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0001d6 e08d      	LDI  R24,(14-2)+1
0001d7 e0a2      	LDI  R26,2
0001d8 27bb      	CLR  R27
                 __CLEAR_REG:
0001d9 93ed      	ST   X+,R30
0001da 958a      	DEC  R24
0001db f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0001dc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0001dd e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0001de e0a0      	LDI  R26,LOW(__SRAM_START)
0001df e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0001e0 93ed      	ST   X+,R30
0001e1 9701      	SBIW R24,1
0001e2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0001e3 e7ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0001e4 e0f3      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
0001e5 e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0001e6 bfdb      	OUT  RAMPZ,R29
0001e7 9187      	ELPM R24,Z+
0001e8 9197      	ELPM R25,Z+
0001e9 9700      	SBIW R24,0
0001ea f081      	BREQ __GLOBAL_INI_END
0001eb 91a7      	ELPM R26,Z+
0001ec 91b7      	ELPM R27,Z+
0001ed 9007      	ELPM R0,Z+
0001ee 9017      	ELPM R1,Z+
0001ef 91c7      	ELPM R28,Z+
0001f0 91d7      	ELPM R29,Z+
0001f1 01bf      	MOVW R22,R30
0001f2 b7db      	IN   R29,RAMPZ
0001f3 01f0      	MOVW R30,R0
0001f4 bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
0001f5 9007      	ELPM R0,Z+
0001f6 920d      	ST   X+,R0
0001f7 9701      	SBIW R24,1
0001f8 f7e1      	BRNE __GLOBAL_INI_LOOP
0001f9 01fb      	MOVW R30,R22
0001fa cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0001fb efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0001fc bfed      	OUT  SPL,R30
0001fd e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0001fe bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0001ff e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000200 e0d9      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000201 940c 113b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x900
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : ADROIT AVR Rev.3
                 ;Version : 1
                 ;Date    : 3/13/2014
                 ;Author  : Eko Henfri Binugroho
                 ;Company : ER2C
                 ;
                 ;Chip type           : ATmega128
                 ;Program type        : Application
                 ;Clock frequency     : 16,000000 MHz
                 ;Memory model        : Small
                 ;External SRAM size  : 0
                 ;Data Stack size     : 1024
                 ;*****************************************************/
                 ;
                 ;#include <stdio.h>
                 ;#include <mem.h>
                 ;#include <math.h>
                 ;#include "Include/mySystem.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 _SudutServo5:
000203 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
000204 81a8      	LD   R26,Y
000205 27bb      	CLR  R27
000206 d01a      	RCALL _HitungSudut
000207 2e5e      	MOV  R5,R30
000208 c629      	RJMP _0x20A0007
                 _SudutServo1:
000209 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
00020a 81a8      	LD   R26,Y
00020b 27bb      	CLR  R27
00020c d014      	RCALL _HitungSudut
00020d 2e4e      	MOV  R4,R30
00020e c623      	RJMP _0x20A0007
                 _SudutServo2:
00020f 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
000210 81a8      	LD   R26,Y
000211 27bb      	CLR  R27
000212 d00e      	RCALL _HitungSudut
000213 2e7e      	MOV  R7,R30
000214 c61d      	RJMP _0x20A0007
                 _SudutServo3:
000215 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
000216 81a8      	LD   R26,Y
000217 27bb      	CLR  R27
000218 d008      	RCALL _HitungSudut
000219 2e6e      	MOV  R6,R30
00021a c617      	RJMP _0x20A0007
                 _SudutServo4:
00021b 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
00021c 81a8      	LD   R26,Y
00021d 27bb      	CLR  R27
00021e d002      	RCALL _HitungSudut
00021f 2e9e      	MOV  R9,R30
000220 c611      	RJMP _0x20A0007
                 _HitungSudut:
000221 93ba      	ST   -Y,R27
000222 93aa      	ST   -Y,R26
                 ;	sudut -> Y+0
000223 81a8      	LD   R26,Y
000224 81b9      	LDD  R27,Y+1
000225 e0e8      	LDI  R30,LOW(8)
000226 940e 1563 	CALL __MULB1W2U
000228 01df      	MOVW R26,R30
000229 e1e2      	LDI  R30,LOW(18)
00022a e0f0      	LDI  R31,HIGH(18)
00022b 940e 157c 	CALL __DIVW21U
00022d 5eec      	SUBI R30,-LOW(20)
00022e c561      	RJMP _0x20A0009
                 _HitungSudut2:
00022f 93ba      	ST   -Y,R27
000230 93aa      	ST   -Y,R26
                 ;	sudut -> Y+0
000231 81a8      	LD   R26,Y
000232 81b9      	LDD  R27,Y+1
000233 ece8      	LDI  R30,LOW(200)
000234 940e 1563 	CALL __MULB1W2U
000236 01df      	MOVW R26,R30
000237 e1e2      	LDI  R30,LOW(18)
000238 e0f0      	LDI  R31,HIGH(18)
000239 940e 157c 	CALL __DIVW21U
00023b 50ec      	SUBI R30,LOW(-500)
00023c 4ffe      	SBCI R31,HIGH(-500)
00023d c552      	RJMP _0x20A0009
                 _SudutServo6:
00023e 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
00023f 81a8      	LD   R26,Y
000240 27bb      	CLR  R27
000241 dfed      	RCALL _HitungSudut2
000242 bdfb      	OUT  0x2A+1,R31
000243 bdea      	OUT  0x2A,R30
000244 c5ed      	RJMP _0x20A0007
                 _SudutServo7:
000245 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
000246 81a8      	LD   R26,Y
000247 27bb      	CLR  R27
000248 dfe6      	RCALL _HitungSudut2
000249 bdf9      	OUT  0x28+1,R31
00024a bde8      	OUT  0x28,R30
00024b c5e6      	RJMP _0x20A0007
                 _SudutServo8:
00024c 93aa      	ST   -Y,R26
00024d 931a      	ST   -Y,R17
00024e 930a      	ST   -Y,R16
                 ;	posisi -> Y+2
                 ;	dServo8 -> R16,R17
00024f 81aa      	LDD  R26,Y+2
000250 27bb      	CLR  R27
000251 dfdd      	RCALL _HitungSudut2
000252 018f      	MOVW R16,R30
000253 9310 0079 	STS  121,R17
000255 9300 0078 	STS  120,R16
000257 c108      	RJMP _0x20A0011
                 _SetDataMotorPWM:
000258 93ba      	ST   -Y,R27
000259 93aa      	ST   -Y,R26
                 ;	Ka -> Y+2
                 ;	Ki -> Y+0
00025a 81e8      	LD   R30,Y
00025b 81f9      	LDD  R31,Y+1
00025c efaf      	LDI  R26,LOW(65535)
00025d efbf      	LDI  R27,HIGH(65535)
00025e 940e 1569 	CALL __MULW12
000260 83e8      	ST   Y,R30
000261 83f9      	STD  Y+1,R31
000262 81ab      	LDD  R26,Y+3
000263 23aa      	TST  R26
000264 f472      	BRPL _0x3
000265 81ea      	LDD  R30,Y+2
000266 81fb      	LDD  R31,Y+2+1
000267 940e 1524 	CALL __ANEGW1
000269 2fef      	MOV  R30,R31
00026a e0f0      	LDI  R31,0
00026b 93e0 0085 	STS  133,R30
00026d 81ea      	LDD  R30,Y+2
00026e 95e1      	NEG  R30
00026f 93e0 0084 	STS  132,R30
000271 9a1d      	SBI  0x3,5
000272 c007      	RJMP _0x6
                 _0x3:
000273 81eb      	LDD  R30,Y+3
000274 93e0 0085 	STS  133,R30
000276 81ea      	LDD  R30,Y+2
000277 93e0 0084 	STS  132,R30
000279 981d      	CBI  0x3,5
                 _0x6:
00027a 81a9      	LDD  R26,Y+1
00027b 23aa      	TST  R26
00027c f472      	BRPL _0x9
00027d 81e8      	LD   R30,Y
00027e 81f9      	LDD  R31,Y+1
00027f 940e 1524 	CALL __ANEGW1
000281 2fef      	MOV  R30,R31
000282 e0f0      	LDI  R31,0
000283 93e0 0087 	STS  135,R30
000285 81e8      	LD   R30,Y
000286 95e1      	NEG  R30
000287 93e0 0086 	STS  134,R30
000289 981a      	CBI  0x3,2
00028a c007      	RJMP _0xC
                 _0x9:
00028b 81e9      	LDD  R30,Y+1
00028c 93e0 0087 	STS  135,R30
00028e 81e8      	LD   R30,Y
00028f 93e0 0086 	STS  134,R30
000291 9a1a      	SBI  0x3,2
                 _0xC:
000292 c588      	RJMP _0x20A0008
                 _Stop:
000293 e0e0      	LDI  R30,LOW(0)
000294 93e0 0087 	STS  135,R30
000296 93e0 0086 	STS  134,R30
000298 93e0 0085 	STS  133,R30
00029a 93e0 0084 	STS  132,R30
00029c 9508      	RET
                 _LCD_Init_Cmd:
00029d 93aa      	ST   -Y,R26
                 ;	xData -> Y+0
00029e 81e8      	LD   R30,Y
00029f 7fe0      	ANDI R30,LOW(0xF0)
0002a0 60e4      	ORI  R30,4
0002a1 bbeb      	OUT  0x1B,R30
                +
0002a2 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0002a3 958a     +DEC R24
0002a4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0002a5 98da      	CBI  0x1B,2
0002a6 c58b      	RJMP _0x20A0007
                 _LCD_Perintah:
0002a7 93aa      	ST   -Y,R26
                 ;	xData -> Y+0
0002a8 98d8      	CBI  0x1B,0
0002a9 81e8      	LD   R30,Y
0002aa 7fe0      	ANDI R30,LOW(0xF0)
0002ab 60ec      	ORI  R30,LOW(0xC)
0002ac bbeb      	OUT  0x1B,R30
                +
0002ad e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0002ae 958a     +DEC R24
0002af f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0002b0 98da      	CBI  0x1B,2
                +
0002b1 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002b2 958a     +DEC R24
0002b3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002b4 81e8      	LD   R30,Y
0002b5 95e2      	SWAP R30
0002b6 7fe0      	ANDI R30,0xF0
0002b7 60ec      	ORI  R30,LOW(0xC)
0002b8 bbeb      	OUT  0x1B,R30
                +
0002b9 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0002ba 958a     +DEC R24
0002bb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0002bc 98da      	CBI  0x1B,2
                +
0002bd ef80     +LDI R24 , LOW ( 2800 )
0002be e09a     +LDI R25 , HIGH ( 2800 )
                +__DELAY_USW_LOOP :
0002bf 9701     +SBIW R24 , 1
0002c0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 2800
0002c1 9ada      	SBI  0x1B,2
0002c2 c56f      	RJMP _0x20A0007
                 _LCD_Data:
0002c3 93aa      	ST   -Y,R26
                 ;	xData -> Y+0
0002c4 9ad8      	SBI  0x1B,0
0002c5 81e8      	LD   R30,Y
0002c6 7fe0      	ANDI R30,LOW(0xF0)
0002c7 60ed      	ORI  R30,LOW(0xD)
0002c8 bbeb      	OUT  0x1B,R30
                +
0002c9 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0002ca 958a     +DEC R24
0002cb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0002cc 98da      	CBI  0x1B,2
                +
0002cd e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002ce 958a     +DEC R24
0002cf f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002d0 81e8      	LD   R30,Y
0002d1 95e2      	SWAP R30
0002d2 7fe0      	ANDI R30,0xF0
0002d3 60ed      	ORI  R30,LOW(0xD)
0002d4 bbeb      	OUT  0x1B,R30
                +
0002d5 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0002d6 958a     +DEC R24
0002d7 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0002d8 98da      	CBI  0x1B,2
                +
0002d9 ed85     +LDI R24 , LOW ( 213 )
                +__DELAY_USB_LOOP :
0002da 958a     +DEC R24
0002db f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 213
0002dc 9ada      	SBI  0x1B,2
0002dd c554      	RJMP _0x20A0007
                 _LCD_Init:
0002de e3a2      	LDI  R26,LOW(50)
0002df e0b0      	LDI  R27,0
0002e0 940e 1362 	CALL _delay_ms
0002e2 e3a0      	LDI  R26,LOW(48)
0002e3 dfb9      	RCALL _LCD_Init_Cmd
0002e4 e0a5      	LDI  R26,LOW(5)
0002e5 e0b0      	LDI  R27,0
0002e6 940e 1362 	CALL _delay_ms
0002e8 e3a0      	LDI  R26,LOW(48)
0002e9 dfb3      	RCALL _LCD_Init_Cmd
0002ea e0a1      	LDI  R26,LOW(1)
0002eb e0b0      	LDI  R27,0
0002ec 940e 1362 	CALL _delay_ms
0002ee e3a0      	LDI  R26,LOW(48)
0002ef dfad      	RCALL _LCD_Init_Cmd
0002f0 e0a1      	LDI  R26,LOW(1)
0002f1 e0b0      	LDI  R27,0
0002f2 940e 1362 	CALL _delay_ms
0002f4 e2a0      	LDI  R26,LOW(32)
0002f5 dfa7      	RCALL _LCD_Init_Cmd
0002f6 e2a8      	LDI  R26,LOW(40)
0002f7 dfaf      	RCALL _LCD_Perintah
0002f8 e1a0      	LDI  R26,LOW(16)
0002f9 dfad      	RCALL _LCD_Perintah
0002fa e0ac      	LDI  R26,LOW(12)
0002fb dfab      	RCALL _LCD_Perintah
0002fc e0a6      	LDI  R26,LOW(6)
0002fd dfa9      	RCALL _LCD_Perintah
0002fe c033      	RJMP _0x20A0012
                 _LCD_GotoXY:
0002ff 93aa      	ST   -Y,R26
000300 931a      	ST   -Y,R17
                 ;	x -> Y+2
                 ;	y -> Y+1
                 ;	baris -> R17
000301 81e9      	LDD  R30,Y+1
000302 30e0      	CPI  R30,0
000303 f419      	BRNE _0x21
000304 81aa      	LDD  R26,Y+2
000305 58a0      	SUBI R26,-LOW(128)
000306 c002      	RJMP _0x141
                 _0x21:
000307 81aa      	LDD  R26,Y+2
000308 54a0      	SUBI R26,-LOW(192)
                 _0x141:
000309 df9d      	RCALL _LCD_Perintah
00030a 8118      	LDD  R17,Y+0
00030b c056      	RJMP _0x20A0010
                 _LCD_TextF:
00030c 940e 1612 	CALL __PUTPARD2
                 ;	*text -> Y+0
                 _0x23:
00030e 940e 15fe 	CALL __GETD1S0
                +
000310 bf6b     +OUT RAMPZ , R22
000311 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
000312 30e0      	CPI  R30,0
000313 f099      	BREQ _0x25
000314 940e 15fe 	CALL __GETD1S0
                +
000316 bf6b     +OUT RAMPZ , R22
000317 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
000318 dfaa      	RCALL _LCD_Data
000319 01de      	MOVW R26,R28
00031a 940e 15f0 	CALL __GETD1P_INC
                +
00031c 5fef     +SUBI R30 , LOW ( - 1 )
00031d 4fff     +SBCI R31 , HIGH ( - 1 )
00031e 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00031f 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
000320 940e 15f5 	CALL __PUTDP1_DEC
                +
000322 50e1     +SUBI R30 , LOW ( 1 )
000323 40f0     +SBCI R31 , HIGH ( 1 )
000324 4060     +SBCI R22 , BYTE3 ( 1 )
000325 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
000326 cfe7      	RJMP _0x23
                 _0x25:
000327 c4f3      	RJMP _0x20A0008
                 ;	*text -> Y+0
                 _LCD_TulisF:
000328 940e 1612 	CALL __PUTPARD2
                 ;	Baris -> Y+4
                 ;	*text -> Y+0
00032a e0e0      	LDI  R30,LOW(0)
00032b 93ea      	ST   -Y,R30
00032c 81ad      	LDD  R26,Y+5
00032d dfd1      	RCALL _LCD_GotoXY
00032e 940e 1603 	CALL __GETD2S0
000330 dfdb      	RCALL _LCD_TextF
000331 c442      	RJMP _0x20A000A
                 _LCD_Hapus:
                 _0x20A0012:
000332 e0a1      	LDI  R26,LOW(1)
000333 df73      	RCALL _LCD_Perintah
000334 9508      	RET
                 ;	Baris -> Y+1
                 ;	i -> R17
                 _LCD_HapusKiri:
000335 93aa      	ST   -Y,R26
000336 931a      	ST   -Y,R17
                 ;	Baris -> Y+1
                 ;	i -> R17
000337 e0e0      	LDI  R30,LOW(0)
000338 93ea      	ST   -Y,R30
000339 81aa      	LDD  R26,Y+2
00033a dfc4      	RCALL _LCD_GotoXY
00033b e010      	LDI  R17,LOW(0)
                 _0x2D:
00033c 3110      	CPI  R17,16
00033d f440      	BRSH _0x2E
00033e e2a0      	LDI  R26,LOW(32)
00033f df83      	RCALL _LCD_Data
000340 e3a2      	LDI  R26,LOW(50)
000341 e0b0      	LDI  R27,0
000342 940e 1362 	CALL _delay_ms
000344 5f1f      	SUBI R17,-1
000345 cff6      	RJMP _0x2D
                 _0x2E:
000346 8118      	LDD  R17,Y+0
000347 c448      	RJMP _0x20A0009
                 _LCD_HapusKanan:
000348 93aa      	ST   -Y,R26
000349 931a      	ST   -Y,R17
00034a 930a      	ST   -Y,R16
                 ;	Baris -> Y+2
                 ;	i -> R17
                 ;	j -> R16
00034b 81ea      	LDD  R30,Y+2
00034c e4a0      	LDI  R26,LOW(64)
00034d 9fea      	MUL  R30,R26
00034e 01f0      	MOVW R30,R0
00034f 58e0      	SUBI R30,-LOW(128)
000350 2f0e      	MOV  R16,R30
000351 e01f      	LDI  R17,LOW(15)
                 _0x30:
000352 efef      	LDI  R30,LOW(255)
000353 17e1      	CP   R30,R17
000354 f45c      	BRGE _0x31
000355 2fa1      	MOV  R26,R17
000356 0fa0      	ADD  R26,R16
000357 df4f      	RCALL _LCD_Perintah
000358 e2a0      	LDI  R26,LOW(32)
000359 df69      	RCALL _LCD_Data
00035a e3a2      	LDI  R26,LOW(50)
00035b e0b0      	LDI  R27,0
00035c 940e 1362 	CALL _delay_ms
00035e 5011      	SUBI R17,1
00035f cff2      	RJMP _0x30
                 _0x31:
                 _0x20A0011:
000360 8119      	LDD  R17,Y+1
000361 8108      	LDD  R16,Y+0
                 _0x20A0010:
000362 9623      	ADIW R28,3
000363 9508      	RET
                 _LCD_TulisKiri:
000364 940e 1612 	CALL __PUTPARD2
000366 931a      	ST   -Y,R17
                 ;	Baris -> Y+5
                 ;	*text -> Y+1
                 ;	i -> R17
000367 e0e0      	LDI  R30,LOW(0)
000368 93ea      	ST   -Y,R30
000369 81ae      	LDD  R26,Y+6
00036a df94      	RCALL _LCD_GotoXY
00036b e010      	LDI  R17,LOW(0)
                 _0x33:
00036c 3110      	CPI  R17,16
00036d f498      	BRSH _0x34
00036e 2fe1      	MOV  R30,R17
                +
00036f 81a9     +LDD R26 , Y + 1
000370 81ba     +LDD R27 , Y + 1 + 1
000371 818b     +LDD R24 , Y + 1 + 2
000372 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
000373 27ff      	CLR  R31
000374 2766      	CLR  R22
000375 2777      	CLR  R23
000376 940e 1515 	CALL __ADDD12
                +
000378 bf6b     +OUT RAMPZ , R22
000379 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00037a df48      	RCALL _LCD_Data
00037b e3a2      	LDI  R26,LOW(50)
00037c e0b0      	LDI  R27,0
00037d 940e 1362 	CALL _delay_ms
00037f 5f1f      	SUBI R17,-1
000380 cfeb      	RJMP _0x33
                 _0x34:
000381 8118      	LDD  R17,Y+0
000382 c520      	RJMP _0x20A0005
                 _LCD_TulisKanan:
000383 940e 1612 	CALL __PUTPARD2
000385 931a      	ST   -Y,R17
000386 930a      	ST   -Y,R16
                 ;	Baris -> Y+6
                 ;	*text -> Y+2
                 ;	i -> R17
                 ;	j -> R16
000387 81ee      	LDD  R30,Y+6
000388 e4a0      	LDI  R26,LOW(64)
000389 9fea      	MUL  R30,R26
00038a 01f0      	MOVW R30,R0
00038b 58e0      	SUBI R30,-LOW(128)
00038c 2f0e      	MOV  R16,R30
00038d e01f      	LDI  R17,LOW(15)
                 _0x36:
00038e efef      	LDI  R30,LOW(255)
00038f 17e1      	CP   R30,R17
000390 f4ac      	BRGE _0x37
000391 2fa1      	MOV  R26,R17
000392 0fa0      	ADD  R26,R16
000393 df13      	RCALL _LCD_Perintah
000394 2fe1      	MOV  R30,R17
                +
000395 81aa     +LDD R26 , Y + 2
000396 81bb     +LDD R27 , Y + 2 + 1
000397 818c     +LDD R24 , Y + 2 + 2
000398 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000399 940e 154a 	CALL __CBD1
00039b 940e 1515 	CALL __ADDD12
                +
00039d bf6b     +OUT RAMPZ , R22
00039e 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00039f df23      	RCALL _LCD_Data
0003a0 e3a2      	LDI  R26,LOW(50)
0003a1 e0b0      	LDI  R27,0
0003a2 940e 1362 	CALL _delay_ms
0003a4 5011      	SUBI R17,1
0003a5 cfe8      	RJMP _0x36
                 _0x37:
0003a6 c03e      	RJMP _0x20A000F
                 _LCD_TulisTengah:
0003a7 940e 1612 	CALL __PUTPARD2
0003a9 931a      	ST   -Y,R17
0003aa 930a      	ST   -Y,R16
                 ;	Baris -> Y+6
                 ;	*text -> Y+2
                 ;	i -> R17
                 ;	j -> R16
0003ab 81ee      	LDD  R30,Y+6
0003ac e4a0      	LDI  R26,LOW(64)
0003ad 9fea      	MUL  R30,R26
0003ae 01f0      	MOVW R30,R0
0003af 58e0      	SUBI R30,-LOW(128)
0003b0 2f0e      	MOV  R16,R30
0003b1 e017      	LDI  R17,LOW(7)
                 _0x39:
0003b2 efef      	LDI  R30,LOW(255)
0003b3 17e1      	CP   R30,R17
0003b4 f584      	BRGE _0x3A
0003b5 2fa1      	MOV  R26,R17
0003b6 0fa0      	ADD  R26,R16
0003b7 deef      	RCALL _LCD_Perintah
0003b8 2fe1      	MOV  R30,R17
                +
0003b9 81aa     +LDD R26 , Y + 2
0003ba 81bb     +LDD R27 , Y + 2 + 1
0003bb 818c     +LDD R24 , Y + 2 + 2
0003bc 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0003bd 940e 154a 	CALL __CBD1
0003bf 940e 1515 	CALL __ADDD12
                +
0003c1 bf6b     +OUT RAMPZ , R22
0003c2 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
0003c3 deff      	RCALL _LCD_Data
0003c4 e3a2      	LDI  R26,LOW(50)
0003c5 e0b0      	LDI  R27,0
0003c6 940e 1362 	CALL _delay_ms
0003c8 2fe0      	MOV  R30,R16
0003c9 1be1      	SUB  R30,R17
0003ca 5fe1      	SUBI R30,-LOW(15)
0003cb 2fae      	MOV  R26,R30
0003cc deda      	RCALL _LCD_Perintah
0003cd 2fe1      	MOV  R30,R17
                +
0003ce 81aa     +LDD R26 , Y + 2
0003cf 81bb     +LDD R27 , Y + 2 + 1
0003d0 818c     +LDD R24 , Y + 2 + 2
0003d1 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0003d2 940e 154a 	CALL __CBD1
0003d4 940e 161c 	CALL __SWAPD12
0003d6 940e 151a 	CALL __SUBD12
                +
0003d8 5fe1     +SUBI R30 , LOW ( - 15 )
0003d9 4fff     +SBCI R31 , HIGH ( - 15 )
0003da 4f6f     +SBCI R22 , BYTE3 ( - 15 )
0003db 4f7f     +SBCI R23 , BYTE4 ( - 15 )
                 	__ADDD1N 15
                +
0003dc bf6b     +OUT RAMPZ , R22
0003dd 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
0003de dee4      	RCALL _LCD_Data
0003df e3a2      	LDI  R26,LOW(50)
0003e0 e0b0      	LDI  R27,0
0003e1 940e 1362 	CALL _delay_ms
0003e3 5011      	SUBI R17,1
0003e4 cfcd      	RJMP _0x39
                 _0x3A:
                 _0x20A000F:
0003e5 8119      	LDD  R17,Y+1
0003e6 8108      	LDD  R16,Y+0
0003e7 9627      	ADIW R28,7
0003e8 9508      	RET
                 ;	Baris -> Y+6
                 ;	*text -> Y+2
                 ;	i -> R17
                 ;	j -> R16
                 _LCD_Angka4:
0003e9 93ba      	ST   -Y,R27
0003ea 93aa      	ST   -Y,R26
                 ;	x -> Y+0
0003eb 81a9      	LDD  R26,Y+1
0003ec 23aa      	TST  R26
0003ed f452      	BRPL _0x3E
0003ee 81e8      	LD   R30,Y
0003ef 81f9      	LDD  R31,Y+1
0003f0 efaf      	LDI  R26,LOW(65535)
0003f1 efbf      	LDI  R27,HIGH(65535)
0003f2 940e 1569 	CALL __MULW12
0003f4 83e8      	ST   Y,R30
0003f5 83f9      	STD  Y+1,R31
0003f6 e2ad      	LDI  R26,LOW(45)
0003f7 decb      	RCALL _LCD_Data
                 _0x3E:
0003f8 81a8      	LD   R26,Y
0003f9 81b9      	LDD  R27,Y+1
0003fa eee8      	LDI  R30,LOW(1000)
0003fb e0f3      	LDI  R31,HIGH(1000)
0003fc 940e 158f 	CALL __DIVW21
0003fe 5de0      	SUBI R30,-LOW(48)
0003ff 2fae      	MOV  R26,R30
000400 dec2      	RCALL _LCD_Data
000401 81a8      	LD   R26,Y
000402 81b9      	LDD  R27,Y+1
000403 eee8      	LDI  R30,LOW(1000)
000404 e0f3      	LDI  R31,HIGH(1000)
000405 940e 15c1 	CALL __MODW21
000407 01df      	MOVW R26,R30
000408 e6e4      	LDI  R30,LOW(100)
000409 e0f0      	LDI  R31,HIGH(100)
00040a 940e 158f 	CALL __DIVW21
00040c 5de0      	SUBI R30,-LOW(48)
00040d 2fae      	MOV  R26,R30
00040e deb4      	RCALL _LCD_Data
00040f 81a8      	LD   R26,Y
000410 81b9      	LDD  R27,Y+1
000411 e6e4      	LDI  R30,LOW(100)
000412 e0f0      	LDI  R31,HIGH(100)
000413 940e 15c1 	CALL __MODW21
000415 01df      	MOVW R26,R30
000416 e0ea      	LDI  R30,LOW(10)
000417 e0f0      	LDI  R31,HIGH(10)
000418 940e 158f 	CALL __DIVW21
00041a 5de0      	SUBI R30,-LOW(48)
00041b 2fae      	MOV  R26,R30
00041c dea6      	RCALL _LCD_Data
00041d 81a8      	LD   R26,Y
00041e 81b9      	LDD  R27,Y+1
00041f e0ea      	LDI  R30,LOW(10)
000420 e0f0      	LDI  R31,HIGH(10)
000421 940e 15c1 	CALL __MODW21
000423 5de0      	SUBI R30,-LOW(48)
000424 2fae      	MOV  R26,R30
000425 de9d      	RCALL _LCD_Data
000426 c369      	RJMP _0x20A0009
                 _LCD_Angka3:
000427 93ba      	ST   -Y,R27
000428 93aa      	ST   -Y,R26
                 ;	x -> Y+0
000429 81a9      	LDD  R26,Y+1
00042a 23aa      	TST  R26
00042b f452      	BRPL _0x3F
00042c 81e8      	LD   R30,Y
00042d 81f9      	LDD  R31,Y+1
00042e efaf      	LDI  R26,LOW(65535)
00042f efbf      	LDI  R27,HIGH(65535)
000430 940e 1569 	CALL __MULW12
000432 83e8      	ST   Y,R30
000433 83f9      	STD  Y+1,R31
000434 e2ad      	LDI  R26,LOW(45)
000435 de8d      	RCALL _LCD_Data
                 _0x3F:
000436 81a8      	LD   R26,Y
000437 81b9      	LDD  R27,Y+1
000438 e6e4      	LDI  R30,LOW(100)
000439 e0f0      	LDI  R31,HIGH(100)
00043a 940e 158f 	CALL __DIVW21
00043c 5de0      	SUBI R30,-LOW(48)
00043d 2fae      	MOV  R26,R30
00043e de84      	RCALL _LCD_Data
00043f 81a8      	LD   R26,Y
000440 81b9      	LDD  R27,Y+1
000441 e6e4      	LDI  R30,LOW(100)
000442 e0f0      	LDI  R31,HIGH(100)
000443 940e 15c1 	CALL __MODW21
000445 01df      	MOVW R26,R30
000446 e0ea      	LDI  R30,LOW(10)
000447 e0f0      	LDI  R31,HIGH(10)
000448 940e 158f 	CALL __DIVW21
00044a 5de0      	SUBI R30,-LOW(48)
00044b 2fae      	MOV  R26,R30
00044c de76      	RCALL _LCD_Data
00044d 81a8      	LD   R26,Y
00044e 81b9      	LDD  R27,Y+1
00044f e0ea      	LDI  R30,LOW(10)
000450 e0f0      	LDI  R31,HIGH(10)
000451 940e 15c1 	CALL __MODW21
000453 5de0      	SUBI R30,-LOW(48)
000454 2fae      	MOV  R26,R30
000455 de6d      	RCALL _LCD_Data
000456 c339      	RJMP _0x20A0009
                 ;	x -> Y+0
                 _LCD_uByte:
000457 93aa      	ST   -Y,R26
                 ;	x -> Y+0
000458 81a8      	LD   R26,Y
000459 e6e4      	LDI  R30,LOW(100)
00045a 940e 156e 	CALL __DIVB21U
00045c 5de0      	SUBI R30,-LOW(48)
00045d 2fae      	MOV  R26,R30
00045e de64      	RCALL _LCD_Data
00045f 81a8      	LD   R26,Y
000460 e6e4      	LDI  R30,LOW(100)
000461 940e 15be 	CALL __MODB21U
000463 2fae      	MOV  R26,R30
000464 e0ea      	LDI  R30,LOW(10)
000465 940e 156e 	CALL __DIVB21U
000467 5de0      	SUBI R30,-LOW(48)
000468 2fae      	MOV  R26,R30
000469 de59      	RCALL _LCD_Data
00046a 81a8      	LD   R26,Y
00046b e0ea      	LDI  R30,LOW(10)
00046c 940e 15be 	CALL __MODB21U
00046e 5de0      	SUBI R30,-LOW(48)
00046f 2fae      	MOV  R26,R30
000470 de52      	RCALL _LCD_Data
000471 c3c0      	RJMP _0x20A0007
                 _LCD_Biner:
000472 93aa      	ST   -Y,R26
000473 931a      	ST   -Y,R17
                 ;	x -> Y+1
                 ;	i -> R17
000474 e010      	LDI  R17,LOW(0)
                 _0x42:
000475 3018      	CPI  R17,8
000476 f470      	BRSH _0x43
000477 e0e7      	LDI  R30,LOW(7)
000478 1be1      	SUB  R30,R17
000479 e0a1      	LDI  R26,LOW(1)
00047a 940e 1530 	CALL __LSLB12
00047c 81a9      	LDD  R26,Y+1
00047d 23ea      	AND  R30,R26
00047e f411      	BRNE _0x44
00047f e3a0      	LDI  R26,LOW(48)
000480 c001      	RJMP _0x142
                 _0x44:
000481 e3a1      	LDI  R26,LOW(49)
                 _0x142:
000482 de40      	RCALL _LCD_Data
000483 5f1f      	SUBI R17,-1
000484 cff0      	RJMP _0x42
                 _0x43:
000485 8118      	LDD  R17,Y+0
000486 c309      	RJMP _0x20A0009
                 _I2C_Init:
000487 e0e0      	LDI  R30,LOW(0)
000488 93e0 0071 	STS  113,R30
00048a e4e8      	LDI  R30,LOW(72)
00048b 93e0 0070 	STS  112,R30
00048d 9508      	RET
                 _I2C_Start:
00048e 93aa      	ST   -Y,R26
00048f 931a      	ST   -Y,R17
                 ;	address -> Y+1
                 ;	twst -> R17
000490 eae4      	LDI  R30,LOW(164)
000491 93e0 0074 	STS  116,R30
                 _0x46:
000493 91e0 0074 	LDS  R30,116
000495 78e0      	ANDI R30,LOW(0x80)
000496 f3e1      	BREQ _0x46
000497 91e0 0071 	LDS  R30,113
000499 7fe8      	ANDI R30,LOW(0xF8)
00049a 2f1e      	MOV  R17,R30
00049b 3018      	CPI  R17,8
00049c f011      	BREQ _0x4A
00049d 3110      	CPI  R17,16
00049e f409      	BRNE _0x4B
                 _0x4A:
00049f c003      	RJMP _0x49
                 _0x4B:
0004a0 e0e1      	LDI  R30,LOW(1)
0004a1 8118      	LDD  R17,Y+0
0004a2 c2ed      	RJMP _0x20A0009
                 _0x49:
0004a3 81e9      	LDD  R30,Y+1
0004a4 93e0 0073 	STS  115,R30
0004a6 e8e4      	LDI  R30,LOW(132)
0004a7 93e0 0074 	STS  116,R30
                 _0x4C:
0004a9 91e0 0074 	LDS  R30,116
0004ab 78e0      	ANDI R30,LOW(0x80)
0004ac f3e1      	BREQ _0x4C
0004ad 91e0 0071 	LDS  R30,113
0004af 7fe8      	ANDI R30,LOW(0xF8)
0004b0 2f1e      	MOV  R17,R30
0004b1 3118      	CPI  R17,24
0004b2 f011      	BREQ _0x50
0004b3 3410      	CPI  R17,64
0004b4 f409      	BRNE _0x51
                 _0x50:
0004b5 c003      	RJMP _0x4F
                 _0x51:
0004b6 e0e1      	LDI  R30,LOW(1)
0004b7 8118      	LDD  R17,Y+0
0004b8 c2d7      	RJMP _0x20A0009
                 _0x4F:
0004b9 e0e0      	LDI  R30,LOW(0)
0004ba 8118      	LDD  R17,Y+0
0004bb c2d4      	RJMP _0x20A0009
                 _I2C_Start_Wait:
0004bc 93aa      	ST   -Y,R26
0004bd 931a      	ST   -Y,R17
                 ;	address -> Y+1
                 ;	twst -> R17
                 _0x52:
0004be eae4      	LDI  R30,LOW(164)
0004bf 93e0 0074 	STS  116,R30
                 _0x55:
0004c1 91e0 0074 	LDS  R30,116
0004c3 78e0      	ANDI R30,LOW(0x80)
0004c4 f3e1      	BREQ _0x55
0004c5 91e0 0071 	LDS  R30,113
0004c7 7fe8      	ANDI R30,LOW(0xF8)
0004c8 2f1e      	MOV  R17,R30
0004c9 3018      	CPI  R17,8
0004ca f011      	BREQ _0x59
0004cb 3110      	CPI  R17,16
0004cc f409      	BRNE _0x5A
                 _0x59:
0004cd c001      	RJMP _0x58
                 _0x5A:
0004ce cfef      	RJMP _0x52
                 _0x58:
0004cf 81e9      	LDD  R30,Y+1
0004d0 93e0 0073 	STS  115,R30
0004d2 e8e4      	LDI  R30,LOW(132)
0004d3 93e0 0074 	STS  116,R30
                 _0x5B:
0004d5 91e0 0074 	LDS  R30,116
0004d7 78e0      	ANDI R30,LOW(0x80)
0004d8 f3e1      	BREQ _0x5B
0004d9 91e0 0071 	LDS  R30,113
0004db 7fe8      	ANDI R30,LOW(0xF8)
0004dc 2f1e      	MOV  R17,R30
0004dd 3210      	CPI  R17,32
0004de f011      	BREQ _0x5F
0004df 3518      	CPI  R17,88
0004e0 f441      	BRNE _0x5E
                 _0x5F:
0004e1 e9e4      	LDI  R30,LOW(148)
0004e2 93e0 0074 	STS  116,R30
                 _0x61:
0004e4 91e0 0074 	LDS  R30,116
0004e6 71e0      	ANDI R30,LOW(0x10)
0004e7 f7e1      	BRNE _0x61
0004e8 cfd5      	RJMP _0x52
                 _0x5E:
0004e9 8118      	LDD  R17,Y+0
0004ea c2a5      	RJMP _0x20A0009
                 ;	address -> Y+0
                 _I2C_Stop:
0004eb e9e4      	LDI  R30,LOW(148)
0004ec 93e0 0074 	STS  116,R30
                 _0x64:
0004ee 91e0 0074 	LDS  R30,116
0004f0 71e0      	ANDI R30,LOW(0x10)
0004f1 f7e1      	BRNE _0x64
0004f2 9508      	RET
                 _I2C_Write:
0004f3 93aa      	ST   -Y,R26
0004f4 931a      	ST   -Y,R17
                 ;	data -> Y+1
                 ;	twst -> R17
0004f5 81e9      	LDD  R30,Y+1
0004f6 93e0 0073 	STS  115,R30
0004f8 e8e4      	LDI  R30,LOW(132)
0004f9 93e0 0074 	STS  116,R30
                 _0x67:
0004fb 91e0 0074 	LDS  R30,116
0004fd 78e0      	ANDI R30,LOW(0x80)
0004fe f3e1      	BREQ _0x67
0004ff 91e0 0071 	LDS  R30,113
000501 7fe8      	ANDI R30,LOW(0xF8)
000502 2f1e      	MOV  R17,R30
000503 3218      	CPI  R17,40
000504 f019      	BREQ _0x6A
000505 e0e1      	LDI  R30,LOW(1)
000506 8118      	LDD  R17,Y+0
000507 c288      	RJMP _0x20A0009
                 _0x6A:
000508 e0e0      	LDI  R30,LOW(0)
000509 8118      	LDD  R17,Y+0
00050a c285      	RJMP _0x20A0009
                 _I2C_ReadAck:
00050b ece4      	LDI  R30,LOW(196)
00050c 93e0 0074 	STS  116,R30
                 _0x6B:
00050e 91e0 0074 	LDS  R30,116
000510 78e0      	ANDI R30,LOW(0x80)
000511 f3e1      	BREQ _0x6B
000512 c007      	RJMP _0x20A000E
                 _I2C_ReadNak:
000513 e8e4      	LDI  R30,LOW(132)
000514 93e0 0074 	STS  116,R30
                 _0x6E:
000516 91e0 0074 	LDS  R30,116
000518 78e0      	ANDI R30,LOW(0x80)
000519 f3e1      	BREQ _0x6E
                 _0x20A000E:
00051a 91e0 0073 	LDS  R30,115
00051c 9508      	RET
                 _BuzzerOff:
00051d e0e0      	LDI  R30,LOW(0)
00051e bfe3      	OUT  0x33,R30
00051f 98c4      	CBI  0x18,4
000520 bfe0      	OUT  0x30,R30
000521 9508      	RET
                 _FBuzzer:
000522 93ba      	ST   -Y,R27
000523 93aa      	ST   -Y,R26
                 ;	x -> Y+0
000524 81a8      	LD   R26,Y
000525 81b9      	LDD  R27,Y+1
000526 37ad      	CPI  R26,LOW(0x7D)
000527 e0e0      	LDI  R30,HIGH(0x7D)
000528 07be      	CPC  R27,R30
000529 f020      	BRLO _0x74
00052a 31a1      	CPI  R26,LOW(0x2711)
00052b e2e7      	LDI  R30,HIGH(0x2711)
00052c 07be      	CPC  R27,R30
00052d f008      	BRLO _0x75
                 _0x74:
00052e c060      	RJMP _0x73
                 _0x75:
00052f 81a8      	LD   R26,Y
000530 81b9      	LDD  R27,Y+1
000531 3da0      	CPI  R26,LOW(0x7D0)
000532 e0e7      	LDI  R30,HIGH(0x7D0)
000533 07be      	CPC  R27,R30
000534 f078      	BRLO _0x76
000535 e1ea      	LDI  R30,LOW(26)
000536 bfe3      	OUT  0x33,R30
000537 e0e0      	LDI  R30,LOW(0)
000538 bfe2      	OUT  0x32,R30
000539 81e8      	LD   R30,Y
00053a 81f9      	LDD  R31,Y+1
00053b 2766      	CLR  R22
00053c 2777      	CLR  R23
                +
00053d e2a0     +LDI R26 , LOW ( 0x7A120 )
00053e eab1     +LDI R27 , HIGH ( 0x7A120 )
00053f e087     +LDI R24 , BYTE3 ( 0x7A120 )
000540 e090     +LDI R25 , BYTE4 ( 0x7A120 )
                 	__GETD2N 0x7A120
000541 940e 15b9 	CALL __DIVD21
000543 bfe1      	OUT  0x31,R30
                 _0x76:
000544 81a8      	LD   R26,Y
000545 81b9      	LDD  R27,Y+1
000546 3ea8      	CPI  R26,LOW(0x3E8)
000547 e0e3      	LDI  R30,HIGH(0x3E8)
000548 07be      	CPC  R27,R30
000549 f078      	BRLO _0x77
00054a e1eb      	LDI  R30,LOW(27)
00054b bfe3      	OUT  0x33,R30
00054c e0e0      	LDI  R30,LOW(0)
00054d bfe2      	OUT  0x32,R30
00054e 81e8      	LD   R30,Y
00054f 81f9      	LDD  R31,Y+1
000550 2766      	CLR  R22
000551 2777      	CLR  R23
                +
000552 e9a0     +LDI R26 , LOW ( 0x3D090 )
000553 edb0     +LDI R27 , HIGH ( 0x3D090 )
000554 e083     +LDI R24 , BYTE3 ( 0x3D090 )
000555 e090     +LDI R25 , BYTE4 ( 0x3D090 )
                 	__GETD2N 0x3D090
000556 940e 15b9 	CALL __DIVD21
000558 c034      	RJMP _0x143
                 _0x77:
000559 81a8      	LD   R26,Y
00055a 81b9      	LDD  R27,Y+1
00055b 3fa4      	CPI  R26,LOW(0x1F4)
00055c e0e1      	LDI  R30,HIGH(0x1F4)
00055d 07be      	CPC  R27,R30
00055e f078      	BRLO _0x79
00055f e1ec      	LDI  R30,LOW(28)
000560 bfe3      	OUT  0x33,R30
000561 e0e0      	LDI  R30,LOW(0)
000562 bfe2      	OUT  0x32,R30
000563 81e8      	LD   R30,Y
000564 81f9      	LDD  R31,Y+1
000565 2766      	CLR  R22
000566 2777      	CLR  R23
                +
000567 e4a8     +LDI R26 , LOW ( 0x1E848 )
000568 eeb8     +LDI R27 , HIGH ( 0x1E848 )
000569 e081     +LDI R24 , BYTE3 ( 0x1E848 )
00056a e090     +LDI R25 , BYTE4 ( 0x1E848 )
                 	__GETD2N 0x1E848
00056b 940e 15b9 	CALL __DIVD21
00056d c01f      	RJMP _0x143
                 _0x79:
00056e 81a8      	LD   R26,Y
00056f 81b9      	LDD  R27,Y+1
000570 3faa      	CPI  R26,LOW(0xFA)
000571 e0e0      	LDI  R30,HIGH(0xFA)
000572 07be      	CPC  R27,R30
000573 f078      	BRLO _0x7B
000574 e1ed      	LDI  R30,LOW(29)
000575 bfe3      	OUT  0x33,R30
000576 e0e0      	LDI  R30,LOW(0)
000577 bfe2      	OUT  0x32,R30
000578 81e8      	LD   R30,Y
000579 81f9      	LDD  R31,Y+1
00057a 2766      	CLR  R22
00057b 2777      	CLR  R23
                +
00057c eaac     +LDI R26 , LOW ( 0x107AC )
00057d e0b7     +LDI R27 , HIGH ( 0x107AC )
00057e e081     +LDI R24 , BYTE3 ( 0x107AC )
00057f e090     +LDI R25 , BYTE4 ( 0x107AC )
                 	__GETD2N 0x107AC
000580 940e 15b9 	CALL __DIVD21
000582 c00a      	RJMP _0x143
                 _0x7B:
000583 e1ee      	LDI  R30,LOW(30)
000584 bfe3      	OUT  0x33,R30
000585 e0e0      	LDI  R30,LOW(0)
000586 bfe2      	OUT  0x32,R30
000587 81e8      	LD   R30,Y
000588 81f9      	LDD  R31,Y+1
000589 eda6      	LDI  R26,LOW(33750)
00058a e8b3      	LDI  R27,HIGH(33750)
00058b 940e 157c 	CALL __DIVW21U
                 _0x143:
00058d bfe1      	OUT  0x31,R30
00058e c001      	RJMP _0x7D
                 _0x73:
00058f df8d      	RCALL _BuzzerOff
                 _0x7D:
000590 c1ff      	RJMP _0x20A0009
                 _Buzzer:
000591 93ba      	ST   -Y,R27
000592 93aa      	ST   -Y,R26
                 ;	Frek -> Y+2
                 ;	Tempo -> Y+0
000593 81aa      	LDD  R26,Y+2
000594 81bb      	LDD  R27,Y+2+1
000595 df8c      	RCALL _FBuzzer
000596 81a8      	LD   R26,Y
000597 81b9      	LDD  R27,Y+1
000598 940e 1362 	CALL _delay_ms
00059a df82      	RCALL _BuzzerOff
00059b c27f      	RJMP _0x20A0008
                 _Nada1:
00059c eee8      	LDI  R30,LOW(1000)
00059d e0f3      	LDI  R31,HIGH(1000)
00059e 93fa      	ST   -Y,R31
00059f 93ea      	ST   -Y,R30
0005a0 e6a4      	LDI  R26,LOW(100)
0005a1 e0b0      	LDI  R27,0
0005a2 dfee      	RCALL _Buzzer
0005a3 efe4      	LDI  R30,LOW(500)
0005a4 e0f1      	LDI  R31,HIGH(500)
0005a5 93fa      	ST   -Y,R31
0005a6 93ea      	ST   -Y,R30
0005a7 e1a4      	LDI  R26,LOW(20)
0005a8 e0b0      	LDI  R27,0
0005a9 dfe7      	RCALL _Buzzer
0005aa ebe8      	LDI  R30,LOW(3000)
0005ab e0fb      	LDI  R31,HIGH(3000)
0005ac 93fa      	ST   -Y,R31
0005ad 93ea      	ST   -Y,R30
0005ae e3a2      	LDI  R26,LOW(50)
0005af c040      	RJMP _0x20A000D
                 _Nada2:
0005b0 ebe8      	LDI  R30,LOW(3000)
0005b1 e0fb      	LDI  R31,HIGH(3000)
0005b2 93fa      	ST   -Y,R31
0005b3 93ea      	ST   -Y,R30
0005b4 e6a4      	LDI  R26,LOW(100)
0005b5 e0b0      	LDI  R27,0
0005b6 dfda      	RCALL _Buzzer
0005b7 efe4      	LDI  R30,LOW(500)
0005b8 e0f1      	LDI  R31,HIGH(500)
0005b9 93fa      	ST   -Y,R31
0005ba 93ea      	ST   -Y,R30
0005bb e1a4      	LDI  R26,LOW(20)
0005bc e0b0      	LDI  R27,0
0005bd dfd3      	RCALL _Buzzer
0005be ece4      	LDI  R30,LOW(2500)
0005bf e0f9      	LDI  R31,HIGH(2500)
0005c0 93fa      	ST   -Y,R31
0005c1 93ea      	ST   -Y,R30
0005c2 e9a6      	LDI  R26,LOW(150)
0005c3 e0b0      	LDI  R27,0
0005c4 dfcc      	RCALL _Buzzer
0005c5 efe4      	LDI  R30,LOW(500)
0005c6 e0f1      	LDI  R31,HIGH(500)
0005c7 93fa      	ST   -Y,R31
0005c8 93ea      	ST   -Y,R30
0005c9 e1a4      	LDI  R26,LOW(20)
0005ca e0b0      	LDI  R27,0
0005cb dfc5      	RCALL _Buzzer
0005cc eee8      	LDI  R30,LOW(1000)
0005cd e0f3      	LDI  R31,HIGH(1000)
0005ce 93fa      	ST   -Y,R31
0005cf 93ea      	ST   -Y,R30
0005d0 e3a2      	LDI  R26,LOW(50)
0005d1 e0b0      	LDI  R27,0
0005d2 dfbe      	RCALL _Buzzer
0005d3 efe4      	LDI  R30,LOW(500)
0005d4 e0f1      	LDI  R31,HIGH(500)
0005d5 93fa      	ST   -Y,R31
0005d6 93ea      	ST   -Y,R30
0005d7 e1a4      	LDI  R26,LOW(20)
0005d8 e0b0      	LDI  R27,0
0005d9 dfb7      	RCALL _Buzzer
0005da ebe8      	LDI  R30,LOW(3000)
0005db e0fb      	LDI  R31,HIGH(3000)
0005dc c02c      	RJMP _0x20A000C
                 _Nada3:
0005dd ebe8      	LDI  R30,LOW(3000)
0005de e0fb      	LDI  R31,HIGH(3000)
0005df 93fa      	ST   -Y,R31
0005e0 93ea      	ST   -Y,R30
0005e1 e3a2      	LDI  R26,LOW(50)
0005e2 e0b0      	LDI  R27,0
0005e3 dfad      	RCALL _Buzzer
0005e4 efe4      	LDI  R30,LOW(500)
0005e5 e0f1      	LDI  R31,HIGH(500)
0005e6 93fa      	ST   -Y,R31
0005e7 93ea      	ST   -Y,R30
0005e8 e1a4      	LDI  R26,LOW(20)
0005e9 e0b0      	LDI  R27,0
0005ea dfa6      	RCALL _Buzzer
0005eb eee8      	LDI  R30,LOW(1000)
0005ec e0f3      	LDI  R31,HIGH(1000)
0005ed 93fa      	ST   -Y,R31
0005ee 93ea      	ST   -Y,R30
0005ef e9a6      	LDI  R26,LOW(150)
                 _0x20A000D:
0005f0 e0b0      	LDI  R27,0
0005f1 df9f      	RCALL _Buzzer
0005f2 efe4      	LDI  R30,LOW(500)
0005f3 e0f1      	LDI  R31,HIGH(500)
0005f4 93fa      	ST   -Y,R31
0005f5 93ea      	ST   -Y,R30
0005f6 e1a4      	LDI  R26,LOW(20)
0005f7 e0b0      	LDI  R27,0
0005f8 df98      	RCALL _Buzzer
0005f9 ebe8      	LDI  R30,LOW(3000)
0005fa e0fb      	LDI  R31,HIGH(3000)
0005fb 93fa      	ST   -Y,R31
0005fc 93ea      	ST   -Y,R30
0005fd e6a4      	LDI  R26,LOW(100)
0005fe e0b0      	LDI  R27,0
0005ff df91      	RCALL _Buzzer
000600 efe4      	LDI  R30,LOW(500)
000601 e0f1      	LDI  R31,HIGH(500)
000602 93fa      	ST   -Y,R31
000603 93ea      	ST   -Y,R30
000604 e1a4      	LDI  R26,LOW(20)
000605 e0b0      	LDI  R27,0
000606 df8a      	RCALL _Buzzer
000607 ede0      	LDI  R30,LOW(2000)
000608 e0f7      	LDI  R31,HIGH(2000)
                 _0x20A000C:
000609 93fa      	ST   -Y,R31
00060a 93ea      	ST   -Y,R30
00060b e3a2      	LDI  R26,LOW(50)
00060c e0b0      	LDI  R27,0
00060d df83      	RCALL _Buzzer
00060e 9508      	RET
                 _usart1_rx_isr:
00060f 93aa      	ST   -Y,R26
000610 93ea      	ST   -Y,R30
000611 93fa      	ST   -Y,R31
000612 b7ef      	IN   R30,SREG
000613 93ea      	ST   -Y,R30
000614 9722      	SBIW R28,2
                 ;	status -> Y+1
                 ;	data -> Y+0
000615 91e0 009b 	LDS  R30,155
000617 83e9      	STD  Y+1,R30
000618 91e0 009c 	LDS  R30,156
00061a 83e8      	ST   Y,R30
00061b 81e9      	LDD  R30,Y+1
00061c 71ec      	ANDI R30,LOW(0x1C)
00061d f4e9      	BRNE _0x7E
00061e 91e0 093b 	LDS  R30,_rx_wr_index1
000620 e0f0      	LDI  R31,0
000621 5de5      	SUBI R30,LOW(-_rx_buffer1)
000622 4ff6      	SBCI R31,HIGH(-_rx_buffer1)
000623 81a8      	LD   R26,Y
000624 83a0      	STD  Z+0,R26
000625 91a0 093b 	LDS  R26,_rx_wr_index1
000627 5faf      	SUBI R26,-LOW(1)
000628 93a0 093b 	STS  _rx_wr_index1,R26
00062a 31a0      	CPI  R26,LOW(0x10)
00062b f419      	BRNE _0x7F
00062c e0e0      	LDI  R30,LOW(0)
00062d 93e0 093b 	STS  _rx_wr_index1,R30
                 _0x7F:
00062f 91a0 093d 	LDS  R26,_rx_counter1
000631 5faf      	SUBI R26,-LOW(1)
000632 93a0 093d 	STS  _rx_counter1,R26
000634 31a0      	CPI  R26,LOW(0x10)
000635 f429      	BRNE _0x80
000636 e0e0      	LDI  R30,LOW(0)
000637 93e0 093d 	STS  _rx_counter1,R30
000639 9468      	SET
00063a f824      	BLD  R2,4
                 _0x80:
                 _0x7E:
00063b 9622      	ADIW R28,2
00063c 91e9      	LD   R30,Y+
00063d bfef      	OUT  SREG,R30
00063e 91f9      	LD   R31,Y+
00063f 91e9      	LD   R30,Y+
000640 91a9      	LD   R26,Y+
000641 9518      	RETI
                 _BacaSerial1:
000642 93ba      	ST   -Y,R27
000643 93aa      	ST   -Y,R26
000644 940e 162d 	CALL __SAVELOCR4
                 ;	TimeOut -> Y+4
                 ;	i -> R16,R17
                 ;	data -> R19
000646 94e8      	CLT
000647 f821      	BLD  R2,1
                +
000648 e000     +LDI R16 , LOW ( 0 )
000649 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x82:
00064a 81ec      	LDD  R30,Y+4
00064b 81fd      	LDD  R31,Y+4+1
00064c 170e      	CP   R16,R30
00064d 071f      	CPC  R17,R31
00064e f538      	BRSH _0x83
00064f 91e0 093d 	LDS  R30,_rx_counter1
000651 30e0      	CPI  R30,0
000652 f0e9      	BREQ _0x84
000653 9468      	SET
000654 f821      	BLD  R2,1
000655 91e0 093c 	LDS  R30,_rx_rd_index1
000657 e0f0      	LDI  R31,0
000658 5de5      	SUBI R30,LOW(-_rx_buffer1)
000659 4ff6      	SBCI R31,HIGH(-_rx_buffer1)
00065a 8130      	LD   R19,Z
00065b 91a0 093c 	LDS  R26,_rx_rd_index1
00065d 5faf      	SUBI R26,-LOW(1)
00065e 93a0 093c 	STS  _rx_rd_index1,R26
000660 31a0      	CPI  R26,LOW(0x10)
000661 f419      	BRNE _0x85
000662 e0e0      	LDI  R30,LOW(0)
000663 93e0 093c 	STS  _rx_rd_index1,R30
                 _0x85:
000665 94f8      	cli
000666 91e0 093d 	LDS  R30,_rx_counter1
000668 50e1      	SUBI R30,LOW(1)
000669 93e0 093d 	STS  _rx_counter1,R30
00066b 9478      	sei
00066c 2fe3      	MOV  R30,R19
00066d 940e 1632 	CALL __LOADLOCR4
00066f c233      	RJMP _0x20A0005
                 _0x84:
                +
000670 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000671 958a     +DEC R24
000672 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
000673 5f0f     +SUBI R16 , LOW ( - 1 )
000674 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000675 cfd4      	RJMP _0x82
                 _0x83:
000676 e0e0      	LDI  R30,LOW(0)
000677 940e 1632 	CALL __LOADLOCR4
000679 c229      	RJMP _0x20A0005
                 ;	data -> R17
                 _putchar1:
00067a 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x87:
00067b 91e0 009b 	LDS  R30,155
00067d 72e0      	ANDI R30,LOW(0x20)
00067e f3e1      	BREQ _0x87
00067f 81e8      	LD   R30,Y
000680 93e0 009c 	STS  156,R30
000682 c1af      	RJMP _0x20A0007
                 _BacaSensor:
000683 93aa      	ST   -Y,R26
                 ;	Alamat -> Y+1
                 ;	Protokol -> Y+0
000684 81e9      	LDD  R30,Y+1
000685 81a8      	LD   R26,Y
000686 2bea      	OR   R30,R26
000687 2fae      	MOV  R26,R30
000688 dff1      	RCALL _putchar1
000689 c106      	RJMP _0x20A0009
                 _TungguTombolKalibrasi:
00068a 93aa      	ST   -Y,R26
00068b 931a      	ST   -Y,R17
                 ;	Alamat -> Y+2
                 ;	Protokol -> Y+1
                 ;	filter -> R17
00068c e010      	LDI  R17,0
                 _0x8A:
00068d 3615      	CPI  R17,101
00068e f420      	BRSH _0x8C
00068f 999b      	SBIC 0x13,3
000690 e010      	LDI  R17,LOW(0)
000691 5f1f      	SUBI R17,-1
000692 cffa      	RJMP _0x8A
                 _0x8C:
000693 999b      	SBIC 0x13,3
000694 c008      	RJMP _0x8E
000695 81ea      	LDD  R30,Y+2
000696 81a9      	LDD  R26,Y+1
000697 2bea      	OR   R30,R26
000698 2fae      	MOV  R26,R30
000699 dfe0      	RCALL _putchar1
00069a e0e1      	LDI  R30,LOW(1)
00069b 8118      	LDD  R17,Y+0
00069c c659      	RJMP _0x20A0002
                 _0x8E:
00069d e0a0      	LDI  R26,LOW(0)
00069e dfdb      	RCALL _putchar1
00069f e0e0      	LDI  R30,LOW(0)
0006a0 8118      	LDD  R17,Y+0
0006a1 c654      	RJMP _0x20A0002
                 _PesanKalibrasiBerhasil:
0006a2 e0a1      	LDI  R26,LOW(1)
0006a3 dc03      	RCALL _LCD_Perintah
0006a4 e0e0      	LDI  R30,LOW(0)
0006a5 93ea      	ST   -Y,R30
                +
0006a6 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0006a7 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
0006a8 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 0 ) )
0006a9 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD2FN _0x0,0
0006aa dc7d      	RCALL _LCD_TulisF
0006ab e0e1      	LDI  R30,LOW(1)
0006ac 93ea      	ST   -Y,R30
                +
0006ad eaa5     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
0006ae e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
0006af e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 17 ) )
0006b0 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 17 ) )
                 	__POINTD2FN _0x0,17
0006b1 c00f      	RJMP _0x20A000B
                 _PesanKalibrasiGagal:
0006b2 e0a1      	LDI  R26,LOW(1)
0006b3 dbf3      	RCALL _LCD_Perintah
0006b4 e0e0      	LDI  R30,LOW(0)
0006b5 93ea      	ST   -Y,R30
                +
0006b6 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0006b7 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
0006b8 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 0 ) )
0006b9 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD2FN _0x0,0
0006ba dc6d      	RCALL _LCD_TulisF
0006bb e0e1      	LDI  R30,LOW(1)
0006bc 93ea      	ST   -Y,R30
                +
0006bd eba6     +LDI R26 , LOW ( 2 * _0x0 + ( 34 ) )
0006be e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 34 ) )
0006bf e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 34 ) )
0006c0 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 34 ) )
                 	__POINTD2FN _0x0,34
                 _0x20A000B:
0006c1 dca2      	RCALL _LCD_TulisKiri
0006c2 9508      	RET
                 ;	Alamat -> Y+0
                 _KalibrasiHitamPutih:
0006c3 93aa      	ST   -Y,R26
                 ;	Alamat -> Y+1
                 ;	Protocol -> Y+0
0006c4 e0a1      	LDI  R26,LOW(1)
0006c5 dbe1      	RCALL _LCD_Perintah
0006c6 e0e0      	LDI  R30,LOW(0)
0006c7 93ea      	ST   -Y,R30
                +
0006c8 e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0006c9 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
0006ca e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 0 ) )
0006cb e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD2FN _0x0,0
0006cc dc5b      	RCALL _LCD_TulisF
0006cd 81a8      	LD   R26,Y
0006ce 3ca0      	CPI  R26,LOW(0xC0)
0006cf f441      	BRNE _0x95
0006d0 e0e1      	LDI  R30,LOW(1)
0006d1 93ea      	ST   -Y,R30
                +
0006d2 e2ad     +LDI R26 , LOW ( 2 * _0x0 + ( 153 ) )
0006d3 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 153 ) )
0006d4 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 153 ) )
0006d5 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 153 ) )
                 	__POINTD2FN _0x0,153
0006d6 dc51      	RCALL _LCD_TulisF
0006d7 c019      	RJMP _0x96
                 _0x95:
0006d8 81a8      	LD   R26,Y
0006d9 3aa0      	CPI  R26,LOW(0xA0)
0006da f441      	BRNE _0x97
0006db e0e1      	LDI  R30,LOW(1)
0006dc 93ea      	ST   -Y,R30
                +
0006dd e3ae     +LDI R26 , LOW ( 2 * _0x0 + ( 170 ) )
0006de e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 170 ) )
0006df e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 170 ) )
0006e0 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 170 ) )
                 	__POINTD2FN _0x0,170
0006e1 dc46      	RCALL _LCD_TulisF
0006e2 c00e      	RJMP _0x98
                 _0x97:
0006e3 81a8      	LD   R26,Y
0006e4 39a0      	CPI  R26,LOW(0x90)
0006e5 f441      	BRNE _0x99
0006e6 e0e1      	LDI  R30,LOW(1)
0006e7 93ea      	ST   -Y,R30
                +
0006e8 e4af     +LDI R26 , LOW ( 2 * _0x0 + ( 187 ) )
0006e9 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 187 ) )
0006ea e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 187 ) )
0006eb e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 187 ) )
                 	__POINTD2FN _0x0,187
0006ec dc3b      	RCALL _LCD_TulisF
0006ed c003      	RJMP _0x9A
                 _0x99:
0006ee dfc3      	RCALL _PesanKalibrasiGagal
0006ef e0e0      	LDI  R30,LOW(0)
0006f0 c09f      	RJMP _0x20A0009
                 _0x9A:
                 _0x98:
                 _0x96:
0006f1 ebe8      	LDI  R30,LOW(3000)
0006f2 e0fb      	LDI  R31,HIGH(3000)
0006f3 93fa      	ST   -Y,R31
0006f4 93ea      	ST   -Y,R30
0006f5 efa4      	LDI  R26,LOW(500)
0006f6 e0b1      	LDI  R27,HIGH(500)
0006f7 de99      	RCALL _Buzzer
0006f8 eea8      	LDI  R26,LOW(1000)
0006f9 e0b3      	LDI  R27,HIGH(1000)
0006fa 940e 1362 	CALL _delay_ms
0006fc e0a1      	LDI  R26,LOW(1)
0006fd dba9      	RCALL _LCD_Perintah
0006fe 81e9      	LDD  R30,Y+1
0006ff 81a8      	LD   R26,Y
000700 2bea      	OR   R30,R26
000701 2fae      	MOV  R26,R30
000702 df77      	RCALL _putchar1
000703 e0e0      	LDI  R30,LOW(0)
000704 93ea      	ST   -Y,R30
                +
000705 e6a0     +LDI R26 , LOW ( 2 * _0x0 + ( 204 ) )
000706 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 204 ) )
000707 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 204 ) )
000708 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 204 ) )
                 	__POINTD2FN _0x0,204
000709 dc5a      	RCALL _LCD_TulisKiri
00070a e0e1      	LDI  R30,LOW(1)
00070b 93ea      	ST   -Y,R30
                +
00070c eea9     +LDI R26 , LOW ( 2 * _0x0 + ( 85 ) )
00070d e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 85 ) )
00070e e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 85 ) )
00070f e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 85 ) )
                 	__POINTD2FN _0x0,85
000710 dc72      	RCALL _LCD_TulisKanan
000711 81e9      	LDD  R30,Y+1
000712 93ea      	ST   -Y,R30
000713 81a9      	LDD  R26,Y+1
000714 df75      	RCALL _TungguTombolKalibrasi
000715 30e0      	CPI  R30,0
000716 f139      	BREQ _0x9B
000717 ebe8      	LDI  R30,LOW(3000)
000718 e0fb      	LDI  R31,HIGH(3000)
000719 93fa      	ST   -Y,R31
00071a 93ea      	ST   -Y,R30
00071b eca8      	LDI  R26,LOW(200)
00071c e0b0      	LDI  R27,0
00071d de73      	RCALL _Buzzer
00071e e0a0      	LDI  R26,LOW(0)
00071f dc28      	RCALL _LCD_HapusKanan
000720 e0e0      	LDI  R30,LOW(0)
000721 93ea      	ST   -Y,R30
                +
000722 e7a1     +LDI R26 , LOW ( 2 * _0x0 + ( 221 ) )
000723 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 221 ) )
000724 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 221 ) )
000725 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 221 ) )
                 	__POINTD2FN _0x0,221
000726 dc3d      	RCALL _LCD_TulisKiri
000727 81e9      	LDD  R30,Y+1
000728 93ea      	ST   -Y,R30
000729 81a9      	LDD  R26,Y+1
00072a df5f      	RCALL _TungguTombolKalibrasi
00072b 30e0      	CPI  R30,0
00072c f089      	BREQ _0x9C
00072d ebe8      	LDI  R30,LOW(3000)
00072e e0fb      	LDI  R31,HIGH(3000)
00072f 93fa      	ST   -Y,R31
000730 93ea      	ST   -Y,R30
000731 eca8      	LDI  R26,LOW(200)
000732 e0b0      	LDI  R27,0
000733 de5d      	RCALL _Buzzer
000734 e8a8      	LDI  R26,LOW(5000)
000735 e1b3      	LDI  R27,HIGH(5000)
000736 df0b      	RCALL _BacaSerial1
000737 2fae      	MOV  R26,R30
000738 81e8      	LD   R30,Y
000739 17ea      	CP   R30,R26
00073a f419      	BRNE _0x9D
00073b df66      	RCALL _PesanKalibrasiBerhasil
00073c e0e1      	LDI  R30,LOW(1)
00073d c052      	RJMP _0x20A0009
                 _0x9D:
                 _0x9C:
                 _0x9B:
00073e df73      	RCALL _PesanKalibrasiGagal
00073f e0e0      	LDI  R30,LOW(0)
000740 c04f      	RJMP _0x20A0009
                 _MPU6050ReadBytes:
000741 93ba      	ST   -Y,R27
000742 93aa      	ST   -Y,R26
000743 931a      	ST   -Y,R17
                 ;	regAddr -> Y+4
                 ;	length -> Y+3
                 ;	*data -> Y+1
                 ;	i -> R17
000744 81ab      	LDD  R26,Y+3
000745 30a1      	CPI  R26,LOW(0x1)
000746 f160      	BRLO _0x9E
000747 eda0      	LDI  R26,LOW(208)
000748 dd45      	RCALL _I2C_Start
000749 81ac      	LDD  R26,Y+4
00074a dda8      	RCALL _I2C_Write
                +
00074b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00074c 958a     +DEC R24
00074d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00074e eda1      	LDI  R26,LOW(209)
00074f dd3e      	RCALL _I2C_Start
000750 81eb      	LDD  R30,Y+3
000751 50e1      	SUBI R30,LOW(1)
000752 83eb      	STD  Y+3,R30
000753 811b      	LDD  R17,Y+3
                 _0xA0:
000754 3010      	CPI  R17,0
000755 f0e4      	BRLT _0xA1
000756 3010      	CPI  R17,0
000757 f461      	BRNE _0xA2
000758 2fe1      	MOV  R30,R17
000759 81a9      	LDD  R26,Y+1
00075a 81ba      	LDD  R27,Y+1+1
00075b e0f0      	LDI  R31,0
00075c 0fea      	ADD  R30,R26
00075d 1ffb      	ADC  R31,R27
00075e 93ff      	PUSH R31
00075f 93ef      	PUSH R30
000760 ddb2      	RCALL _I2C_ReadNak
000761 91af      	POP  R26
000762 91bf      	POP  R27
000763 c00b      	RJMP _0x144
                 _0xA2:
000764 2fe1      	MOV  R30,R17
000765 81a9      	LDD  R26,Y+1
000766 81ba      	LDD  R27,Y+1+1
000767 e0f0      	LDI  R31,0
000768 0fea      	ADD  R30,R26
000769 1ffb      	ADC  R31,R27
00076a 93ff      	PUSH R31
00076b 93ef      	PUSH R30
00076c dd9e      	RCALL _I2C_ReadAck
00076d 91af      	POP  R26
00076e 91bf      	POP  R27
                 _0x144:
00076f 93ec      	ST   X,R30
000770 5011      	SUBI R17,1
000771 cfe2      	RJMP _0xA0
                 _0xA1:
000772 dd78      	RCALL _I2C_Stop
                 _0x9E:
000773 8118      	LDD  R17,Y+0
                 _0x20A000A:
000774 9625      	ADIW R28,5
000775 9508      	RET
                 _MPU6050ReadByte:
000776 93ba      	ST   -Y,R27
000777 93aa      	ST   -Y,R26
                 ;	regAddr -> Y+2
                 ;	*data -> Y+0
000778 eda0      	LDI  R26,LOW(208)
000779 dd14      	RCALL _I2C_Start
00077a 81aa      	LDD  R26,Y+2
00077b dd77      	RCALL _I2C_Write
                +
00077c e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00077d 958a     +DEC R24
00077e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00077f eda1      	LDI  R26,LOW(209)
000780 dd0d      	RCALL _I2C_Start
000781 dd91      	RCALL _I2C_ReadNak
000782 81a8      	LD   R26,Y
000783 81b9      	LDD  R27,Y+1
000784 93ec      	ST   X,R30
000785 dd65      	RCALL _I2C_Stop
000786 e0e1      	LDI  R30,LOW(1)
000787 c56e      	RJMP _0x20A0002
                 _MPU6050WriteByte:
000788 93aa      	ST   -Y,R26
                 ;	regAddr -> Y+1
                 ;	data -> Y+0
000789 eda0      	LDI  R26,LOW(208)
00078a dd03      	RCALL _I2C_Start
00078b 81a9      	LDD  R26,Y+1
00078c dd66      	RCALL _I2C_Write
00078d 81a8      	LD   R26,Y
00078e dd64      	RCALL _I2C_Write
00078f dd5b      	RCALL _I2C_Stop
                 _0x20A0009:
000790 9622      	ADIW R28,2
000791 9508      	RET
                 ;	regAddr -> Y+4
                 ;	length -> Y+3
                 ;	*data -> Y+1
                 ;	i -> R17
                 _mpu6050_readBits:
000792 93ba      	ST   -Y,R27
000793 93aa      	ST   -Y,R26
000794 931a      	ST   -Y,R17
                 ;	regAddr -> Y+5
                 ;	bitStart -> Y+4
                 ;	length -> Y+3
                 ;	*data -> Y+1
                 ;	count -> R17
000795 e010      	LDI  R17,0
000796 81ab      	LDD  R26,Y+3
000797 30a1      	CPI  R26,LOW(0x1)
000798 f140      	BRLO _0xA8
000799 9721      	SBIW R28,1
                 ;	regAddr -> Y+6
                 ;	bitStart -> Y+5
                 ;	length -> Y+4
                 ;	*data -> Y+2
                 ;	b -> Y+0
00079a 81ee      	LDD  R30,Y+6
00079b 93ea      	ST   -Y,R30
00079c 01de      	MOVW R26,R28
00079d 9611      	ADIW R26,1
00079e dfd7      	RCALL _MPU6050ReadByte
00079f 2f1e      	MOV  R17,R30
0007a0 30e0      	CPI  R30,0
0007a1 f0f1      	BREQ _0xA9
0007a2 9721      	SBIW R28,1
                 ;	regAddr -> Y+7
                 ;	bitStart -> Y+6
                 ;	length -> Y+5
                 ;	*data -> Y+3
                 ;	b -> Y+1
                 ;	mask -> Y+0
0007a3 81ed      	LDD  R30,Y+5
0007a4 e0a1      	LDI  R26,LOW(1)
0007a5 940e 1530 	CALL __LSLB12
0007a7 50e1      	SUBI R30,LOW(1)
0007a8 2e0e      	MOV  R0,R30
0007a9 81ad      	LDD  R26,Y+5
0007aa 81ee      	LDD  R30,Y+6
0007ab 1bea      	SUB  R30,R26
0007ac 5fef      	SUBI R30,-LOW(1)
0007ad 2da0      	MOV  R26,R0
0007ae 940e 1530 	CALL __LSLB12
0007b0 83e8      	ST   Y,R30
0007b1 81a9      	LDD  R26,Y+1
0007b2 23ea      	AND  R30,R26
0007b3 83e9      	STD  Y+1,R30
0007b4 81ad      	LDD  R26,Y+5
0007b5 81ee      	LDD  R30,Y+6
0007b6 1bea      	SUB  R30,R26
0007b7 5fef      	SUBI R30,-LOW(1)
0007b8 81a9      	LDD  R26,Y+1
0007b9 940e 1538 	CALL __LSRB12
0007bb 83e9      	STD  Y+1,R30
0007bc 81ab      	LDD  R26,Y+3
0007bd 81bc      	LDD  R27,Y+3+1
0007be 93ec      	ST   X,R30
0007bf 9621      	ADIW R28,1
                 _0xA9:
0007c0 9621      	ADIW R28,1
                 _0xA8:
0007c1 2fe1      	MOV  R30,R17
0007c2 8118      	LDD  R17,Y+0
0007c3 c0df      	RJMP _0x20A0005
                 ;	regAddr -> Y+5
                 ;	bitNum -> Y+4
                 ;	*data -> Y+2
                 ;	b -> R17
                 ;	count -> R16
                 _mpu6050_writeBits:
0007c4 93aa      	ST   -Y,R26
                 ;	regAddr -> Y+3
                 ;	bitStart -> Y+2
                 ;	length -> Y+1
                 ;	data -> Y+0
0007c5 81a9      	LDD  R26,Y+1
0007c6 30a1      	CPI  R26,LOW(0x1)
0007c7 f1a0      	BRLO _0xAA
0007c8 9721      	SBIW R28,1
0007c9 e0e0      	LDI  R30,LOW(0)
0007ca 83e8      	ST   Y,R30
                 ;	regAddr -> Y+4
                 ;	bitStart -> Y+3
                 ;	length -> Y+2
                 ;	data -> Y+1
                 ;	b -> Y+0
0007cb 81ec      	LDD  R30,Y+4
0007cc 93ea      	ST   -Y,R30
0007cd 01de      	MOVW R26,R28
0007ce 9611      	ADIW R26,1
0007cf dfa6      	RCALL _MPU6050ReadByte
0007d0 30e0      	CPI  R30,0
0007d1 f149      	BREQ _0xAB
0007d2 9721      	SBIW R28,1
                 ;	regAddr -> Y+5
                 ;	bitStart -> Y+4
                 ;	length -> Y+3
                 ;	data -> Y+2
                 ;	b -> Y+1
                 ;	mask -> Y+0
0007d3 81eb      	LDD  R30,Y+3
0007d4 e0a1      	LDI  R26,LOW(1)
0007d5 940e 1530 	CALL __LSLB12
0007d7 50e1      	SUBI R30,LOW(1)
0007d8 2e0e      	MOV  R0,R30
0007d9 81ab      	LDD  R26,Y+3
0007da 81ec      	LDD  R30,Y+4
0007db 1bea      	SUB  R30,R26
0007dc 5fef      	SUBI R30,-LOW(1)
0007dd 2da0      	MOV  R26,R0
0007de 940e 1530 	CALL __LSLB12
0007e0 83e8      	ST   Y,R30
0007e1 81ab      	LDD  R26,Y+3
0007e2 81ec      	LDD  R30,Y+4
0007e3 1bea      	SUB  R30,R26
0007e4 5fef      	SUBI R30,-LOW(1)
0007e5 81aa      	LDD  R26,Y+2
0007e6 940e 1530 	CALL __LSLB12
0007e8 83ea      	STD  Y+2,R30
0007e9 81e8      	LD   R30,Y
0007ea 81aa      	LDD  R26,Y+2
0007eb 23ea      	AND  R30,R26
0007ec 83ea      	STD  Y+2,R30
0007ed 81e8      	LD   R30,Y
0007ee 95e0      	COM  R30
0007ef 81a9      	LDD  R26,Y+1
0007f0 23ea      	AND  R30,R26
0007f1 83e9      	STD  Y+1,R30
0007f2 81ea      	LDD  R30,Y+2
0007f3 81a9      	LDD  R26,Y+1
0007f4 2bea      	OR   R30,R26
0007f5 83e9      	STD  Y+1,R30
0007f6 81ed      	LDD  R30,Y+5
0007f7 93ea      	ST   -Y,R30
0007f8 81aa      	LDD  R26,Y+2
0007f9 df8e      	RCALL _MPU6050WriteByte
0007fa 9621      	ADIW R28,1
                 _0xAB:
0007fb 9621      	ADIW R28,1
                 _0xAA:
0007fc c01e      	RJMP _0x20A0008
                 _mpu6050_writeBit:
0007fd 93aa      	ST   -Y,R26
0007fe 931a      	ST   -Y,R17
                 ;	regAddr -> Y+3
                 ;	bitNum -> Y+2
                 ;	data -> Y+1
                 ;	b -> R17
0007ff 81eb      	LDD  R30,Y+3
000800 93ea      	ST   -Y,R30
000801 b7ad      	IN   R26,SPL
000802 b7be      	IN   R27,SPH
000803 931f      	PUSH R17
000804 df71      	RCALL _MPU6050ReadByte
000805 911f      	POP  R17
000806 81a9      	LDD  R26,Y+1
000807 30a0      	CPI  R26,LOW(0x0)
000808 f031      	BREQ _0xAC
000809 81ea      	LDD  R30,Y+2
00080a e0a1      	LDI  R26,LOW(1)
00080b 940e 1530 	CALL __LSLB12
00080d 2be1      	OR   R30,R17
00080e c006      	RJMP _0xAD
                 _0xAC:
00080f 81ea      	LDD  R30,Y+2
000810 e0a1      	LDI  R26,LOW(1)
000811 940e 1530 	CALL __LSLB12
000813 95e0      	COM  R30
000814 23e1      	AND  R30,R17
                 _0xAD:
000815 2f1e      	MOV  R17,R30
000816 81eb      	LDD  R30,Y+3
000817 93ea      	ST   -Y,R30
000818 2fa1      	MOV  R26,R17
000819 df6e      	RCALL _MPU6050WriteByte
00081a 8118      	LDD  R17,Y+0
                 _0x20A0008:
00081b 9624      	ADIW R28,4
00081c 9508      	RET
                 _MPU6050_SleepDisabled:
00081d e6eb      	LDI  R30,LOW(107)
00081e 93ea      	ST   -Y,R30
00081f e0e6      	LDI  R30,LOW(6)
000820 93ea      	ST   -Y,R30
000821 e0a0      	LDI  R26,LOW(0)
000822 c049      	RJMP _0x20A0006
                 _MPU6050_TestConnection:
000823 9721      	SBIW R28,1
                 ;	buffer -> Y+0
000824 e7e5      	LDI  R30,LOW(117)
000825 93ea      	ST   -Y,R30
000826 e0e6      	LDI  R30,LOW(6)
000827 93ea      	ST   -Y,R30
000828 93ea      	ST   -Y,R30
000829 01de      	MOVW R26,R28
00082a 9613      	ADIW R26,3
00082b df66      	RCALL _mpu6050_readBits
00082c 81a8      	LD   R26,Y
00082d 33a4      	CPI  R26,LOW(0x34)
00082e f411      	BRNE _0xAF
00082f e0e1      	LDI  R30,LOW(1)
000830 c001      	RJMP _0x20A0007
                 _0xAF:
000831 e0e0      	LDI  R30,LOW(0)
                 _0x20A0007:
000832 9621      	ADIW R28,1
000833 9508      	RET
                 _MPU6050_Init:
000834 e3a2      	LDI  R26,LOW(50)
000835 e0b0      	LDI  R27,0
000836 940e 1362 	CALL _delay_ms
000838 dfe4      	RCALL _MPU6050_SleepDisabled
000839 e0aa      	LDI  R26,LOW(10)
00083a e0b0      	LDI  R27,0
00083b 940e 1362 	CALL _delay_ms
00083d e6eb      	LDI  R30,LOW(107)
00083e 93ea      	ST   -Y,R30
00083f e0e2      	LDI  R30,LOW(2)
000840 93ea      	ST   -Y,R30
000841 e0e3      	LDI  R30,LOW(3)
000842 93ea      	ST   -Y,R30
000843 e0a1      	LDI  R26,LOW(1)
000844 df7f      	RCALL _mpu6050_writeBits
000845 e1ea      	LDI  R30,LOW(26)
000846 93ea      	ST   -Y,R30
000847 e0e2      	LDI  R30,LOW(2)
000848 93ea      	ST   -Y,R30
000849 e0e3      	LDI  R30,LOW(3)
00084a 93ea      	ST   -Y,R30
00084b e0a3      	LDI  R26,LOW(3)
00084c df77      	RCALL _mpu6050_writeBits
00084d e1e9      	LDI  R30,LOW(25)
00084e 93ea      	ST   -Y,R30
00084f e0a9      	LDI  R26,LOW(9)
000850 df37      	RCALL _MPU6050WriteByte
000851 e1eb      	LDI  R30,LOW(27)
000852 93ea      	ST   -Y,R30
000853 e0e4      	LDI  R30,LOW(4)
000854 93ea      	ST   -Y,R30
000855 e0e2      	LDI  R30,LOW(2)
000856 93ea      	ST   -Y,R30
000857 e0a2      	LDI  R26,LOW(2)
000858 df6b      	RCALL _mpu6050_writeBits
000859 e1ec      	LDI  R30,LOW(28)
00085a 93ea      	ST   -Y,R30
00085b e0e4      	LDI  R30,LOW(4)
00085c 93ea      	ST   -Y,R30
00085d e0e2      	LDI  R30,LOW(2)
00085e 93ea      	ST   -Y,R30
00085f e0a0      	LDI  R26,LOW(0)
000860 df63      	RCALL _mpu6050_writeBits
000861 e6ea      	LDI  R30,LOW(106)
000862 93ea      	ST   -Y,R30
000863 e0e5      	LDI  R30,LOW(5)
000864 93ea      	ST   -Y,R30
000865 e0a0      	LDI  R26,LOW(0)
000866 df96      	RCALL _mpu6050_writeBit
000867 e3e7      	LDI  R30,LOW(55)
000868 93ea      	ST   -Y,R30
000869 e0e1      	LDI  R30,LOW(1)
00086a 93ea      	ST   -Y,R30
00086b e0a1      	LDI  R26,LOW(1)
                 _0x20A0006:
00086c df90      	RCALL _mpu6050_writeBit
00086d 9508      	RET
                 _BacaAccelerometer:
00086e 9726      	SBIW R28,6
                 ;	buffer -> Y+0
00086f e3eb      	LDI  R30,LOW(59)
000870 93ea      	ST   -Y,R30
000871 e0e6      	LDI  R30,LOW(6)
000872 93ea      	ST   -Y,R30
000873 01de      	MOVW R26,R28
000874 9612      	ADIW R26,2
000875 decb      	RCALL _MPU6050ReadBytes
000876 81ec      	LDD  R30,Y+4
000877 81fd      	LDD  R31,Y+4+1
000878 93e0 0903 	STS  _Ax,R30
00087a 93f0 0904 	STS  _Ax+1,R31
00087c 81ea      	LDD  R30,Y+2
00087d 81fb      	LDD  R31,Y+2+1
00087e 93e0 0905 	STS  _Ay,R30
000880 93f0 0906 	STS  _Ay+1,R31
000882 81e8      	LD   R30,Y
000883 81f9      	LDD  R31,Y+1
000884 93e0 0907 	STS  _Az,R30
000886 93f0 0908 	STS  _Az+1,R31
000888 c01a      	RJMP _0x20A0005
                 _BacaGyroScope:
000889 9726      	SBIW R28,6
                 ;	buffer -> Y+0
00088a e4e3      	LDI  R30,LOW(67)
00088b 93ea      	ST   -Y,R30
00088c e0e6      	LDI  R30,LOW(6)
00088d 93ea      	ST   -Y,R30
00088e 01de      	MOVW R26,R28
00088f 9612      	ADIW R26,2
000890 deb0      	RCALL _MPU6050ReadBytes
000891 81ec      	LDD  R30,Y+4
000892 81fd      	LDD  R31,Y+4+1
000893 93e0 0909 	STS  _Gx,R30
000895 93f0 090a 	STS  _Gx+1,R31
000897 81ea      	LDD  R30,Y+2
000898 81fb      	LDD  R31,Y+2+1
000899 93e0 090b 	STS  _Gy,R30
00089b 93f0 090c 	STS  _Gy+1,R31
00089d 81e8      	LD   R30,Y
00089e 81f9      	LDD  R31,Y+1
00089f 93e0 090d 	STS  _Gz,R30
0008a1 93f0 090e 	STS  _Gz+1,R31
                 _0x20A0005:
0008a3 9626      	ADIW R28,6
0008a4 9508      	RET
                 _invSqrt:
0008a5 940e 1612 	CALL __PUTPARD2
0008a7 972c      	SBIW R28,12
                 ;	x -> Y+12
                 ;	halfx -> Y+8
                 ;	y -> Y+4
                 ;	i -> Y+0
                +
0008a8 85ec     +LDD R30 , Y + 12
0008a9 85fd     +LDD R31 , Y + 12 + 1
0008aa 856e     +LDD R22 , Y + 12 + 2
0008ab 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
0008ac e0a0     +LDI R26 , LOW ( 0x3F000000 )
0008ad e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0008ae e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0008af e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0008b0 940e 1462 	CALL __MULF12
                +
0008b2 87e8     +STD Y + 8 , R30
0008b3 87f9     +STD Y + 8 + 1 , R31
0008b4 876a     +STD Y + 8 + 2 , R22
0008b5 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                +
0008b6 85ec     +LDD R30 , Y + 12
0008b7 85fd     +LDD R31 , Y + 12 + 1
0008b8 856e     +LDD R22 , Y + 12 + 2
0008b9 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
0008ba 83ec     +STD Y + 4 , R30
0008bb 83fd     +STD Y + 4 + 1 , R31
0008bc 836e     +STD Y + 4 + 2 , R22
0008bd 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0008be 940e 1608 	CALL __PUTD1S0
0008c0 940e 1540 	CALL __ASRD1
                +
0008c2 edaf     +LDI R26 , LOW ( 0x5F3759DF )
0008c3 e5b9     +LDI R27 , HIGH ( 0x5F3759DF )
0008c4 e387     +LDI R24 , BYTE3 ( 0x5F3759DF )
0008c5 e59f     +LDI R25 , BYTE4 ( 0x5F3759DF )
                 	__GETD2N 0x5F3759DF
0008c6 940e 151f 	CALL __SUBD21
0008c8 940e 160d 	CALL __PUTD2S0
0008ca 940e 15fe 	CALL __GETD1S0
                +
0008cc 83ec     +STD Y + 4 , R30
0008cd 83fd     +STD Y + 4 + 1 , R31
0008ce 836e     +STD Y + 4 + 2 , R22
0008cf 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
0008d0 85a8     +LDD R26 , Y + 8
0008d1 85b9     +LDD R27 , Y + 8 + 1
0008d2 858a     +LDD R24 , Y + 8 + 2
0008d3 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
0008d4 940e 1462 	CALL __MULF12
                +
0008d6 81ac     +LDD R26 , Y + 4
0008d7 81bd     +LDD R27 , Y + 4 + 1
0008d8 818e     +LDD R24 , Y + 4 + 2
0008d9 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0008da 940e 1462 	CALL __MULF12
                +
0008dc e0a0     +LDI R26 , LOW ( 0x3FC00000 )
0008dd e0b0     +LDI R27 , HIGH ( 0x3FC00000 )
0008de ec80     +LDI R24 , BYTE3 ( 0x3FC00000 )
0008df e39f     +LDI R25 , BYTE4 ( 0x3FC00000 )
                 	__GETD2N 0x3FC00000
0008e0 940e 161c 	CALL __SWAPD12
0008e2 940e 140b 	CALL __SUBF12
                +
0008e4 81ac     +LDD R26 , Y + 4
0008e5 81bd     +LDD R27 , Y + 4 + 1
0008e6 818e     +LDD R24 , Y + 4 + 2
0008e7 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0008e8 940e 1462 	CALL __MULF12
                +
0008ea 83ec     +STD Y + 4 , R30
0008eb 83fd     +STD Y + 4 + 1 , R31
0008ec 836e     +STD Y + 4 + 2 , R22
0008ed 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
0008ee c2ca      	RJMP _0x20A0004
                 ;	x -> Y+2
                 ;	*i -> R16,R17
                 ;	K_0 -> Y+8
                 ;	K_1 -> Y+4
                 ;	buffer -> Y+0
                 _HitungKalmanPitch:
0008ef 9760      	SBIW R28,16
                 ;	K_0 -> Y+12
                 ;	K_1 -> Y+8
                 ;	buffer -> Y+4
                 ;	AccPitch -> Y+0
0008f0 91e0 094e 	LDS  R30,_P_11_S000004B000
0008f2 91f0 094f 	LDS  R31,_P_11_S000004B000+1
0008f4 9160 0950 	LDS  R22,_P_11_S000004B000+2
0008f6 9170 0951 	LDS  R23,_P_11_S000004B000+3
                +
0008f8 e0aa     +LDI R26 , LOW ( 0x3BA3D70A )
0008f9 edb7     +LDI R27 , HIGH ( 0x3BA3D70A )
0008fa ea83     +LDI R24 , BYTE3 ( 0x3BA3D70A )
0008fb e39b     +LDI R25 , BYTE4 ( 0x3BA3D70A )
                 	__GETD2N 0x3BA3D70A
0008fc 940e 1462 	CALL __MULF12
                +
0008fe 83ec     +STD Y + 4 , R30
0008ff 83fd     +STD Y + 4 + 1 , R31
000900 836e     +STD Y + 4 + 2 , R22
000901 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000902 91a0 094a 	LDS  R26,_P_10_S000004B000
000904 91b0 094b 	LDS  R27,_P_10_S000004B000+1
000906 9180 094c 	LDS  R24,_P_10_S000004B000+2
000908 9190 094d 	LDS  R25,_P_10_S000004B000+3
00090a 940e 140b 	CALL __SUBF12
00090c 91a0 0946 	LDS  R26,_P_01_S000004B000
00090e 91b0 0947 	LDS  R27,_P_01_S000004B000+1
000910 9180 0948 	LDS  R24,_P_01_S000004B000+2
000912 9190 0949 	LDS  R25,_P_01_S000004B000+3
000914 940e 140b 	CALL __SUBF12
                +
000916 e6af     +LDI R26 , LOW ( 0x3A83126F )
000917 e1b2     +LDI R27 , HIGH ( 0x3A83126F )
000918 e883     +LDI R24 , BYTE3 ( 0x3A83126F )
000919 e39a     +LDI R25 , BYTE4 ( 0x3A83126F )
                 	__GETD2N 0x3A83126F
00091a 940e 1412 	CALL __ADDF12
                +
00091c e0aa     +LDI R26 , LOW ( 0x3BA3D70A )
00091d edb7     +LDI R27 , HIGH ( 0x3BA3D70A )
00091e ea83     +LDI R24 , BYTE3 ( 0x3BA3D70A )
00091f e39b     +LDI R25 , BYTE4 ( 0x3BA3D70A )
                 	__GETD2N 0x3BA3D70A
000920 940e 1462 	CALL __MULF12
000922 91a0 0942 	LDS  R26,_P_00_S000004B000
000924 91b0 0943 	LDS  R27,_P_00_S000004B000+1
000926 9180 0944 	LDS  R24,_P_00_S000004B000+2
000928 9190 0945 	LDS  R25,_P_00_S000004B000+3
00092a 940e 1412 	CALL __ADDF12
00092c 93e0 0942 	STS  _P_00_S000004B000,R30
00092e 93f0 0943 	STS  _P_00_S000004B000+1,R31
000930 9360 0944 	STS  _P_00_S000004B000+2,R22
000932 9370 0945 	STS  _P_00_S000004B000+3,R23
                +
000934 81ac     +LDD R26 , Y + 4
000935 81bd     +LDD R27 , Y + 4 + 1
000936 818e     +LDD R24 , Y + 4 + 2
000937 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000938 91e0 0946 	LDS  R30,_P_01_S000004B000
00093a 91f0 0947 	LDS  R31,_P_01_S000004B000+1
00093c 9160 0948 	LDS  R22,_P_01_S000004B000+2
00093e 9170 0949 	LDS  R23,_P_01_S000004B000+3
000940 940e 140b 	CALL __SUBF12
000942 93e0 0946 	STS  _P_01_S000004B000,R30
000944 93f0 0947 	STS  _P_01_S000004B000+1,R31
000946 9360 0948 	STS  _P_01_S000004B000+2,R22
000948 9370 0949 	STS  _P_01_S000004B000+3,R23
                +
00094a 81ac     +LDD R26 , Y + 4
00094b 81bd     +LDD R27 , Y + 4 + 1
00094c 818e     +LDD R24 , Y + 4 + 2
00094d 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00094e 91e0 094a 	LDS  R30,_P_10_S000004B000
000950 91f0 094b 	LDS  R31,_P_10_S000004B000+1
000952 9160 094c 	LDS  R22,_P_10_S000004B000+2
000954 9170 094d 	LDS  R23,_P_10_S000004B000+3
000956 940e 140b 	CALL __SUBF12
000958 93e0 094a 	STS  _P_10_S000004B000,R30
00095a 93f0 094b 	STS  _P_10_S000004B000+1,R31
00095c 9360 094c 	STS  _P_10_S000004B000+2,R22
00095e 9370 094d 	STS  _P_10_S000004B000+3,R23
000960 91e0 094e 	LDS  R30,_P_11_S000004B000
000962 91f0 094f 	LDS  R31,_P_11_S000004B000+1
000964 9160 0950 	LDS  R22,_P_11_S000004B000+2
000966 9170 0951 	LDS  R23,_P_11_S000004B000+3
                +
000968 e8a2     +LDI R26 , LOW ( 0x377BA882 )
000969 eab8     +LDI R27 , HIGH ( 0x377BA882 )
00096a e78b     +LDI R24 , BYTE3 ( 0x377BA882 )
00096b e397     +LDI R25 , BYTE4 ( 0x377BA882 )
                 	__GETD2N 0x377BA882
00096c 940e 1412 	CALL __ADDF12
00096e 93e0 094e 	STS  _P_11_S000004B000,R30
000970 93f0 094f 	STS  _P_11_S000004B000+1,R31
000972 9360 0950 	STS  _P_11_S000004B000+2,R22
000974 9370 0951 	STS  _P_11_S000004B000+3,R23
000976 91e0 0942 	LDS  R30,_P_00_S000004B000
000978 91f0 0943 	LDS  R31,_P_00_S000004B000+1
00097a 9160 0944 	LDS  R22,_P_00_S000004B000+2
00097c 9170 0945 	LDS  R23,_P_00_S000004B000+3
                +
00097e e8af     +LDI R26 , LOW ( 0x3CF5C28F )
00097f ecb2     +LDI R27 , HIGH ( 0x3CF5C28F )
000980 ef85     +LDI R24 , BYTE3 ( 0x3CF5C28F )
000981 e39c     +LDI R25 , BYTE4 ( 0x3CF5C28F )
                 	__GETD2N 0x3CF5C28F
000982 940e 1412 	CALL __ADDF12
                +
000984 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000985 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000986 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000987 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000988 940e 14b0 	CALL __DIVF21
                +
00098a 83ec     +STD Y + 4 , R30
00098b 83fd     +STD Y + 4 + 1 , R31
00098c 836e     +STD Y + 4 + 2 , R22
00098d 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00098e 91a0 0942 	LDS  R26,_P_00_S000004B000
000990 91b0 0943 	LDS  R27,_P_00_S000004B000+1
000992 9180 0944 	LDS  R24,_P_00_S000004B000+2
000994 9190 0945 	LDS  R25,_P_00_S000004B000+3
000996 940e 1462 	CALL __MULF12
                +
000998 87ec     +STD Y + 12 , R30
000999 87fd     +STD Y + 12 + 1 , R31
00099a 876e     +STD Y + 12 + 2 , R22
00099b 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
00099c 81ec     +LDD R30 , Y + 4
00099d 81fd     +LDD R31 , Y + 4 + 1
00099e 816e     +LDD R22 , Y + 4 + 2
00099f 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0009a0 91a0 094a 	LDS  R26,_P_10_S000004B000
0009a2 91b0 094b 	LDS  R27,_P_10_S000004B000+1
0009a4 9180 094c 	LDS  R24,_P_10_S000004B000+2
0009a6 9190 094d 	LDS  R25,_P_10_S000004B000+3
0009a8 940e 1462 	CALL __MULF12
                +
0009aa 87e8     +STD Y + 8 , R30
0009ab 87f9     +STD Y + 8 + 1 , R31
0009ac 876a     +STD Y + 8 + 2 , R22
0009ad 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0009ae 91e0 090b 	LDS  R30,_Gy
0009b0 91f0 090c 	LDS  R31,_Gy+1
0009b2 940e 1550 	CALL __CWD1
0009b4 940e 13d8 	CALL __CDF1
0009b6 91a0 0913 	LDS  R26,_GyOffset
0009b8 91b0 0914 	LDS  R27,_GyOffset+1
0009ba 9180 0915 	LDS  R24,_GyOffset+2
0009bc 9190 0916 	LDS  R25,_GyOffset+3
0009be 940e 140b 	CALL __SUBF12
                +
0009c0 e0aa     +LDI R26 , LOW ( 0x391FD80A )
0009c1 edb8     +LDI R27 , HIGH ( 0x391FD80A )
0009c2 e18f     +LDI R24 , BYTE3 ( 0x391FD80A )
0009c3 e399     +LDI R25 , BYTE4 ( 0x391FD80A )
                 	__GETD2N 0x391FD80A
0009c4 940e 1462 	CALL __MULF12
0009c6 91a0 091f 	LDS  R26,_Pitch
0009c8 91b0 0920 	LDS  R27,_Pitch+1
0009ca 9180 0921 	LDS  R24,_Pitch+2
0009cc 9190 0922 	LDS  R25,_Pitch+3
0009ce 940e 1412 	CALL __ADDF12
0009d0 93e0 091f 	STS  _Pitch,R30
0009d2 93f0 0920 	STS  _Pitch+1,R31
0009d4 9360 0921 	STS  _Pitch+2,R22
0009d6 9370 0922 	STS  _Pitch+3,R23
0009d8 91a0 0903 	LDS  R26,_Ax
0009da 91b0 0904 	LDS  R27,_Ax+1
0009dc 940e 1629 	CALL __CPW02
0009de f014      	BRLT PC+3
0009df 940c 0a33 	JMP _0xB5
0009e1 91e0 0907 	LDS  R30,_Az
0009e3 91f0 0908 	LDS  R31,_Az+1
0009e5 940e 1550 	CALL __CWD1
0009e7 940e 13d8 	CALL __CDF1
0009e9 937f      	PUSH R23
0009ea 936f      	PUSH R22
0009eb 93ff      	PUSH R31
0009ec 93ef      	PUSH R30
0009ed 91e0 0903 	LDS  R30,_Ax
0009ef 91f0 0904 	LDS  R31,_Ax+1
0009f1 940e 1550 	CALL __CWD1
0009f3 940e 13d8 	CALL __CDF1
0009f5 01df      	MOVW R26,R30
0009f6 01cb      	MOVW R24,R22
0009f7 91e0 0903 	LDS  R30,_Ax
0009f9 91f0 0904 	LDS  R31,_Ax+1
0009fb 940e 1550 	CALL __CWD1
0009fd 940e 13d8 	CALL __CDF1
0009ff 940e 1462 	CALL __MULF12
000a01 937f      	PUSH R23
000a02 936f      	PUSH R22
000a03 93ff      	PUSH R31
000a04 93ef      	PUSH R30
000a05 91e0 0905 	LDS  R30,_Ay
000a07 91f0 0906 	LDS  R31,_Ay+1
000a09 940e 1550 	CALL __CWD1
000a0b 940e 13d8 	CALL __CDF1
000a0d 01df      	MOVW R26,R30
000a0e 01cb      	MOVW R24,R22
000a0f 91e0 0905 	LDS  R30,_Ay
000a11 91f0 0906 	LDS  R31,_Ay+1
000a13 940e 1550 	CALL __CWD1
000a15 940e 13d8 	CALL __CDF1
000a17 940e 1462 	CALL __MULF12
000a19 91af      	POP  R26
000a1a 91bf      	POP  R27
000a1b 918f      	POP  R24
000a1c 919f      	POP  R25
000a1d 940e 1412 	CALL __ADDF12
000a1f 01df      	MOVW R26,R30
000a20 01cb      	MOVW R24,R22
000a21 de83      	RCALL _invSqrt
000a22 91af      	POP  R26
000a23 91bf      	POP  R27
000a24 918f      	POP  R24
000a25 919f      	POP  R25
000a26 940e 1462 	CALL __MULF12
000a28 01df      	MOVW R26,R30
000a29 01cb      	MOVW R24,R22
000a2a 940e 134e 	CALL _atan
                +
000a2c eea1     +LDI R26 , LOW ( 0x42652EE1 )
000a2d e2be     +LDI R27 , HIGH ( 0x42652EE1 )
000a2e e685     +LDI R24 , BYTE3 ( 0x42652EE1 )
000a2f e492     +LDI R25 , BYTE4 ( 0x42652EE1 )
                 	__GETD2N 0x42652EE1
000a30 940e 1462 	CALL __MULF12
000a32 c0ba      	RJMP _0x147
                 _0xB5:
000a33 91a0 0907 	LDS  R26,_Az
000a35 91b0 0908 	LDS  R27,_Az+1
000a37 940e 1629 	CALL __CPW02
000a39 f014      	BRLT PC+3
000a3a 940c 0a92 	JMP _0xB7
000a3c 91e0 0903 	LDS  R30,_Ax
000a3e 91f0 0904 	LDS  R31,_Ax+1
000a40 940e 1550 	CALL __CWD1
000a42 940e 13d8 	CALL __CDF1
000a44 937f      	PUSH R23
000a45 936f      	PUSH R22
000a46 93ff      	PUSH R31
000a47 93ef      	PUSH R30
000a48 91e0 0907 	LDS  R30,_Az
000a4a 91f0 0908 	LDS  R31,_Az+1
000a4c 940e 1550 	CALL __CWD1
000a4e 940e 13d8 	CALL __CDF1
000a50 01df      	MOVW R26,R30
000a51 01cb      	MOVW R24,R22
000a52 91e0 0907 	LDS  R30,_Az
000a54 91f0 0908 	LDS  R31,_Az+1
000a56 940e 1550 	CALL __CWD1
000a58 940e 13d8 	CALL __CDF1
000a5a 940e 1462 	CALL __MULF12
000a5c 937f      	PUSH R23
000a5d 936f      	PUSH R22
000a5e 93ff      	PUSH R31
000a5f 93ef      	PUSH R30
000a60 91e0 0905 	LDS  R30,_Ay
000a62 91f0 0906 	LDS  R31,_Ay+1
000a64 940e 1550 	CALL __CWD1
000a66 940e 13d8 	CALL __CDF1
000a68 01df      	MOVW R26,R30
000a69 01cb      	MOVW R24,R22
000a6a 91e0 0905 	LDS  R30,_Ay
000a6c 91f0 0906 	LDS  R31,_Ay+1
000a6e 940e 1550 	CALL __CWD1
000a70 940e 13d8 	CALL __CDF1
000a72 940e 1462 	CALL __MULF12
000a74 91af      	POP  R26
000a75 91bf      	POP  R27
000a76 918f      	POP  R24
000a77 919f      	POP  R25
000a78 940e 1412 	CALL __ADDF12
000a7a 01df      	MOVW R26,R30
000a7b 01cb      	MOVW R24,R22
000a7c de28      	RCALL _invSqrt
000a7d 91af      	POP  R26
000a7e 91bf      	POP  R27
000a7f 918f      	POP  R24
000a80 919f      	POP  R25
000a81 940e 1462 	CALL __MULF12
000a83 01df      	MOVW R26,R30
000a84 01cb      	MOVW R24,R22
000a85 940e 134e 	CALL _atan
                +
000a87 eea1     +LDI R26 , LOW ( 0x42652EE1 )
000a88 e2be     +LDI R27 , HIGH ( 0x42652EE1 )
000a89 e685     +LDI R24 , BYTE3 ( 0x42652EE1 )
000a8a e492     +LDI R25 , BYTE4 ( 0x42652EE1 )
                 	__GETD2N 0x42652EE1
000a8b 940e 1462 	CALL __MULF12
                +
000a8d e0a0     +LDI R26 , LOW ( 0x42B40000 )
000a8e e0b0     +LDI R27 , HIGH ( 0x42B40000 )
000a8f eb84     +LDI R24 , BYTE3 ( 0x42B40000 )
000a90 e492     +LDI R25 , BYTE4 ( 0x42B40000 )
                 	__GETD2N 0x42B40000
000a91 c057      	RJMP _0x148
                 _0xB7:
000a92 91e0 0903 	LDS  R30,_Ax
000a94 91f0 0904 	LDS  R31,_Ax+1
000a96 940e 1550 	CALL __CWD1
000a98 940e 13d8 	CALL __CDF1
000a9a 937f      	PUSH R23
000a9b 936f      	PUSH R22
000a9c 93ff      	PUSH R31
000a9d 93ef      	PUSH R30
000a9e 91e0 0907 	LDS  R30,_Az
000aa0 91f0 0908 	LDS  R31,_Az+1
000aa2 940e 1550 	CALL __CWD1
000aa4 940e 13d8 	CALL __CDF1
000aa6 01df      	MOVW R26,R30
000aa7 01cb      	MOVW R24,R22
000aa8 91e0 0907 	LDS  R30,_Az
000aaa 91f0 0908 	LDS  R31,_Az+1
000aac 940e 1550 	CALL __CWD1
000aae 940e 13d8 	CALL __CDF1
000ab0 940e 1462 	CALL __MULF12
000ab2 937f      	PUSH R23
000ab3 936f      	PUSH R22
000ab4 93ff      	PUSH R31
000ab5 93ef      	PUSH R30
000ab6 91e0 0905 	LDS  R30,_Ay
000ab8 91f0 0906 	LDS  R31,_Ay+1
000aba 940e 1550 	CALL __CWD1
000abc 940e 13d8 	CALL __CDF1
000abe 01df      	MOVW R26,R30
000abf 01cb      	MOVW R24,R22
000ac0 91e0 0905 	LDS  R30,_Ay
000ac2 91f0 0906 	LDS  R31,_Ay+1
000ac4 940e 1550 	CALL __CWD1
000ac6 940e 13d8 	CALL __CDF1
000ac8 940e 1462 	CALL __MULF12
000aca 91af      	POP  R26
000acb 91bf      	POP  R27
000acc 918f      	POP  R24
000acd 919f      	POP  R25
000ace 940e 1412 	CALL __ADDF12
000ad0 01df      	MOVW R26,R30
000ad1 01cb      	MOVW R24,R22
000ad2 ddd2      	RCALL _invSqrt
000ad3 91af      	POP  R26
000ad4 91bf      	POP  R27
000ad5 918f      	POP  R24
000ad6 919f      	POP  R25
000ad7 940e 1462 	CALL __MULF12
000ad9 01df      	MOVW R26,R30
000ada 01cb      	MOVW R24,R22
000adb 940e 134e 	CALL _atan
                +
000add eea1     +LDI R26 , LOW ( 0x42652EE1 )
000ade e2be     +LDI R27 , HIGH ( 0x42652EE1 )
000adf e685     +LDI R24 , BYTE3 ( 0x42652EE1 )
000ae0 e492     +LDI R25 , BYTE4 ( 0x42652EE1 )
                 	__GETD2N 0x42652EE1
000ae1 940e 1462 	CALL __MULF12
000ae3 01df      	MOVW R26,R30
000ae4 01cb      	MOVW R24,R22
                +
000ae5 e0e0     +LDI R30 , LOW ( 0x42B40000 )
000ae6 e0f0     +LDI R31 , HIGH ( 0x42B40000 )
000ae7 eb64     +LDI R22 , BYTE3 ( 0x42B40000 )
000ae8 e472     +LDI R23 , BYTE4 ( 0x42B40000 )
                 	__GETD1N 0x42B40000
                 _0x148:
000ae9 940e 161c 	CALL __SWAPD12
000aeb 940e 140b 	CALL __SUBF12
                 _0x147:
000aed 940e 1608 	CALL __PUTD1S0
000aef 91a0 091f 	LDS  R26,_Pitch
000af1 91b0 0920 	LDS  R27,_Pitch+1
000af3 9180 0921 	LDS  R24,_Pitch+2
000af5 9190 0922 	LDS  R25,_Pitch+3
000af7 940e 140b 	CALL __SUBF12
                +
000af9 83ec     +STD Y + 4 , R30
000afa 83fd     +STD Y + 4 + 1 , R31
000afb 836e     +STD Y + 4 + 2 , R22
000afc 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000afd 85ac     +LDD R26 , Y + 12
000afe 85bd     +LDD R27 , Y + 12 + 1
000aff 858e     +LDD R24 , Y + 12 + 2
000b00 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b01 940e 1462 	CALL __MULF12
000b03 91a0 091f 	LDS  R26,_Pitch
000b05 91b0 0920 	LDS  R27,_Pitch+1
000b07 9180 0921 	LDS  R24,_Pitch+2
000b09 9190 0922 	LDS  R25,_Pitch+3
000b0b 940e 1412 	CALL __ADDF12
000b0d 93e0 091f 	STS  _Pitch,R30
000b0f 93f0 0920 	STS  _Pitch+1,R31
000b11 9360 0921 	STS  _Pitch+2,R22
000b13 9370 0922 	STS  _Pitch+3,R23
                +
000b15 81ec     +LDD R30 , Y + 4
000b16 81fd     +LDD R31 , Y + 4 + 1
000b17 816e     +LDD R22 , Y + 4 + 2
000b18 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000b19 85a8     +LDD R26 , Y + 8
000b1a 85b9     +LDD R27 , Y + 8 + 1
000b1b 858a     +LDD R24 , Y + 8 + 2
000b1c 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000b1d 940e 1462 	CALL __MULF12
000b1f 91a0 0913 	LDS  R26,_GyOffset
000b21 91b0 0914 	LDS  R27,_GyOffset+1
000b23 9180 0915 	LDS  R24,_GyOffset+2
000b25 9190 0916 	LDS  R25,_GyOffset+3
000b27 940e 1412 	CALL __ADDF12
000b29 93e0 0913 	STS  _GyOffset,R30
000b2b 93f0 0914 	STS  _GyOffset+1,R31
000b2d 9360 0915 	STS  _GyOffset+2,R22
000b2f 9370 0916 	STS  _GyOffset+3,R23
000b31 91e0 0942 	LDS  R30,_P_00_S000004B000
000b33 91f0 0943 	LDS  R31,_P_00_S000004B000+1
000b35 9160 0944 	LDS  R22,_P_00_S000004B000+2
000b37 9170 0945 	LDS  R23,_P_00_S000004B000+3
                +
000b39 85ac     +LDD R26 , Y + 12
000b3a 85bd     +LDD R27 , Y + 12 + 1
000b3b 858e     +LDD R24 , Y + 12 + 2
000b3c 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b3d 940e 1462 	CALL __MULF12
000b3f 91a0 0942 	LDS  R26,_P_00_S000004B000
000b41 91b0 0943 	LDS  R27,_P_00_S000004B000+1
000b43 9180 0944 	LDS  R24,_P_00_S000004B000+2
000b45 9190 0945 	LDS  R25,_P_00_S000004B000+3
000b47 940e 161c 	CALL __SWAPD12
000b49 940e 140b 	CALL __SUBF12
000b4b 93e0 0942 	STS  _P_00_S000004B000,R30
000b4d 93f0 0943 	STS  _P_00_S000004B000+1,R31
000b4f 9360 0944 	STS  _P_00_S000004B000+2,R22
000b51 9370 0945 	STS  _P_00_S000004B000+3,R23
000b53 91e0 0946 	LDS  R30,_P_01_S000004B000
000b55 91f0 0947 	LDS  R31,_P_01_S000004B000+1
000b57 9160 0948 	LDS  R22,_P_01_S000004B000+2
000b59 9170 0949 	LDS  R23,_P_01_S000004B000+3
                +
000b5b 85ac     +LDD R26 , Y + 12
000b5c 85bd     +LDD R27 , Y + 12 + 1
000b5d 858e     +LDD R24 , Y + 12 + 2
000b5e 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b5f 940e 1462 	CALL __MULF12
000b61 91a0 0946 	LDS  R26,_P_01_S000004B000
000b63 91b0 0947 	LDS  R27,_P_01_S000004B000+1
000b65 9180 0948 	LDS  R24,_P_01_S000004B000+2
000b67 9190 0949 	LDS  R25,_P_01_S000004B000+3
000b69 940e 161c 	CALL __SWAPD12
000b6b 940e 140b 	CALL __SUBF12
000b6d 93e0 0946 	STS  _P_01_S000004B000,R30
000b6f 93f0 0947 	STS  _P_01_S000004B000+1,R31
000b71 9360 0948 	STS  _P_01_S000004B000+2,R22
000b73 9370 0949 	STS  _P_01_S000004B000+3,R23
000b75 91e0 0942 	LDS  R30,_P_00_S000004B000
000b77 91f0 0943 	LDS  R31,_P_00_S000004B000+1
000b79 9160 0944 	LDS  R22,_P_00_S000004B000+2
000b7b 9170 0945 	LDS  R23,_P_00_S000004B000+3
                +
000b7d 85a8     +LDD R26 , Y + 8
000b7e 85b9     +LDD R27 , Y + 8 + 1
000b7f 858a     +LDD R24 , Y + 8 + 2
000b80 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000b81 940e 1462 	CALL __MULF12
000b83 91a0 094a 	LDS  R26,_P_10_S000004B000
000b85 91b0 094b 	LDS  R27,_P_10_S000004B000+1
000b87 9180 094c 	LDS  R24,_P_10_S000004B000+2
000b89 9190 094d 	LDS  R25,_P_10_S000004B000+3
000b8b 940e 161c 	CALL __SWAPD12
000b8d 940e 140b 	CALL __SUBF12
000b8f 93e0 094a 	STS  _P_10_S000004B000,R30
000b91 93f0 094b 	STS  _P_10_S000004B000+1,R31
000b93 9360 094c 	STS  _P_10_S000004B000+2,R22
000b95 9370 094d 	STS  _P_10_S000004B000+3,R23
000b97 91e0 0946 	LDS  R30,_P_01_S000004B000
000b99 91f0 0947 	LDS  R31,_P_01_S000004B000+1
000b9b 9160 0948 	LDS  R22,_P_01_S000004B000+2
000b9d 9170 0949 	LDS  R23,_P_01_S000004B000+3
                +
000b9f 85a8     +LDD R26 , Y + 8
000ba0 85b9     +LDD R27 , Y + 8 + 1
000ba1 858a     +LDD R24 , Y + 8 + 2
000ba2 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000ba3 940e 1462 	CALL __MULF12
000ba5 91a0 094e 	LDS  R26,_P_11_S000004B000
000ba7 91b0 094f 	LDS  R27,_P_11_S000004B000+1
000ba9 9180 0950 	LDS  R24,_P_11_S000004B000+2
000bab 9190 0951 	LDS  R25,_P_11_S000004B000+3
000bad 940e 161c 	CALL __SWAPD12
000baf 940e 140b 	CALL __SUBF12
000bb1 93e0 094e 	STS  _P_11_S000004B000,R30
000bb3 93f0 094f 	STS  _P_11_S000004B000+1,R31
000bb5 9360 0950 	STS  _P_11_S000004B000+2,R22
000bb7 9370 0951 	STS  _P_11_S000004B000+3,R23
                 _0x20A0004:
000bb9 9660      	ADIW R28,16
000bba 9508      	RET
                 _HitungYaw:
000bbb 91e0 0909 	LDS  R30,_Gx
000bbd 91f0 090a 	LDS  R31,_Gx+1
000bbf 940e 1550 	CALL __CWD1
000bc1 940e 13d8 	CALL __CDF1
000bc3 91a0 090f 	LDS  R26,_GxOffset
000bc5 91b0 0910 	LDS  R27,_GxOffset+1
000bc7 9180 0911 	LDS  R24,_GxOffset+2
000bc9 9190 0912 	LDS  R25,_GxOffset+3
000bcb 940e 140b 	CALL __SUBF12
                +
000bcd e0aa     +LDI R26 , LOW ( 0x391FD80A )
000bce edb8     +LDI R27 , HIGH ( 0x391FD80A )
000bcf e18f     +LDI R24 , BYTE3 ( 0x391FD80A )
000bd0 e399     +LDI R25 , BYTE4 ( 0x391FD80A )
                 	__GETD2N 0x391FD80A
000bd1 940e 1462 	CALL __MULF12
000bd3 91a0 0923 	LDS  R26,_Yaw
000bd5 91b0 0924 	LDS  R27,_Yaw+1
000bd7 9180 0925 	LDS  R24,_Yaw+2
000bd9 9190 0926 	LDS  R25,_Yaw+3
000bdb 940e 1412 	CALL __ADDF12
000bdd 93e0 0923 	STS  _Yaw,R30
000bdf 93f0 0924 	STS  _Yaw+1,R31
000be1 9360 0925 	STS  _Yaw+2,R22
000be3 9370 0926 	STS  _Yaw+3,R23
000be5 9508      	RET
                 _KalibrasiGyroScope:
000be6 931a      	ST   -Y,R17
                 ;	i -> R17
000be7 e0e0      	LDI  R30,LOW(0)
000be8 93e0 090f 	STS  _GxOffset,R30
000bea 93e0 0910 	STS  _GxOffset+1,R30
000bec 93e0 0911 	STS  _GxOffset+2,R30
000bee 93e0 0912 	STS  _GxOffset+3,R30
000bf0 93e0 0913 	STS  _GyOffset,R30
000bf2 93e0 0914 	STS  _GyOffset+1,R30
000bf4 93e0 0915 	STS  _GyOffset+2,R30
000bf6 93e0 0916 	STS  _GyOffset+3,R30
000bf8 93e0 0917 	STS  _GzOffset,R30
000bfa 93e0 0918 	STS  _GzOffset+1,R30
000bfc 93e0 0919 	STS  _GzOffset+2,R30
000bfe 93e0 091a 	STS  _GzOffset+3,R30
000c00 e010      	LDI  R17,LOW(0)
                 _0xBA:
000c01 3614      	CPI  R17,100
000c02 f010      	BRLO PC+3
000c03 940c 0c5a 	JMP _0xBB
000c05 dc83      	RCALL _BacaGyroScope
000c06 91e0 0909 	LDS  R30,_Gx
000c08 91f0 090a 	LDS  R31,_Gx+1
000c0a 91a0 090f 	LDS  R26,_GxOffset
000c0c 91b0 0910 	LDS  R27,_GxOffset+1
000c0e 9180 0911 	LDS  R24,_GxOffset+2
000c10 9190 0912 	LDS  R25,_GxOffset+3
000c12 940e 1550 	CALL __CWD1
000c14 940e 13d8 	CALL __CDF1
000c16 940e 1412 	CALL __ADDF12
000c18 93e0 090f 	STS  _GxOffset,R30
000c1a 93f0 0910 	STS  _GxOffset+1,R31
000c1c 9360 0911 	STS  _GxOffset+2,R22
000c1e 9370 0912 	STS  _GxOffset+3,R23
000c20 91e0 090b 	LDS  R30,_Gy
000c22 91f0 090c 	LDS  R31,_Gy+1
000c24 91a0 0913 	LDS  R26,_GyOffset
000c26 91b0 0914 	LDS  R27,_GyOffset+1
000c28 9180 0915 	LDS  R24,_GyOffset+2
000c2a 9190 0916 	LDS  R25,_GyOffset+3
000c2c 940e 1550 	CALL __CWD1
000c2e 940e 13d8 	CALL __CDF1
000c30 940e 1412 	CALL __ADDF12
000c32 93e0 0913 	STS  _GyOffset,R30
000c34 93f0 0914 	STS  _GyOffset+1,R31
000c36 9360 0915 	STS  _GyOffset+2,R22
000c38 9370 0916 	STS  _GyOffset+3,R23
000c3a 91e0 090d 	LDS  R30,_Gz
000c3c 91f0 090e 	LDS  R31,_Gz+1
000c3e 91a0 0917 	LDS  R26,_GzOffset
000c40 91b0 0918 	LDS  R27,_GzOffset+1
000c42 9180 0919 	LDS  R24,_GzOffset+2
000c44 9190 091a 	LDS  R25,_GzOffset+3
000c46 940e 1550 	CALL __CWD1
000c48 940e 13d8 	CALL __CDF1
000c4a 940e 1412 	CALL __ADDF12
000c4c 93e0 0917 	STS  _GzOffset,R30
000c4e 93f0 0918 	STS  _GzOffset+1,R31
000c50 9360 0919 	STS  _GzOffset+2,R22
000c52 9370 091a 	STS  _GzOffset+3,R23
000c54 e0a1      	LDI  R26,LOW(1)
000c55 e0b0      	LDI  R27,0
000c56 940e 1362 	CALL _delay_ms
000c58 5f1f      	SUBI R17,-1
000c59 cfa7      	RJMP _0xBA
                 _0xBB:
000c5a 91a0 090f 	LDS  R26,_GxOffset
000c5c 91b0 0910 	LDS  R27,_GxOffset+1
000c5e 9180 0911 	LDS  R24,_GxOffset+2
000c60 9190 0912 	LDS  R25,_GxOffset+3
                +
000c62 e0ea     +LDI R30 , LOW ( 0x3C23D70A )
000c63 edf7     +LDI R31 , HIGH ( 0x3C23D70A )
000c64 e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
000c65 e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
000c66 940e 1462 	CALL __MULF12
000c68 93e0 090f 	STS  _GxOffset,R30
000c6a 93f0 0910 	STS  _GxOffset+1,R31
000c6c 9360 0911 	STS  _GxOffset+2,R22
000c6e 9370 0912 	STS  _GxOffset+3,R23
000c70 91a0 0913 	LDS  R26,_GyOffset
000c72 91b0 0914 	LDS  R27,_GyOffset+1
000c74 9180 0915 	LDS  R24,_GyOffset+2
000c76 9190 0916 	LDS  R25,_GyOffset+3
                +
000c78 e0ea     +LDI R30 , LOW ( 0x3C23D70A )
000c79 edf7     +LDI R31 , HIGH ( 0x3C23D70A )
000c7a e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
000c7b e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
000c7c 940e 1462 	CALL __MULF12
000c7e 93e0 0913 	STS  _GyOffset,R30
000c80 93f0 0914 	STS  _GyOffset+1,R31
000c82 9360 0915 	STS  _GyOffset+2,R22
000c84 9370 0916 	STS  _GyOffset+3,R23
000c86 91a0 0917 	LDS  R26,_GzOffset
000c88 91b0 0918 	LDS  R27,_GzOffset+1
000c8a 9180 0919 	LDS  R24,_GzOffset+2
000c8c 9190 091a 	LDS  R25,_GzOffset+3
                +
000c8e e0ea     +LDI R30 , LOW ( 0x3C23D70A )
000c8f edf7     +LDI R31 , HIGH ( 0x3C23D70A )
000c90 e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
000c91 e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
000c92 940e 1462 	CALL __MULF12
000c94 93e0 0917 	STS  _GzOffset,R30
000c96 93f0 0918 	STS  _GzOffset+1,R31
000c98 9360 0919 	STS  _GzOffset+2,R22
000c9a 9370 091a 	STS  _GzOffset+3,R23
000c9c c033      	RJMP _0x20A0003
                 _HMC5883L_Init:
000c9d 931a      	ST   -Y,R17
                 ;	regValue -> R17
000c9e e010      	LDI  R17,0
000c9f e0e0      	LDI  R30,LOW(0)
000ca0 93e0 0952 	STS  _hmc5883l_scale_G000,R30
000ca2 93e0 0953 	STS  _hmc5883l_scale_G000+1,R30
000ca4 93e0 0954 	STS  _hmc5883l_scale_G000+2,R30
000ca6 93e0 0955 	STS  _hmc5883l_scale_G000+3,R30
000ca8 e011      	LDI  R17,LOW(1)
                +
000ca9 e1ef     +LDI R30 , LOW ( 0x3F6B851F )
000caa e8f5     +LDI R31 , HIGH ( 0x3F6B851F )
000cab e66b     +LDI R22 , BYTE3 ( 0x3F6B851F )
000cac e37f     +LDI R23 , BYTE4 ( 0x3F6B851F )
                 	__GETD1N 0x3F6B851F
000cad 93e0 0952 	STS  _hmc5883l_scale_G000,R30
000caf 93f0 0953 	STS  _hmc5883l_scale_G000+1,R31
000cb1 9360 0954 	STS  _hmc5883l_scale_G000+2,R22
000cb3 9370 0955 	STS  _hmc5883l_scale_G000+3,R23
000cb5 2fe1      	MOV  R30,R17
000cb6 95e2      	SWAP R30
000cb7 7fe0      	ANDI R30,0xF0
000cb8 0fee      	LSL  R30
000cb9 2f1e      	MOV  R17,R30
000cba e3ac      	LDI  R26,LOW(60)
000cbb 940e 04bc 	CALL _I2C_Start_Wait
000cbd e0a1      	LDI  R26,LOW(1)
000cbe 940e 04f3 	CALL _I2C_Write
000cc0 2fa1      	MOV  R26,R17
000cc1 940e 04f3 	CALL _I2C_Write
000cc3 940e 04eb 	CALL _I2C_Stop
000cc5 e3ac      	LDI  R26,LOW(60)
000cc6 940e 04bc 	CALL _I2C_Start_Wait
000cc8 e0a2      	LDI  R26,LOW(2)
000cc9 940e 04f3 	CALL _I2C_Write
000ccb e0a0      	LDI  R26,LOW(0)
000ccc 940e 04f3 	CALL _I2C_Write
000cce 940e 04eb 	CALL _I2C_Stop
                 _0x20A0003:
000cd0 9119      	LD   R17,Y+
000cd1 9508      	RET
                 ;	rate -> R17
                 ;	rate -> Y+1
                 ;	buffer -> R17
                 ;	*mxraw -> Y+11
                 ;	*myraw -> Y+9
                 ;	*mzraw -> Y+7
                 ;	i -> R17
                 ;	buffer -> Y+1
                 ;	*mx -> Y+22
                 ;	*my -> Y+20
                 ;	*mz -> Y+18
                 ;	mxraw -> R16,R17
                 ;	myraw -> R18,R19
                 ;	mzraw -> R20,R21
                 ;	mxt -> Y+14
                 ;	myt -> Y+10
                 ;	mzt -> Y+6
                 _HMC5883L_TestConnection:
000cd2 9723      	SBIW R28,3
                 ;	buffer -> Y+0
000cd3 e3ac      	LDI  R26,LOW(60)
000cd4 940e 04bc 	CALL _I2C_Start_Wait
000cd6 e0aa      	LDI  R26,LOW(10)
000cd7 940e 04f3 	CALL _I2C_Write
000cd9 940e 04eb 	CALL _I2C_Stop
000cdb e3ad      	LDI  R26,LOW(61)
000cdc 940e 04bc 	CALL _I2C_Start_Wait
000cde 940e 050b 	CALL _I2C_ReadAck
000ce0 83e8      	ST   Y,R30
000ce1 940e 050b 	CALL _I2C_ReadAck
000ce3 83e9      	STD  Y+1,R30
000ce4 940e 0513 	CALL _I2C_ReadNak
000ce6 83ea      	STD  Y+2,R30
000ce7 940e 04eb 	CALL _I2C_Stop
000ce9 81a8      	LD   R26,Y
000cea 34a8      	CPI  R26,LOW(0x48)
000ceb f431      	BRNE _0xC2
000cec 81a9      	LDD  R26,Y+1
000ced 33a4      	CPI  R26,LOW(0x34)
000cee f419      	BRNE _0xC2
000cef 81aa      	LDD  R26,Y+2
000cf0 33a3      	CPI  R26,LOW(0x33)
000cf1 f009      	BREQ _0xC3
                 _0xC2:
000cf2 c002      	RJMP _0xC1
                 _0xC3:
000cf3 e0e1      	LDI  R30,LOW(1)
000cf4 c001      	RJMP _0x20A0002
                 _0xC1:
000cf5 e0e0      	LDI  R30,LOW(0)
                 _0x20A0002:
000cf6 9623      	ADIW R28,3
000cf7 9508      	RET
                 _ext_int6_isr:
000cf8 93ea      	ST   -Y,R30
000cf9 93fa      	ST   -Y,R31
000cfa b7ef      	IN   R30,SREG
000cfb 93ea      	ST   -Y,R30
000cfc 9b0e      	SBIS 0x1,6
000cfd c00e      	RJMP _0xC5
000cfe 9bb0      	SBIS 0x16,0
000cff c006      	RJMP _0xC6
000d00 94f8      	cli
000d01 01f5      	MOVW R30,R10
000d02 9631      	ADIW R30,1
000d03 015f      	MOVW R10,R30
000d04 9478      	sei
000d05 c005      	RJMP _0xC7
                 _0xC6:
000d06 94f8      	cli
000d07 01f5      	MOVW R30,R10
000d08 9731      	SBIW R30,1
000d09 015f      	MOVW R10,R30
000d0a 9478      	sei
                 _0xC7:
000d0b c00d      	RJMP _0xC8
                 _0xC5:
000d0c 9bb0      	SBIS 0x16,0
000d0d c006      	RJMP _0xC9
000d0e 94f8      	cli
000d0f 01f5      	MOVW R30,R10
000d10 9731      	SBIW R30,1
000d11 015f      	MOVW R10,R30
000d12 9478      	sei
000d13 c005      	RJMP _0xCA
                 _0xC9:
000d14 94f8      	cli
000d15 01f5      	MOVW R30,R10
000d16 9631      	ADIW R30,1
000d17 015f      	MOVW R10,R30
000d18 9478      	sei
                 _0xCA:
                 _0xC8:
000d19 91e0 0929 	LDS  R30,_dCounter1
000d1b 5fef      	SUBI R30,-LOW(1)
000d1c 93e0 0929 	STS  _dCounter1,R30
000d1e 91e9      	LD   R30,Y+
000d1f bfef      	OUT  SREG,R30
000d20 91f9      	LD   R31,Y+
000d21 91e9      	LD   R30,Y+
000d22 9518      	RETI
                 _ext_int7_isr:
000d23 93ea      	ST   -Y,R30
000d24 93fa      	ST   -Y,R31
000d25 b7ef      	IN   R30,SREG
000d26 93ea      	ST   -Y,R30
000d27 9b0f      	SBIS 0x1,7
000d28 c00e      	RJMP _0xCB
000d29 9bb2      	SBIS 0x16,2
000d2a c006      	RJMP _0xCC
000d2b 94f8      	cli
000d2c 01f6      	MOVW R30,R12
000d2d 9731      	SBIW R30,1
000d2e 016f      	MOVW R12,R30
000d2f 9478      	sei
000d30 c005      	RJMP _0xCD
                 _0xCC:
000d31 94f8      	cli
000d32 01f6      	MOVW R30,R12
000d33 9631      	ADIW R30,1
000d34 016f      	MOVW R12,R30
000d35 9478      	sei
                 _0xCD:
000d36 c00d      	RJMP _0xCE
                 _0xCB:
000d37 9bb2      	SBIS 0x16,2
000d38 c006      	RJMP _0xCF
000d39 94f8      	cli
000d3a 01f6      	MOVW R30,R12
000d3b 9631      	ADIW R30,1
000d3c 016f      	MOVW R12,R30
000d3d 9478      	sei
000d3e c005      	RJMP _0xD0
                 _0xCF:
000d3f 94f8      	cli
000d40 01f6      	MOVW R30,R12
000d41 9731      	SBIW R30,1
000d42 016f      	MOVW R12,R30
000d43 9478      	sei
                 _0xD0:
                 _0xCE:
000d44 91e0 092a 	LDS  R30,_dCounter2
000d46 5fef      	SUBI R30,-LOW(1)
000d47 93e0 092a 	STS  _dCounter2,R30
000d49 91e9      	LD   R30,Y+
000d4a bfef      	OUT  SREG,R30
000d4b 91f9      	LD   R31,Y+
000d4c 91e9      	LD   R30,Y+
000d4d 9518      	RETI
                 _timer3_compc_isr:
000d4e 93aa      	ST   -Y,R26
000d4f 93ba      	ST   -Y,R27
000d50 93ea      	ST   -Y,R30
000d51 93fa      	ST   -Y,R31
000d52 b7ef      	IN   R30,SREG
000d53 93ea      	ST   -Y,R30
000d54 e5a7      	LDI  R26,LOW(_ServoCounter_S0000059000)
000d55 e0b9      	LDI  R27,HIGH(_ServoCounter_S0000059000)
000d56 91ed      	LD   R30,X+
000d57 91fd      	LD   R31,X+
000d58 9631      	ADIW R30,1
000d59 93fe      	ST   -X,R31
000d5a 93ee      	ST   -X,R30
000d5b 35e1      	CPI  R30,LOW(0x51)
000d5c e0a0      	LDI  R26,HIGH(0x51)
000d5d 07fa      	CPC  R31,R26
000d5e f4d0      	BRSH _0xD1
000d5f 91a0 0957 	LDS  R26,_ServoCounter_S0000059000
000d61 164a      	CP   R4,R26
000d62 f409      	BRNE _0xD2
000d63 9894      	CBI  0x12,4
                 _0xD2:
000d64 91a0 0957 	LDS  R26,_ServoCounter_S0000059000
000d66 167a      	CP   R7,R26
000d67 f409      	BRNE _0xD5
000d68 9895      	CBI  0x12,5
                 _0xD5:
000d69 91a0 0957 	LDS  R26,_ServoCounter_S0000059000
000d6b 166a      	CP   R6,R26
000d6c f409      	BRNE _0xD8
000d6d 9896      	CBI  0x12,6
                 _0xD8:
000d6e 91a0 0957 	LDS  R26,_ServoCounter_S0000059000
000d70 169a      	CP   R9,R26
000d71 f409      	BRNE _0xDB
000d72 9897      	CBI  0x12,7
                 _0xDB:
000d73 91a0 0957 	LDS  R26,_ServoCounter_S0000059000
000d75 165a      	CP   R5,R26
000d76 f409      	BRNE _0xDE
000d77 98c3      	CBI  0x18,3
                 _0xDE:
000d78 c012      	RJMP _0xE1
                 _0xD1:
000d79 91a0 0957 	LDS  R26,_ServoCounter_S0000059000
000d7b 91b0 0958 	LDS  R27,_ServoCounter_S0000059000+1
000d7d 32a1      	CPI  R26,LOW(0x321)
000d7e e0e3      	LDI  R30,HIGH(0x321)
000d7f 07be      	CPC  R27,R30
000d80 f050      	BRLO _0xE2
000d81 e0e0      	LDI  R30,LOW(0)
000d82 93e0 0957 	STS  _ServoCounter_S0000059000,R30
000d84 93e0 0958 	STS  _ServoCounter_S0000059000+1,R30
000d86 9a94      	SBI  0x12,4
000d87 9a95      	SBI  0x12,5
000d88 9a96      	SBI  0x12,6
000d89 9a97      	SBI  0x12,7
000d8a 9ac3      	SBI  0x18,3
                 _0xE2:
                 _0xE1:
000d8b 91e9      	LD   R30,Y+
000d8c bfef      	OUT  SREG,R30
000d8d 91f9      	LD   R31,Y+
000d8e 91e9      	LD   R30,Y+
000d8f 91b9      	LD   R27,Y+
000d90 91a9      	LD   R26,Y+
000d91 9518      	RETI
                 _BalancingControl:
000d92 9764      	SBIW R28,20
                 ;	CenterB -> Y+16
                 ;	Error -> Y+12
                 ;	dError -> Y+8
                 ;	U -> Y+4
                 ;	ErrorSpeed -> Y+0
000d93 91a0 0965 	LDS  R26,_Rotary1_S000005A000
000d95 91b0 0966 	LDS  R27,_Rotary1_S000005A000+1
000d97 01f5      	MOVW R30,R10
000d98 1bea      	SUB  R30,R26
000d99 0bfb      	SBC  R31,R27
000d9a 010f      	MOVW R0,R30
000d9b 91a0 0967 	LDS  R26,_Rotary2_S000005A000
000d9d 91b0 0968 	LDS  R27,_Rotary2_S000005A000+1
000d9f 01f6      	MOVW R30,R12
000da0 1bea      	SUB  R30,R26
000da1 0bfb      	SBC  R31,R27
000da2 0de0      	ADD  R30,R0
000da3 1df1      	ADC  R31,R1
000da4 940e 1550 	CALL __CWD1
000da6 940e 13d8 	CALL __CDF1
                +
000da8 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000da9 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000daa e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000dab e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000dac 940e 1462 	CALL __MULF12
000dae 91a0 0900 	LDS  R26,_TargetSpeedB
000db0 940e 1555 	CALL __CBD2
000db2 940e 1619 	CALL __CDF2
000db4 940e 161c 	CALL __SWAPD12
000db6 940e 140b 	CALL __SUBF12
000db8 940e 1608 	CALL __PUTD1S0
                +
000dba 92a0 0965+STS _Rotary1_S000005A000 + ( 0 ) , R10
000dbc 92b0 0966+STS _Rotary1_S000005A000 + ( 0 ) + 1 , R11
                 	__PUTWMRN _Rotary1_S000005A000,0,10,11
                +
000dbe 92c0 0967+STS _Rotary2_S000005A000 + ( 0 ) , R12
000dc0 92d0 0968+STS _Rotary2_S000005A000 + ( 0 ) + 1 , R13
                 	__PUTWMRN _Rotary2_S000005A000,0,12,13
000dc2 940e 1603 	CALL __GETD2S0
                +
000dc4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000dc5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000dc6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000dc7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000dc8 940e 1462 	CALL __MULF12
000dca 91a0 0959 	LDS  R26,_iErrorSpeed_S000005A000
000dcc 91b0 095a 	LDS  R27,_iErrorSpeed_S000005A000+1
000dce 9180 095b 	LDS  R24,_iErrorSpeed_S000005A000+2
000dd0 9190 095c 	LDS  R25,_iErrorSpeed_S000005A000+3
000dd2 940e 1412 	CALL __ADDF12
000dd4 93e0 0959 	STS  _iErrorSpeed_S000005A000,R30
000dd6 93f0 095a 	STS  _iErrorSpeed_S000005A000+1,R31
000dd8 9360 095b 	STS  _iErrorSpeed_S000005A000+2,R22
000dda 9370 095c 	STS  _iErrorSpeed_S000005A000+3,R23
000ddc 940e 13a1 	CALL __CFD1
000dde 9734      	SBIW R30,4
000ddf f02c      	BRLT _0xED
                +
000de0 e0e0     +LDI R30 , LOW ( 0x40400000 )
000de1 e0f0     +LDI R31 , HIGH ( 0x40400000 )
000de2 e460     +LDI R22 , BYTE3 ( 0x40400000 )
000de3 e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
000de4 c012      	RJMP _0x14A
                 _0xED:
000de5 91e0 0959 	LDS  R30,_iErrorSpeed_S000005A000
000de7 91f0 095a 	LDS  R31,_iErrorSpeed_S000005A000+1
000de9 9160 095b 	LDS  R22,_iErrorSpeed_S000005A000+2
000deb 9170 095c 	LDS  R23,_iErrorSpeed_S000005A000+3
000ded 940e 13a1 	CALL __CFD1
000def 3fed      	CPI  R30,LOW(0xFFFD)
000df0 efaf      	LDI  R26,HIGH(0xFFFD)
000df1 07fa      	CPC  R31,R26
000df2 f464      	BRGE _0xEF
                +
000df3 e0e0     +LDI R30 , LOW ( 0xC0400000 )
000df4 e0f0     +LDI R31 , HIGH ( 0xC0400000 )
000df5 e460     +LDI R22 , BYTE3 ( 0xC0400000 )
000df6 ec70     +LDI R23 , BYTE4 ( 0xC0400000 )
                 	__GETD1N 0xC0400000
                 _0x14A:
000df7 93e0 0959 	STS  _iErrorSpeed_S000005A000,R30
000df9 93f0 095a 	STS  _iErrorSpeed_S000005A000+1,R31
000dfb 9360 095b 	STS  _iErrorSpeed_S000005A000+2,R22
000dfd 9370 095c 	STS  _iErrorSpeed_S000005A000+3,R23
                 _0xEF:
000dff 940e 1603 	CALL __GETD2S0
                +
000e01 eced     +LDI R30 , LOW ( 0x3E4CCCCD )
000e02 ecfc     +LDI R31 , HIGH ( 0x3E4CCCCD )
000e03 e46c     +LDI R22 , BYTE3 ( 0x3E4CCCCD )
000e04 e37e     +LDI R23 , BYTE4 ( 0x3E4CCCCD )
                 	__GETD1N 0x3E4CCCCD
000e05 940e 1462 	CALL __MULF12
                +
000e07 e0a0     +LDI R26 , LOW ( 0x41000000 )
000e08 e0b0     +LDI R27 , HIGH ( 0x41000000 )
000e09 e080     +LDI R24 , BYTE3 ( 0x41000000 )
000e0a e491     +LDI R25 , BYTE4 ( 0x41000000 )
                 	__GETD2N 0x41000000
000e0b 940e 1412 	CALL __ADDF12
000e0d 91a0 0959 	LDS  R26,_iErrorSpeed_S000005A000
000e0f 91b0 095a 	LDS  R27,_iErrorSpeed_S000005A000+1
000e11 9180 095b 	LDS  R24,_iErrorSpeed_S000005A000+2
000e13 9190 095c 	LDS  R25,_iErrorSpeed_S000005A000+3
000e15 940e 1412 	CALL __ADDF12
                +
000e17 8be8     +STD Y + 16 , R30
000e18 8bf9     +STD Y + 16 + 1 , R31
000e19 8b6a     +STD Y + 16 + 2 , R22
000e1a 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000e1b 91e0 091f 	LDS  R30,_Pitch
000e1d 91f0 0920 	LDS  R31,_Pitch+1
000e1f 9160 0921 	LDS  R22,_Pitch+2
000e21 9170 0922 	LDS  R23,_Pitch+3
000e23 940e 13a1 	CALL __CFD1
000e25 32ed      	CPI  R30,LOW(0x2D)
000e26 f424      	BRGE _0xF1
000e27 2fae      	MOV  R26,R30
000e28 ede3      	LDI  R30,LOW(211)
000e29 17ea      	CP   R30,R26
000e2a f00c      	BRLT _0xF2
                 _0xF1:
000e2b c0fa      	RJMP _0xF0
                 _0xF2:
                +
000e2c 89a8     +LDD R26 , Y + 16
000e2d 89b9     +LDD R27 , Y + 16 + 1
000e2e 898a     +LDD R24 , Y + 16 + 2
000e2f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000e30 91e0 091f 	LDS  R30,_Pitch
000e32 91f0 0920 	LDS  R31,_Pitch+1
000e34 9160 0921 	LDS  R22,_Pitch+2
000e36 9170 0922 	LDS  R23,_Pitch+3
000e38 940e 140b 	CALL __SUBF12
                +
000e3a 87ec     +STD Y + 12 , R30
000e3b 87fd     +STD Y + 12 + 1 , R31
000e3c 876e     +STD Y + 12 + 2 , R22
000e3d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
000e3e 85ac     +LDD R26 , Y + 12
000e3f 85bd     +LDD R27 , Y + 12 + 1
000e40 858e     +LDD R24 , Y + 12 + 2
000e41 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
                +
000e42 e3e3     +LDI R30 , LOW ( 0x3EB33333 )
000e43 e3f3     +LDI R31 , HIGH ( 0x3EB33333 )
000e44 eb63     +LDI R22 , BYTE3 ( 0x3EB33333 )
000e45 e37e     +LDI R23 , BYTE4 ( 0x3EB33333 )
                 	__GETD1N 0x3EB33333
000e46 940e 1462 	CALL __MULF12
000e48 91a0 0961 	LDS  R26,_iError_S000005A000
000e4a 91b0 0962 	LDS  R27,_iError_S000005A000+1
000e4c 9180 0963 	LDS  R24,_iError_S000005A000+2
000e4e 9190 0964 	LDS  R25,_iError_S000005A000+3
000e50 940e 1412 	CALL __ADDF12
000e52 93e0 0961 	STS  _iError_S000005A000,R30
000e54 93f0 0962 	STS  _iError_S000005A000+1,R31
000e56 9360 0963 	STS  _iError_S000005A000+2,R22
000e58 9370 0964 	STS  _iError_S000005A000+3,R23
                +
000e5a 85ec     +LDD R30 , Y + 12
000e5b 85fd     +LDD R31 , Y + 12 + 1
000e5c 856e     +LDD R22 , Y + 12 + 2
000e5d 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000e5e 93e0 095d 	STS  _LastError_S000005A000,R30
000e60 93f0 095e 	STS  _LastError_S000005A000+1,R31
000e62 9360 095f 	STS  _LastError_S000005A000+2,R22
000e64 9370 0960 	STS  _LastError_S000005A000+3,R23
000e66 91a0 0961 	LDS  R26,_iError_S000005A000
000e68 91b0 0962 	LDS  R27,_iError_S000005A000+1
000e6a 9180 0963 	LDS  R24,_iError_S000005A000+2
000e6c 9190 0964 	LDS  R25,_iError_S000005A000+3
                +
000e6e e0e0     +LDI R30 , LOW ( 0x42C80000 )
000e6f e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000e70 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000e71 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000e72 940e 14f5 	CALL __CMPF12
000e74 f009      	BREQ PC+2
000e75 f410      	BRCC PC+3
000e76 940c 0e79 	JMP  _0xF3
000e78 c00f      	RJMP _0x14B
                 _0xF3:
000e79 91a0 0961 	LDS  R26,_iError_S000005A000
000e7b 91b0 0962 	LDS  R27,_iError_S000005A000+1
000e7d 9180 0963 	LDS  R24,_iError_S000005A000+2
000e7f 9190 0964 	LDS  R25,_iError_S000005A000+3
                +
000e81 e0e0     +LDI R30 , LOW ( 0xC2C80000 )
000e82 e0f0     +LDI R31 , HIGH ( 0xC2C80000 )
000e83 ec68     +LDI R22 , BYTE3 ( 0xC2C80000 )
000e84 ec72     +LDI R23 , BYTE4 ( 0xC2C80000 )
                 	__GETD1N 0xC2C80000
000e85 940e 14f5 	CALL __CMPF12
000e87 f440      	BRSH _0xF5
                 _0x14B:
000e88 93e0 0961 	STS  _iError_S000005A000,R30
000e8a 93f0 0962 	STS  _iError_S000005A000+1,R31
000e8c 9360 0963 	STS  _iError_S000005A000+2,R22
000e8e 9370 0964 	STS  _iError_S000005A000+3,R23
                 _0xF5:
000e90 91e0 090b 	LDS  R30,_Gy
000e92 91f0 090c 	LDS  R31,_Gy+1
000e94 940e 1550 	CALL __CWD1
000e96 940e 13d8 	CALL __CDF1
000e98 91a0 0913 	LDS  R26,_GyOffset
000e9a 91b0 0914 	LDS  R27,_GyOffset+1
000e9c 9180 0915 	LDS  R24,_GyOffset+2
000e9e 9190 0916 	LDS  R25,_GyOffset+3
000ea0 940e 140b 	CALL __SUBF12
                +
000ea2 87e8     +STD Y + 8 , R30
000ea3 87f9     +STD Y + 8 + 1 , R31
000ea4 876a     +STD Y + 8 + 2 , R22
000ea5 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
000ea6 91e0 095d 	LDS  R30,_LastError_S000005A000
000ea8 91f0 095e 	LDS  R31,_LastError_S000005A000+1
000eaa 9160 095f 	LDS  R22,_LastError_S000005A000+2
000eac 9170 0960 	LDS  R23,_LastError_S000005A000+3
                +
000eae 85ac     +LDD R26 , Y + 12
000eaf 85bd     +LDD R27 , Y + 12 + 1
000eb0 858e     +LDD R24 , Y + 12 + 2
000eb1 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000eb2 940e 1412 	CALL __ADDF12
                +
000eb4 e0a0     +LDI R26 , LOW ( 0x40C00000 )
000eb5 e0b0     +LDI R27 , HIGH ( 0x40C00000 )
000eb6 ec80     +LDI R24 , BYTE3 ( 0x40C00000 )
000eb7 e490     +LDI R25 , BYTE4 ( 0x40C00000 )
                 	__GETD2N 0x40C00000
000eb8 940e 1462 	CALL __MULF12
000eba 937f      	PUSH R23
000ebb 936f      	PUSH R22
000ebc 93ff      	PUSH R31
000ebd 93ef      	PUSH R30
                +
000ebe 85a8     +LDD R26 , Y + 8
000ebf 85b9     +LDD R27 , Y + 8 + 1
000ec0 858a     +LDD R24 , Y + 8 + 2
000ec1 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
000ec2 e0ea     +LDI R30 , LOW ( 0x3CA3D70A )
000ec3 edf7     +LDI R31 , HIGH ( 0x3CA3D70A )
000ec4 ea63     +LDI R22 , BYTE3 ( 0x3CA3D70A )
000ec5 e37c     +LDI R23 , BYTE4 ( 0x3CA3D70A )
                 	__GETD1N 0x3CA3D70A
000ec6 940e 1462 	CALL __MULF12
000ec8 91af      	POP  R26
000ec9 91bf      	POP  R27
000eca 918f      	POP  R24
000ecb 919f      	POP  R25
000ecc 940e 1412 	CALL __ADDF12
000ece 937f      	PUSH R23
000ecf 936f      	PUSH R22
000ed0 93ff      	PUSH R31
000ed1 93ef      	PUSH R30
000ed2 91e0 0961 	LDS  R30,_iError_S000005A000
000ed4 91f0 0962 	LDS  R31,_iError_S000005A000+1
000ed6 9160 0963 	LDS  R22,_iError_S000005A000+2
000ed8 9170 0964 	LDS  R23,_iError_S000005A000+3
                +
000eda e0a0     +LDI R26 , LOW ( 0x40800000 )
000edb e0b0     +LDI R27 , HIGH ( 0x40800000 )
000edc e880     +LDI R24 , BYTE3 ( 0x40800000 )
000edd e490     +LDI R25 , BYTE4 ( 0x40800000 )
                 	__GETD2N 0x40800000
000ede 940e 1462 	CALL __MULF12
000ee0 91af      	POP  R26
000ee1 91bf      	POP  R27
000ee2 918f      	POP  R24
000ee3 919f      	POP  R25
000ee4 940e 1412 	CALL __ADDF12
                +
000ee6 83ec     +STD Y + 4 , R30
000ee7 83fd     +STD Y + 4 + 1 , R31
000ee8 836e     +STD Y + 4 + 2 , R22
000ee9 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
000eea 81ac     +LDD R26 , Y + 4
000eeb 81bd     +LDD R27 , Y + 4 + 1
000eec 818e     +LDD R24 , Y + 4 + 2
000eed 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000eee e0e0     +LDI R30 , LOW ( 0x43C80000 )
000eef e0f0     +LDI R31 , HIGH ( 0x43C80000 )
000ef0 ec68     +LDI R22 , BYTE3 ( 0x43C80000 )
000ef1 e473     +LDI R23 , BYTE4 ( 0x43C80000 )
                 	__GETD1N 0x43C80000
000ef2 940e 14f5 	CALL __CMPF12
000ef4 f009      	BREQ PC+2
000ef5 f410      	BRCC PC+3
000ef6 940c 0ef9 	JMP  _0xF6
000ef8 c00b      	RJMP _0x14C
                 _0xF6:
                +
000ef9 81ac     +LDD R26 , Y + 4
000efa 81bd     +LDD R27 , Y + 4 + 1
000efb 818e     +LDD R24 , Y + 4 + 2
000efc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000efd e0e0     +LDI R30 , LOW ( 0xC3C80000 )
000efe e0f0     +LDI R31 , HIGH ( 0xC3C80000 )
000eff ec68     +LDI R22 , BYTE3 ( 0xC3C80000 )
000f00 ec73     +LDI R23 , BYTE4 ( 0xC3C80000 )
                 	__GETD1N 0xC3C80000
000f01 940e 14f5 	CALL __CMPF12
000f03 f420      	BRSH _0xF8
                 _0x14C:
                +
000f04 83ec     +STD Y + 4 , R30
000f05 83fd     +STD Y + 4 + 1 , R31
000f06 836e     +STD Y + 4 + 2 , R22
000f07 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0xF8:
                +
000f08 81ec     +LDD R30 , Y + 4
000f09 81fd     +LDD R31 , Y + 4 + 1
000f0a 816e     +LDD R22 , Y + 4 + 2
000f0b 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
000f0c 940e 13a1 	CALL __CFD1
000f0e 01df      	MOVW R26,R30
000f0f 91e0 0901 	LDS  R30,_SteerB
000f11 91f0 0902 	LDS  R31,_SteerB+1
000f13 1bae      	SUB  R26,R30
000f14 0bbf      	SBC  R27,R31
000f15 93ba      	ST   -Y,R27
000f16 93aa      	ST   -Y,R26
                +
000f17 81ee     +LDD R30 , Y + 6
000f18 81ff     +LDD R31 , Y + 6 + 1
000f19 8568     +LDD R22 , Y + 6 + 2
000f1a 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000f1b 940e 13a1 	CALL __CFD1
000f1d 91a0 0901 	LDS  R26,_SteerB
000f1f 91b0 0902 	LDS  R27,_SteerB+1
000f21 0fae      	ADD  R26,R30
000f22 1fbf      	ADC  R27,R31
000f23 940e 0258 	CALL _SetDataMotorPWM
000f25 c011      	RJMP _0xF9
                 _0xF0:
000f26 e0e0      	LDI  R30,LOW(0)
000f27 e0f0      	LDI  R31,HIGH(0)
000f28 93fa      	ST   -Y,R31
000f29 93ea      	ST   -Y,R30
000f2a e0a0      	LDI  R26,LOW(0)
000f2b e0b0      	LDI  R27,0
000f2c 940e 0258 	CALL _SetDataMotorPWM
000f2e e0e0      	LDI  R30,LOW(0)
000f2f 93e0 0961 	STS  _iError_S000005A000,R30
000f31 93e0 0962 	STS  _iError_S000005A000+1,R30
000f33 93e0 0963 	STS  _iError_S000005A000+2,R30
000f35 93e0 0964 	STS  _iError_S000005A000+3,R30
                 _0xF9:
000f37 9664      	ADIW R28,20
000f38 9508      	RET
                 _timer1_capt_isr:
000f39 920a      	ST   -Y,R0
000f3a 921a      	ST   -Y,R1
000f3b 92fa      	ST   -Y,R15
000f3c 936a      	ST   -Y,R22
000f3d 937a      	ST   -Y,R23
000f3e 938a      	ST   -Y,R24
000f3f 939a      	ST   -Y,R25
000f40 93aa      	ST   -Y,R26
000f41 93ba      	ST   -Y,R27
000f42 93ea      	ST   -Y,R30
000f43 93fa      	ST   -Y,R31
000f44 b7eb      	IN   R30,RAMPZ
000f45 93ea      	ST   -Y,R30
000f46 b7ef      	IN   R30,SREG
000f47 93ea      	ST   -Y,R30
000f48 9478      	sei
000f49 91a0 0969 	LDS  R26,_ServoCounter_S000005B000
000f4b 5faf      	SUBI R26,-LOW(1)
000f4c 93a0 0969 	STS  _ServoCounter_S000005B000,R26
000f4e 30a5      	CPI  R26,LOW(0x5)
000f4f f030      	BRLO _0xFA
000f50 e0e0      	LDI  R30,LOW(0)
000f51 93e0 0969 	STS  _ServoCounter_S000005B000,R30
000f53 eaea      	LDI  R30,LOW(170)
000f54 bdef      	OUT  0x2F,R30
000f55 c005      	RJMP _0xFB
                 _0xFA:
000f56 e0e2      	LDI  R30,LOW(2)
000f57 bdef      	OUT  0x2F,R30
000f58 98c5      	CBI  0x18,5
000f59 98c6      	CBI  0x18,6
000f5a 98c7      	CBI  0x18,7
                 _0xFB:
000f5b fe20      	SBRS R2,0
000f5c c02e      	RJMP _0x102
000f5d 91a0 096b 	LDS  R26,_TempoTick_S000005B000
000f5f 5faf      	SUBI R26,-LOW(1)
000f60 93a0 096b 	STS  _TempoTick_S000005B000,R26
000f62 91e0 096a 	LDS  R30,_LaguTick_S000005B000
000f64 27ff      	CLR  R31
000f65 2766      	CLR  R22
000f66 2777      	CLR  R23
000f67 5de8      	SUBI R30,LOW(-_Tempo*2)
000f68 4ffe      	SBCI R31,HIGH(-_Tempo*2)
000f69 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
000f6a bf6b     +OUT RAMPZ , R22
000f6b 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
000f6c 17ae      	CP   R26,R30
000f6d f0e8      	BRLO _0x103
000f6e e0e0      	LDI  R30,LOW(0)
000f6f 93e0 096b 	STS  _TempoTick_S000005B000,R30
000f71 91e0 096a 	LDS  R30,_LaguTick_S000005B000
000f73 e8ac      	LDI  R26,LOW(_Melodi*2)
000f74 e0b0      	LDI  R27,HIGH(_Melodi*2)
000f75 e080      	LDI  R24,BYTE3(_Melodi*2)
000f76 27ff      	CLR  R31
000f77 2766      	CLR  R22
000f78 2777      	CLR  R23
000f79 940e 1545 	CALL __LSLD1
000f7b 940e 1515 	CALL __ADDD12
000f7d 940e 15fa 	CALL __GETW2PF
000f7f 940e 0522 	CALL _FBuzzer
000f81 91a0 096a 	LDS  R26,_LaguTick_S000005B000
000f83 5faf      	SUBI R26,-LOW(1)
000f84 93a0 096a 	STS  _LaguTick_S000005B000,R26
000f86 34ae      	CPI  R26,LOW(0x4E)
000f87 f018      	BRLO _0x104
000f88 e0e0      	LDI  R30,LOW(0)
000f89 93e0 096a 	STS  _LaguTick_S000005B000,R30
                 _0x104:
                 _0x103:
                 _0x102:
000f8b 91e9      	LD   R30,Y+
000f8c bfef      	OUT  SREG,R30
000f8d 91e9      	LD   R30,Y+
000f8e bfeb      	OUT  RAMPZ,R30
000f8f 91f9      	LD   R31,Y+
000f90 91e9      	LD   R30,Y+
000f91 91b9      	LD   R27,Y+
000f92 91a9      	LD   R26,Y+
000f93 9199      	LD   R25,Y+
000f94 9189      	LD   R24,Y+
000f95 9179      	LD   R23,Y+
000f96 9169      	LD   R22,Y+
000f97 90f9      	LD   R15,Y+
000f98 9019      	LD   R1,Y+
000f99 9009      	LD   R0,Y+
000f9a 9518      	RETI
                 _timer1_ovf_isr:
000f9b 920a      	ST   -Y,R0
000f9c 921a      	ST   -Y,R1
000f9d 92fa      	ST   -Y,R15
000f9e 936a      	ST   -Y,R22
000f9f 937a      	ST   -Y,R23
000fa0 938a      	ST   -Y,R24
000fa1 939a      	ST   -Y,R25
000fa2 93aa      	ST   -Y,R26
000fa3 93ba      	ST   -Y,R27
000fa4 93ea      	ST   -Y,R30
000fa5 93fa      	ST   -Y,R31
000fa6 b7eb      	IN   R30,RAMPZ
000fa7 93ea      	ST   -Y,R30
000fa8 b7ef      	IN   R30,SREG
000fa9 93ea      	ST   -Y,R30
000faa 931a      	ST   -Y,R17
                 ;	i -> R17
000fab 9478      	sei
000fac fe23      	SBRS R2,3
000fad c015      	RJMP _0x105
000fae 2d18      	MOV  R17,R8
000faf 940e 086e 	CALL _BacaAccelerometer
000fb1 940e 0889 	CALL _BacaGyroScope
000fb3 940e 08ef 	CALL _HitungKalmanPitch
000fb5 940e 0bbb 	CALL _HitungYaw
000fb7 ddda      	RCALL _BalancingControl
000fb8 1518      	CP   R17,R8
000fb9 f418      	BRSH _0x106
000fba 2de8      	MOV  R30,R8
000fbb 1be1      	SUB  R30,R17
000fbc c004      	RJMP _0x14D
                 _0x106:
000fbd efef      	LDI  R30,LOW(255)
000fbe 1be1      	SUB  R30,R17
000fbf 0de8      	ADD  R30,R8
000fc0 5fef      	SUBI R30,-LOW(1)
                 _0x14D:
000fc1 93e0 0956 	STS  _WaktuEksekusi,R30
                 _0x105:
000fc3 9119      	LD   R17,Y+
000fc4 91e9      	LD   R30,Y+
000fc5 bfef      	OUT  SREG,R30
000fc6 91e9      	LD   R30,Y+
000fc7 bfeb      	OUT  RAMPZ,R30
000fc8 91f9      	LD   R31,Y+
000fc9 91e9      	LD   R30,Y+
000fca 91b9      	LD   R27,Y+
000fcb 91a9      	LD   R26,Y+
000fcc 9199      	LD   R25,Y+
000fcd 9189      	LD   R24,Y+
000fce 9179      	LD   R23,Y+
000fcf 9169      	LD   R22,Y+
000fd0 90f9      	LD   R15,Y+
000fd1 9019      	LD   R1,Y+
000fd2 9009      	LD   R0,Y+
000fd3 9518      	RETI
                 _timer2_comp_isr:
000fd4 93aa      	ST   -Y,R26
000fd5 93ea      	ST   -Y,R30
000fd6 b7ef      	IN   R30,SREG
000fd7 93ea      	ST   -Y,R30
000fd8 9483      	INC  R8
000fd9 9478      	sei
000fda 91a0 096e 	LDS  R26,_Timer2Tick_S000005D000
000fdc 5faf      	SUBI R26,-LOW(1)
000fdd 93a0 096e 	STS  _Timer2Tick_S000005D000,R26
000fdf 30a4      	CPI  R26,LOW(0x4)
000fe0 f4d9      	BRNE _0x108
000fe1 91e0 096c 	LDS  R30,__dCounter1_S000005D000
000fe3 91a0 0929 	LDS  R26,_dCounter1
000fe5 17ea      	CP   R30,R26
000fe6 f430      	BRSH _0x109
000fe7 91a0 096c 	LDS  R26,__dCounter1_S000005D000
000fe9 91e0 0929 	LDS  R30,_dCounter1
000feb 1bea      	SUB  R30,R26
000fec c008      	RJMP _0x14E
                 _0x109:
000fed 91a0 096c 	LDS  R26,__dCounter1_S000005D000
000fef efef      	LDI  R30,LOW(255)
000ff0 1bea      	SUB  R30,R26
000ff1 91a0 0929 	LDS  R26,_dCounter1
000ff3 0fea      	ADD  R30,R26
000ff4 5fef      	SUBI R30,-LOW(1)
                 _0x14E:
000ff5 93e0 0927 	STS  _dSpeed1,R30
000ff7 91e0 0929 	LDS  R30,_dCounter1
000ff9 93e0 096c 	STS  __dCounter1_S000005D000,R30
000ffb c028      	RJMP _0x10B
                 _0x108:
000ffc 91a0 096e 	LDS  R26,_Timer2Tick_S000005D000
000ffe 30a5      	CPI  R26,LOW(0x5)
000fff f121      	BREQ _0x10D
001000 30a9      	CPI  R26,LOW(0x9)
001001 f4d9      	BRNE _0x10E
001002 91e0 096d 	LDS  R30,__dCounter2_S000005D000
001004 91a0 092a 	LDS  R26,_dCounter2
001006 17ea      	CP   R30,R26
001007 f430      	BRSH _0x10F
001008 91a0 096d 	LDS  R26,__dCounter2_S000005D000
00100a 91e0 092a 	LDS  R30,_dCounter2
00100c 1bea      	SUB  R30,R26
00100d c008      	RJMP _0x14F
                 _0x10F:
00100e 91a0 096d 	LDS  R26,__dCounter2_S000005D000
001010 efef      	LDI  R30,LOW(255)
001011 1bea      	SUB  R30,R26
001012 91a0 092a 	LDS  R26,_dCounter2
001014 0fea      	ADD  R30,R26
001015 5fef      	SUBI R30,-LOW(1)
                 _0x14F:
001016 93e0 0928 	STS  _dSpeed2,R30
001018 91e0 092a 	LDS  R30,_dCounter2
00101a 93e0 096d 	STS  __dCounter2_S000005D000,R30
00101c c007      	RJMP _0x111
                 _0x10E:
00101d 91a0 096e 	LDS  R26,_Timer2Tick_S000005D000
00101f 30aa      	CPI  R26,LOW(0xA)
001020 f018      	BRLO _0x112
001021 e0e0      	LDI  R30,LOW(0)
001022 93e0 096e 	STS  _Timer2Tick_S000005D000,R30
                 _0x112:
                 _0x111:
                 _0x10D:
                 _0x10B:
001024 91e9      	LD   R30,Y+
001025 bfef      	OUT  SREG,R30
001026 91e9      	LD   R30,Y+
001027 91a9      	LD   R26,Y+
001028 9518      	RETI
                 _SystemInit:
001029 e0e0      	LDI  R30,LOW(0)
00102a bbeb      	OUT  0x1B,R30
00102b efef      	LDI  R30,LOW(255)
00102c bbea      	OUT  0x1A,R30
00102d e0e5      	LDI  R30,LOW(5)
00102e bbe8      	OUT  0x18,R30
00102f efe8      	LDI  R30,LOW(248)
001030 bbe7      	OUT  0x17,R30
001031 efef      	LDI  R30,LOW(255)
001032 bbe5      	OUT  0x15,R30
001033 efe0      	LDI  R30,LOW(240)
001034 bbe4      	OUT  0x14,R30
001035 e0e0      	LDI  R30,LOW(0)
001036 bbe2      	OUT  0x12,R30
001037 efe0      	LDI  R30,LOW(240)
001038 bbe1      	OUT  0x11,R30
001039 ece0      	LDI  R30,LOW(192)
00103a b9e3      	OUT  0x3,R30
00103b e3ec      	LDI  R30,LOW(60)
00103c b9e2      	OUT  0x2,R30
00103d e0e0      	LDI  R30,LOW(0)
00103e 93e0 0062 	STS  98,R30
001040 93e0 0061 	STS  97,R30
001042 e1e7      	LDI  R30,LOW(23)
001043 93e0 0065 	STS  101,R30
001045 e0e0      	LDI  R30,LOW(0)
001046 93e0 0064 	STS  100,R30
001048 bfe0      	OUT  0x30,R30
001049 bfe3      	OUT  0x33,R30
00104a bfe2      	OUT  0x32,R30
00104b bfe1      	OUT  0x31,R30
00104c eaea      	LDI  R30,LOW(170)
00104d bdef      	OUT  0x2F,R30
00104e e1e2      	LDI  R30,LOW(18)
00104f bdee      	OUT  0x2E,R30
001050 e0e0      	LDI  R30,LOW(0)
001051 bded      	OUT  0x2D,R30
001052 bdec      	OUT  0x2C,R30
001053 e2e7      	LDI  R30,LOW(39)
001054 bde7      	OUT  0x27,R30
001055 e1e0      	LDI  R30,LOW(16)
001056 bde6      	OUT  0x26,R30
001057 e1e3      	LDI  R30,LOW(19)
001058 bde7      	OUT  0x27,R30
001059 e8e8      	LDI  R30,LOW(136)
00105a bde6      	OUT  0x26,R30
00105b e0e0      	LDI  R30,LOW(0)
00105c bdeb      	OUT  0x2B,R30
00105d bdea      	OUT  0x2A,R30
00105e bde9      	OUT  0x29,R30
00105f bde8      	OUT  0x28,R30
001060 93e0 0079 	STS  121,R30
001062 93e0 0078 	STS  120,R30
001064 e0eb      	LDI  R30,LOW(11)
001065 bde5      	OUT  0x25,R30
001066 e0e0      	LDI  R30,LOW(0)
001067 bde4      	OUT  0x24,R30
001068 efea      	LDI  R30,LOW(250)
001069 bde3      	OUT  0x23,R30
00106a efe2      	LDI  R30,LOW(242)
00106b 93e0 008b 	STS  139,R30
00106d e1e1      	LDI  R30,LOW(17)
00106e 93e0 008a 	STS  138,R30
001070 e0e0      	LDI  R30,LOW(0)
001071 93e0 0089 	STS  137,R30
001073 93e0 0088 	STS  136,R30
001075 e0e1      	LDI  R30,LOW(1)
001076 93e0 0081 	STS  129,R30
001078 e9e0      	LDI  R30,LOW(144)
001079 93e0 0080 	STS  128,R30
00107b e0e0      	LDI  R30,LOW(0)
00107c 93e0 0087 	STS  135,R30
00107e 93e0 0086 	STS  134,R30
001080 93e0 0085 	STS  133,R30
001082 93e0 0084 	STS  132,R30
001084 93e0 0083 	STS  131,R30
001086 ece8      	LDI  R30,LOW(200)
001087 93e0 0082 	STS  130,R30
001089 e0e0      	LDI  R30,LOW(0)
00108a 93e0 006a 	STS  106,R30
00108c e5e0      	LDI  R30,LOW(80)
00108d bfea      	OUT  0x3A,R30
00108e ece0      	LDI  R30,LOW(192)
00108f bfe9      	OUT  0x39,R30
001090 bfe8      	OUT  0x38,R30
001091 eae4      	LDI  R30,LOW(164)
001092 bfe7      	OUT  0x37,R30
001093 e0e2      	LDI  R30,LOW(2)
001094 93e0 007d 	STS  125,R30
001096 e0e0      	LDI  R30,LOW(0)
001097 93e0 009b 	STS  155,R30
001099 e9e8      	LDI  R30,LOW(152)
00109a 93e0 009a 	STS  154,R30
00109c e0e6      	LDI  R30,LOW(6)
00109d 93e0 009d 	STS  157,R30
00109f e0e0      	LDI  R30,LOW(0)
0010a0 93e0 0098 	STS  152,R30
0010a2 e6e7      	LDI  R30,LOW(103)
0010a3 93e0 0099 	STS  153,R30
0010a5 e8e0      	LDI  R30,LOW(128)
0010a6 b9e8      	OUT  0x8,R30
0010a7 e0e0      	LDI  R30,LOW(0)
0010a8 bde0      	OUT  0x20,R30
0010a9 940e 02de 	CALL _LCD_Init
0010ab 940e 0293 	CALL _Stop
0010ad e5aa      	LDI  R26,LOW(90)
0010ae 940e 0209 	CALL _SudutServo1
0010b0 e5aa      	LDI  R26,LOW(90)
0010b1 940e 020f 	CALL _SudutServo2
0010b3 e5aa      	LDI  R26,LOW(90)
0010b4 940e 0215 	CALL _SudutServo3
0010b6 e5aa      	LDI  R26,LOW(90)
0010b7 940e 021b 	CALL _SudutServo4
0010b9 e5aa      	LDI  R26,LOW(90)
0010ba 940e 0203 	CALL _SudutServo5
0010bc e5aa      	LDI  R26,LOW(90)
0010bd 940e 023e 	CALL _SudutServo6
0010bf e5aa      	LDI  R26,LOW(90)
0010c0 940e 0245 	CALL _SudutServo7
0010c2 e5aa      	LDI  R26,LOW(90)
0010c3 940e 024c 	CALL _SudutServo8
0010c5 94f8      	cli
0010c6 e0e0      	LDI  R30,LOW(0)
0010c7 93ea      	ST   -Y,R30
                +
0010c8 e8a2     +LDI R26 , LOW ( 2 * _0x0 + ( 238 ) )
0010c9 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 238 ) )
0010ca e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 238 ) )
0010cb e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 238 ) )
                 	__POINTD2FN _0x0,238
0010cc 940e 0364 	CALL _LCD_TulisKiri
0010ce e0e1      	LDI  R30,LOW(1)
0010cf 93ea      	ST   -Y,R30
                +
0010d0 e9a3     +LDI R26 , LOW ( 2 * _0x0 + ( 255 ) )
0010d1 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 255 ) )
0010d2 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 255 ) )
0010d3 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 255 ) )
                 	__POINTD2FN _0x0,255
0010d4 940e 0364 	CALL _LCD_TulisKiri
0010d6 940e 0487 	CALL _I2C_Init
0010d8 e6a4      	LDI  R26,LOW(100)
0010d9 e0b0      	LDI  R27,0
0010da 940e 1362 	CALL _delay_ms
0010dc 940e 0834 	CALL _MPU6050_Init
0010de 9468      	SET
0010df f822      	BLD  R2,2
0010e0 940e 0823 	CALL _MPU6050_TestConnection
0010e2 30e0      	CPI  R30,0
0010e3 f099      	BREQ _0x113
0010e4 e0e0      	LDI  R30,LOW(0)
0010e5 93ea      	ST   -Y,R30
                +
0010e6 eaa4     +LDI R26 , LOW ( 2 * _0x0 + ( 272 ) )
0010e7 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 272 ) )
0010e8 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 272 ) )
0010e9 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 272 ) )
                 	__POINTD2FN _0x0,272
0010ea 940e 0364 	CALL _LCD_TulisKiri
0010ec e0e1      	LDI  R30,LOW(1)
0010ed 93ea      	ST   -Y,R30
                +
0010ee eba5     +LDI R26 , LOW ( 2 * _0x0 + ( 289 ) )
0010ef e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 289 ) )
0010f0 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 289 ) )
0010f1 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 289 ) )
                 	__POINTD2FN _0x0,289
0010f2 940e 0364 	CALL _LCD_TulisKiri
0010f4 940e 059c 	CALL _Nada1
0010f6 c012      	RJMP _0x114
                 _0x113:
0010f7 e0e0      	LDI  R30,LOW(0)
0010f8 93ea      	ST   -Y,R30
                +
0010f9 eca6     +LDI R26 , LOW ( 2 * _0x0 + ( 306 ) )
0010fa e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 306 ) )
0010fb e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 306 ) )
0010fc e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 306 ) )
                 	__POINTD2FN _0x0,306
0010fd 940e 0364 	CALL _LCD_TulisKiri
0010ff e0e1      	LDI  R30,LOW(1)
001100 93ea      	ST   -Y,R30
                +
001101 eda7     +LDI R26 , LOW ( 2 * _0x0 + ( 323 ) )
001102 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 323 ) )
001103 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 323 ) )
001104 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 323 ) )
                 	__POINTD2FN _0x0,323
001105 940e 0364 	CALL _LCD_TulisKiri
001107 940e 05b0 	CALL _Nada2
                 _0x114:
001109 e2a0      	LDI  R26,LOW(800)
00110a e0b3      	LDI  R27,HIGH(800)
00110b 940e 1362 	CALL _delay_ms
00110d 940e 0be6 	CALL _KalibrasiGyroScope
00110f e0e1      	LDI  R30,LOW(1)
001110 93ea      	ST   -Y,R30
                +
001111 eea8     +LDI R26 , LOW ( 2 * _0x0 + ( 340 ) )
001112 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 340 ) )
001113 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 340 ) )
001114 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 340 ) )
                 	__POINTD2FN _0x0,340
001115 940e 0328 	CALL _LCD_TulisF
001117 940e 05dd 	CALL _Nada3
001119 940e 0c9d 	CALL _HMC5883L_Init
00111b 940e 0cd2 	CALL _HMC5883L_TestConnection
00111d 30e0      	CPI  R30,0
00111e f039      	BREQ _0x115
00111f e0e0      	LDI  R30,LOW(0)
001120 93ea      	ST   -Y,R30
                +
001121 efa9     +LDI R26 , LOW ( 2 * _0x0 + ( 357 ) )
001122 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 357 ) )
001123 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 357 ) )
001124 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 357 ) )
                 	__POINTD2FN _0x0,357
001125 c006      	RJMP _0x150
                 _0x115:
001126 e0e0      	LDI  R30,LOW(0)
001127 93ea      	ST   -Y,R30
                +
001128 e1ab     +LDI R26 , LOW ( 2 * _0x0 + ( 391 ) )
001129 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 391 ) )
00112a e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 391 ) )
00112b e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 391 ) )
                 	__POINTD2FN _0x0,391
                 _0x150:
00112c 940e 0364 	CALL _LCD_TulisKiri
00112e e0e1      	LDI  R30,LOW(1)
00112f 93ea      	ST   -Y,R30
                +
001130 e0aa     +LDI R26 , LOW ( 2 * _0x0 + ( 374 ) )
001131 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 374 ) )
001132 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 374 ) )
001133 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 374 ) )
                 	__POINTD2FN _0x0,374
001134 940e 03a7 	CALL _LCD_TulisTengah
001136 940e 059c 	CALL _Nada1
001138 9478      	sei
001139 9478      	sei
00113a 9508      	RET
                 ;
                 ;
                 ;//  --------------  DEKLARASI VARIABEL GLOBAL --------------------------
                 ;
                 ;
                 ;/*
                 ;float  iError=0;
                 ;int KP,KI,KD;
                 ;signed char lError=0;
                 ;
                 ;#pragma used+
                 ;void SetPID(int kp, int ki, int kd){ KP=kp;    KI=ki;  KD=kd;}
                 ;void ResetPID(void){ iError=0; lError=0; }
                 ;
                 ;short int HitungPID(signed char Error)
                 ;{ float PIDTime, U;
                 ;  PIDTime = (float)PIDTick/1000;
                 ;  PIDTick = 0;
                 ;  // Menghitung Nilai Kendali Derivatif
                 ;  U = (float)KD * (float)(Error-lError)/PIDTime;
                 ;  // Menghitung Nilai Integral Error
                 ;  iError += (float)((Error + lError)/2) * PIDTime;
                 ;  // Membatasi Nilai Integral Error
                 ;  if((short int) iError > MaxIntegral) iError = MaxIntegral;
                 ;  else if((signed int) iError < -MaxIntegral) iError = -MaxIntegral;
                 ;  // Menambahkan Nilai Kendali Integral
                 ;  U+= (float)KI * iError;
                 ;  // Menambahkan Nilai Kendali Proporsional
                 ;  U+= (float)KP * (float)Error;
                 ;  lError = Error;
                 ;  LCD_GotoXY(0,0); LCD_Angka3(PIDTime*1000);
                 ;  return ((short int)U);
                 ;}
                 ;
                 ;// ------------------------  Kendali Gerak Robot --------------------------------------------
                 ;    void GerakRobot(short int Speed, short int U)
                 ;    { int PWMKi, PWMKa;
                 ;       // Menghitung Aktuasi Kendali pada Roda Kanan dan Kiri
                 ;      PWMKa = Speed + U;
                 ;      PWMKi = Speed - U;
                 ;      // Menghitung Kecepatan dan arah putaran Motor Roda Kanan
                 ;      if(PWMKa<0)   {PWMKa = -PWMKa; M2_CCW;}
                 ;      else          {M2_CW;}
                 ;      if (PWMKa<MaxSpeed)
                 ;        {   PwmM1H = ByteH(PWMKa);      PwmM1L = ByteL(PWMKa);}
                 ;      else
                 ;        {   PwmM1H = ByteH(MaxSpeed);   PwmM1L = ByteL(MaxSpeed);}
                 ;      // Menghitung Kecepatan dan arah putaran Motor Roda Kiri
                 ;      if(PWMKi<0)   {PWMKi = -PWMKi; M1_CW;}
                 ;      else          {M1_CCW;}
                 ;      if (PWMKi<MaxSpeed)
                 ;        {   PwmM2H = ByteH(PWMKi);      PwmM2L = ByteL(PWMKi);}
                 ;      else
                 ;        {   PwmM2H = ByteH(MaxSpeed);   PwmM2L = ByteL(MaxSpeed);}
                 ;       //LCD_GotoXY(0,0);    LCD_Angka3(PWMKa);
                 ;       //LCD_Data(' ');      LCD_Angka3(PWMKi);
                 ;    }
                 ;
                 ;#pragma used-
                 ;
                 ;
                 ;*/
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0055 {   int16_t i,j, counter;
                 _main:
                 ; 0000 0056     unsigned char sensor;
                 ; 0000 0057     SystemInit();
00113b 9721      	SBIW R28,1
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	counter -> R20,R21
                 ;	sensor -> Y+0
00113c deec      	RCALL _SystemInit
                 ; 0000 0058     SetDataMotorPWM(0,0);
00113d e0e0      	LDI  R30,LOW(0)
00113e e0f0      	LDI  R31,HIGH(0)
00113f 93fa      	ST   -Y,R31
001140 93ea      	ST   -Y,R30
001141 e0a0      	LDI  R26,LOW(0)
001142 e0b0      	LDI  R27,0
001143 940e 0258 	CALL _SetDataMotorPWM
                 ; 0000 0059     #if UsePIDmotor==1
                 ; 0000 005A         PIDMotorOn = 0;
                 ; 0000 005B     #endif
                 ; 0000 005C 
                 ; 0000 005D     ImuStart = 0;       // menonaktifkan mode balancing
001145 94e8      	CLT
001146 f823      	BLD  R2,3
                 ; 0000 005E     delay_ms(500);
001147 efa4      	LDI  R26,LOW(500)
001148 e0b1      	LDI  R27,HIGH(500)
001149 940e 1362 	CALL _delay_ms
                 ; 0000 005F 
                 ; 0000 0060     if (PB4==0) KalibrasiHitamPutih(0,pKalibrasiHPR);       // kalibrasi warna hitam dan putih dengan LED merah
00114b 9998      	SBIC 0x13,0
00114c c005      	RJMP _0x117
00114d e0e0      	LDI  R30,LOW(0)
00114e 93ea      	ST   -Y,R30
00114f eca0      	LDI  R26,LOW(192)
001150 940e 06c3 	CALL _KalibrasiHitamPutih
                 ; 0000 0061     LCD_Hapus();
                 _0x117:
001152 940e 0332 	CALL _LCD_Hapus
                 ; 0000 0062 
                 ; 0000 0063     while(PB1)
                 _0x118:
001154 9b9b      	SBIS 0x13,3
001155 c018      	RJMP _0x11A
                 ; 0000 0064     {   LCD_GotoXY(0,0);
001156 e0e0      	LDI  R30,LOW(0)
001157 93ea      	ST   -Y,R30
001158 e0a0      	LDI  R26,LOW(0)
001159 940e 02ff 	CALL _LCD_GotoXY
                 ; 0000 0065         BacaSensor(0,pBacaSensorR);
00115b e0e0      	LDI  R30,LOW(0)
00115c 93ea      	ST   -Y,R30
00115d e4a0      	LDI  R26,LOW(64)
00115e 940e 0683 	CALL _BacaSensor
                 ; 0000 0066         if(BacaSerial1(5000)==pBacaSensorR)
001160 e8a8      	LDI  R26,LOW(5000)
001161 e1b3      	LDI  R27,HIGH(5000)
001162 940e 0642 	CALL _BacaSerial1
001164 34e0      	CPI  R30,LOW(0x40)
001165 f439      	BRNE _0x11B
                 ; 0000 0067         {   LCD_Biner(BacaSerial1(5000));
001166 e8a8      	LDI  R26,LOW(5000)
001167 e1b3      	LDI  R27,HIGH(5000)
001168 940e 0642 	CALL _BacaSerial1
00116a 2fae      	MOV  R26,R30
00116b 940e 0472 	CALL _LCD_Biner
                 ; 0000 0068         }
                 ; 0000 0069     }
                 _0x11B:
00116d cfe6      	RJMP _0x118
                 _0x11A:
                 ; 0000 006A 
                 ; 0000 006B     LCD_Hapus();
00116e 940e 0332 	CALL _LCD_Hapus
                 ; 0000 006C     while(PB2)
                 _0x11C:
001170 9b9a      	SBIS 0x13,2
001171 c044      	RJMP _0x11E
                 ; 0000 006D     {       LCD_GotoXY(0,0);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
001172 e0e0      	LDI  R30,LOW(0)
001173 93ea      	ST   -Y,R30
001174 e0a0      	LDI  R26,LOW(0)
001175 940e 02ff 	CALL _LCD_GotoXY
001177 01d5      	MOVW R26,R10
001178 940e 03e9 	CALL _LCD_Angka4
00117a e2a0      	LDI  R26,LOW(32)
00117b 940e 02c3 	CALL _LCD_Data
                 ; 0000 006E             LCD_GotoXY(6,0);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
00117d e0e6      	LDI  R30,LOW(6)
00117e 93ea      	ST   -Y,R30
00117f e0a0      	LDI  R26,LOW(0)
001180 940e 02ff 	CALL _LCD_GotoXY
001182 01d6      	MOVW R26,R12
001183 940e 03e9 	CALL _LCD_Angka4
001185 e2a0      	LDI  R26,LOW(32)
001186 940e 02c3 	CALL _LCD_Data
                 ; 0000 006F             LCD_GotoXY(0,1);    LCD_uByte(dSpeed1);
001188 e0e0      	LDI  R30,LOW(0)
001189 93ea      	ST   -Y,R30
00118a e0a1      	LDI  R26,LOW(1)
00118b 940e 02ff 	CALL _LCD_GotoXY
00118d 91a0 0927 	LDS  R26,_dSpeed1
00118f 940e 0457 	CALL _LCD_uByte
                 ; 0000 0070             LCD_GotoXY(4,1);    LCD_uByte(dSpeed2);
001191 e0e4      	LDI  R30,LOW(4)
001192 93ea      	ST   -Y,R30
001193 e0a1      	LDI  R26,LOW(1)
001194 940e 02ff 	CALL _LCD_GotoXY
001196 91a0 0928 	LDS  R26,_dSpeed2
001198 940e 0457 	CALL _LCD_uByte
                 ; 0000 0071             LCD_GotoXY(8,1);    LCD_uByte(WaktuEksekusi);
00119a e0e8      	LDI  R30,LOW(8)
00119b 93ea      	ST   -Y,R30
00119c e0a1      	LDI  R26,LOW(1)
00119d 940e 02ff 	CALL _LCD_GotoXY
00119f 91a0 0956 	LDS  R26,_WaktuEksekusi
0011a1 940e 0457 	CALL _LCD_uByte
                 ; 0000 0072             LCD_GotoXY(13,1);   LCD_Angka3(MODE);
0011a3 e0ed      	LDI  R30,LOW(13)
0011a4 93ea      	ST   -Y,R30
0011a5 e0a1      	LDI  R26,LOW(1)
0011a6 940e 02ff 	CALL _LCD_GotoXY
0011a8 91e0 0063 	LDS  R30,99
0011aa 70e7      	ANDI R30,LOW(0x7)
0011ab 2fae      	MOV  R26,R30
0011ac 91e0 0063 	LDS  R30,99
0011ae 71e0      	ANDI R30,LOW(0x10)
0011af 95e6      	LSR  R30
0011b0 2bea      	OR   R30,R26
0011b1 e0f0      	LDI  R31,0
0011b2 01df      	MOVW R26,R30
0011b3 940e 0427 	CALL _LCD_Angka3
                 ; 0000 0073     }
0011b5 cfba      	RJMP _0x11C
                 _0x11E:
                 ; 0000 0074 
                 ; 0000 0075 //    uint8_t TungguTombolKalibrasi(uint8_t Alamat, uint8_t Protokol);
                 ; 0000 0076 //    void PesanKalibrasiBerhasil(void);
                 ; 0000 0077 //    void PesanKalibrasiGagal(void);
                 ; 0000 0078 //    int8_t KalibrasiRGB(uint8_t Alamat);
                 ; 0000 0079 
                 ; 0000 007A     LCD_Hapus();
0011b6 940e 0332 	CALL _LCD_Hapus
                 ; 0000 007B     LCD_TulisF(0,"ModeBalancing ON");
0011b8 e0e0      	LDI  R30,LOW(0)
0011b9 93ea      	ST   -Y,R30
                +
0011ba e2ac     +LDI R26 , LOW ( 2 * _0x0 + ( 408 ) )
0011bb e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 408 ) )
0011bc e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 408 ) )
0011bd e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 408 ) )
                 	__POINTD2FN _0x0,408
0011be 940e 0328 	CALL _LCD_TulisF
                 ; 0000 007C     ImuStart = 1;       // menonaktifkan mode balancing
0011c0 9468      	SET
0011c1 f823      	BLD  R2,3
                 ; 0000 007D 
                 ; 0000 007E     LaguOn = 1;
0011c2 f820      	BLD  R2,0
                 ; 0000 007F 
                 ; 0000 0080     while(PB3)
                 _0x11F:
0011c3 9b99      	SBIS 0x13,1
0011c4 c081      	RJMP _0x121
                 ; 0000 0081     {  LCD_HapusKiri(1);
0011c5 e0a1      	LDI  R26,LOW(1)
0011c6 940e 0335 	CALL _LCD_HapusKiri
                 ; 0000 0082             if(PB3) LCD_TulisKanan(1,"<<<<< Putar Kiri");
0011c8 9b99      	SBIS 0x13,1
0011c9 c008      	RJMP _0x122
0011ca e0e1      	LDI  R30,LOW(1)
0011cb 93ea      	ST   -Y,R30
                +
0011cc e3ad     +LDI R26 , LOW ( 2 * _0x0 + ( 425 ) )
0011cd e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 425 ) )
0011ce e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 425 ) )
0011cf e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 425 ) )
                 	__POINTD2FN _0x0,425
0011d0 940e 0383 	CALL _LCD_TulisKanan
                 ; 0000 0083             for(i=0;i<10;i++)
                 _0x122:
                +
0011d2 e000     +LDI R16 , LOW ( 0 )
0011d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x124:
                +
0011d4 300a     +CPI R16 , LOW ( 10 )
0011d5 e0e0     +LDI R30 , HIGH ( 10 )
0011d6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
0011d7 f494      	BRGE _0x125
                 ; 0000 0084             {   if(!PB3)     break;
0011d8 9b99      	SBIS 0x13,1
0011d9 c010      	RJMP _0x125
                 ; 0000 0085                 TargetSpeedB=0;    SteerB = -120;       delay_ms(100);
0011da e0e0      	LDI  R30,LOW(0)
0011db 93e0 0900 	STS  _TargetSpeedB,R30
0011dd e8e8      	LDI  R30,LOW(65416)
0011de efff      	LDI  R31,HIGH(65416)
0011df 93e0 0901 	STS  _SteerB,R30
0011e1 93f0 0902 	STS  _SteerB+1,R31
0011e3 e6a4      	LDI  R26,LOW(100)
0011e4 e0b0      	LDI  R27,0
0011e5 940e 1362 	CALL _delay_ms
                 ; 0000 0086             }
                +
0011e7 5f0f     +SUBI R16 , LOW ( - 1 )
0011e8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0011e9 cfea      	RJMP _0x124
                 _0x125:
                 ; 0000 0087             if(PB3) TargetSpeedB=0;    SteerB = -80;    delay_ms(100);
0011ea 9b99      	SBIS 0x13,1
0011eb c003      	RJMP _0x127
0011ec e0e0      	LDI  R30,LOW(0)
0011ed 93e0 0900 	STS  _TargetSpeedB,R30
                 _0x127:
0011ef ebe0      	LDI  R30,LOW(65456)
0011f0 efff      	LDI  R31,HIGH(65456)
0011f1 93e0 0901 	STS  _SteerB,R30
0011f3 93f0 0902 	STS  _SteerB+1,R31
0011f5 e6a4      	LDI  R26,LOW(100)
0011f6 e0b0      	LDI  R27,0
0011f7 940e 1362 	CALL _delay_ms
                 ; 0000 0088             if(PB3) TargetSpeedB=0;    SteerB = 20;
0011f9 9b99      	SBIS 0x13,1
0011fa c003      	RJMP _0x128
0011fb e0e0      	LDI  R30,LOW(0)
0011fc 93e0 0900 	STS  _TargetSpeedB,R30
                 _0x128:
0011fe e1e4      	LDI  R30,LOW(20)
0011ff e0f0      	LDI  R31,HIGH(20)
001200 93e0 0901 	STS  _SteerB,R30
001202 93f0 0902 	STS  _SteerB+1,R31
                 ; 0000 0089             if(PB3) LCD_HapusKanan(1);
001204 9b99      	SBIS 0x13,1
001205 c003      	RJMP _0x129
001206 e0a1      	LDI  R26,LOW(1)
001207 940e 0348 	CALL _LCD_HapusKanan
                 ; 0000 008A             if(PB3) LCD_TulisKiri(1,">>>> Putar Kanan");
                 _0x129:
001209 9b99      	SBIS 0x13,1
00120a c008      	RJMP _0x12A
00120b e0e1      	LDI  R30,LOW(1)
00120c 93ea      	ST   -Y,R30
                +
00120d e4ae     +LDI R26 , LOW ( 2 * _0x0 + ( 442 ) )
00120e e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 442 ) )
00120f e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 442 ) )
001210 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 442 ) )
                 	__POINTD2FN _0x0,442
001211 940e 0364 	CALL _LCD_TulisKiri
                 ; 0000 008B             for(i=0;i<10;i++)
                 _0x12A:
                +
001213 e000     +LDI R16 , LOW ( 0 )
001214 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x12C:
                +
001215 300a     +CPI R16 , LOW ( 10 )
001216 e0e0     +LDI R30 , HIGH ( 10 )
001217 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
001218 f494      	BRGE _0x12D
                 ; 0000 008C             {   if(!PB3)     break;
001219 9b99      	SBIS 0x13,1
00121a c010      	RJMP _0x12D
                 ; 0000 008D                 TargetSpeedB=0;    SteerB = 120;       delay_ms(100);
00121b e0e0      	LDI  R30,LOW(0)
00121c 93e0 0900 	STS  _TargetSpeedB,R30
00121e e7e8      	LDI  R30,LOW(120)
00121f e0f0      	LDI  R31,HIGH(120)
001220 93e0 0901 	STS  _SteerB,R30
001222 93f0 0902 	STS  _SteerB+1,R31
001224 e6a4      	LDI  R26,LOW(100)
001225 e0b0      	LDI  R27,0
001226 940e 1362 	CALL _delay_ms
                 ; 0000 008E             }
                +
001228 5f0f     +SUBI R16 , LOW ( - 1 )
001229 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00122a cfea      	RJMP _0x12C
                 _0x12D:
                 ; 0000 008F             if(PB3) TargetSpeedB=0;    SteerB = 80;    delay_ms(100);
00122b 9b99      	SBIS 0x13,1
00122c c003      	RJMP _0x12F
00122d e0e0      	LDI  R30,LOW(0)
00122e 93e0 0900 	STS  _TargetSpeedB,R30
                 _0x12F:
001230 e5e0      	LDI  R30,LOW(80)
001231 e0f0      	LDI  R31,HIGH(80)
001232 93e0 0901 	STS  _SteerB,R30
001234 93f0 0902 	STS  _SteerB+1,R31
001236 e6a4      	LDI  R26,LOW(100)
001237 e0b0      	LDI  R27,0
001238 940e 1362 	CALL _delay_ms
                 ; 0000 0090             if(PB3) TargetSpeedB=0;    SteerB = -20;
00123a 9b99      	SBIS 0x13,1
00123b c003      	RJMP _0x130
00123c e0e0      	LDI  R30,LOW(0)
00123d 93e0 0900 	STS  _TargetSpeedB,R30
                 _0x130:
00123f eeec      	LDI  R30,LOW(65516)
001240 efff      	LDI  R31,HIGH(65516)
001241 93e0 0901 	STS  _SteerB,R30
001243 93f0 0902 	STS  _SteerB+1,R31
                 ; 0000 0091     }
001245 cf7d      	RJMP _0x11F
                 _0x121:
                 ; 0000 0092 
                 ; 0000 0093 
                 ; 0000 0094     LCD_Hapus();
001246 940e 0332 	CALL _LCD_Hapus
                 ; 0000 0095     LCD_TulisF(0,"BalanTracer Mode");
001248 e0e0      	LDI  R30,LOW(0)
001249 93ea      	ST   -Y,R30
                +
00124a e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 459 ) )
00124b e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 459 ) )
00124c e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 459 ) )
00124d e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 459 ) )
                 	__POINTD2FN _0x0,459
00124e 940e 0328 	CALL _LCD_TulisF
                 ; 0000 0096     ImuStart = 1;       // menonaktifkan mode balancing
001250 9468      	SET
001251 f823      	BLD  R2,3
                 ; 0000 0097     TargetSpeedB=-5;    SteerB = 40;
001252 efeb      	LDI  R30,LOW(251)
001253 93e0 0900 	STS  _TargetSpeedB,R30
001255 e2e8      	LDI  R30,LOW(40)
001256 e0f0      	LDI  R31,HIGH(40)
001257 93e0 0901 	STS  _SteerB,R30
001259 93f0 0902 	STS  _SteerB+1,R31
                 ; 0000 0098     while(PB4)
                 _0x131:
00125b 9b98      	SBIS 0x13,0
00125c c05f      	RJMP _0x133
                 ; 0000 0099     {  BacaSensor(0,pBacaSensorR);
00125d e0e0      	LDI  R30,LOW(0)
00125e 93ea      	ST   -Y,R30
00125f e4a0      	LDI  R26,LOW(64)
001260 940e 0683 	CALL _BacaSensor
                 ; 0000 009A        if(BacaSerial1(5000)==pBacaSensorR)
001262 e8a8      	LDI  R26,LOW(5000)
001263 e1b3      	LDI  R27,HIGH(5000)
001264 940e 0642 	CALL _BacaSerial1
001266 34e0      	CPI  R30,LOW(0x40)
001267 f011      	BREQ PC+3
001268 940c 12bb 	JMP _0x134
                 ; 0000 009B        {    LCD_GotoXY(0,1);
00126a e0e0      	LDI  R30,LOW(0)
00126b 93ea      	ST   -Y,R30
00126c e0a1      	LDI  R26,LOW(1)
00126d 940e 02ff 	CALL _LCD_GotoXY
                 ; 0000 009C             sensor = BacaSerial1(5000);
00126f e8a8      	LDI  R26,LOW(5000)
001270 e1b3      	LDI  R27,HIGH(5000)
001271 940e 0642 	CALL _BacaSerial1
001273 83e8      	ST   Y,R30
                 ; 0000 009D             LCD_Biner(sensor);
001274 81a8      	LD   R26,Y
001275 940e 0472 	CALL _LCD_Biner
                 ; 0000 009E             switch(sensor)
001277 81e8      	LD   R30,Y
                 ; 0000 009F             {   case 0B01111111: TargetSpeedB=-1;    SteerB = -50; break;
001278 37ef      	CPI  R30,LOW(0x7F)
001279 f431      	BRNE _0x138
00127a efef      	LDI  R30,LOW(255)
00127b 93e0 0900 	STS  _TargetSpeedB,R30
00127d ecee      	LDI  R30,LOW(65486)
00127e efff      	LDI  R31,HIGH(65486)
00127f c037      	RJMP _0x151
                 ; 0000 00A0                 case 0B10111111: TargetSpeedB=-1;    SteerB = -30; break;
                 _0x138:
001280 3bef      	CPI  R30,LOW(0xBF)
001281 f431      	BRNE _0x139
001282 efef      	LDI  R30,LOW(255)
001283 93e0 0900 	STS  _TargetSpeedB,R30
001285 eee2      	LDI  R30,LOW(65506)
001286 efff      	LDI  R31,HIGH(65506)
001287 c02f      	RJMP _0x151
                 ; 0000 00A1                 case 0B11011111: TargetSpeedB=-3;    SteerB = -20; break;
                 _0x139:
001288 3def      	CPI  R30,LOW(0xDF)
001289 f431      	BRNE _0x13A
00128a efed      	LDI  R30,LOW(253)
00128b 93e0 0900 	STS  _TargetSpeedB,R30
00128d eeec      	LDI  R30,LOW(65516)
00128e efff      	LDI  R31,HIGH(65516)
00128f c027      	RJMP _0x151
                 ; 0000 00A2                 case 0B11101111: TargetSpeedB=-3;    SteerB = -10; break;
                 _0x13A:
001290 3eef      	CPI  R30,LOW(0xEF)
001291 f431      	BRNE _0x13B
001292 efed      	LDI  R30,LOW(253)
001293 93e0 0900 	STS  _TargetSpeedB,R30
001295 efe6      	LDI  R30,LOW(65526)
001296 efff      	LDI  R31,HIGH(65526)
001297 c01f      	RJMP _0x151
                 ; 0000 00A3                 case 0B11110111: TargetSpeedB=-3;    SteerB = 10; break;
                 _0x13B:
001298 3fe7      	CPI  R30,LOW(0xF7)
001299 f431      	BRNE _0x13C
00129a efed      	LDI  R30,LOW(253)
00129b 93e0 0900 	STS  _TargetSpeedB,R30
00129d e0ea      	LDI  R30,LOW(10)
00129e e0f0      	LDI  R31,HIGH(10)
00129f c017      	RJMP _0x151
                 ; 0000 00A4                 case 0B11111011: TargetSpeedB=-3;    SteerB = 20; break;
                 _0x13C:
0012a0 3feb      	CPI  R30,LOW(0xFB)
0012a1 f431      	BRNE _0x13D
0012a2 efed      	LDI  R30,LOW(253)
0012a3 93e0 0900 	STS  _TargetSpeedB,R30
0012a5 e1e4      	LDI  R30,LOW(20)
0012a6 e0f0      	LDI  R31,HIGH(20)
0012a7 c00f      	RJMP _0x151
                 ; 0000 00A5                 case 0B11111101: TargetSpeedB=-1;    SteerB = 30; break;
                 _0x13D:
0012a8 3fed      	CPI  R30,LOW(0xFD)
0012a9 f431      	BRNE _0x13E
0012aa efef      	LDI  R30,LOW(255)
0012ab 93e0 0900 	STS  _TargetSpeedB,R30
0012ad e1ee      	LDI  R30,LOW(30)
0012ae e0f0      	LDI  R31,HIGH(30)
0012af c007      	RJMP _0x151
                 ; 0000 00A6                 case 0B11111110: TargetSpeedB=-1;    SteerB = 50; break;
                 _0x13E:
0012b0 3fee      	CPI  R30,LOW(0xFE)
0012b1 f449      	BRNE _0x137
0012b2 efef      	LDI  R30,LOW(255)
0012b3 93e0 0900 	STS  _TargetSpeedB,R30
0012b5 e3e2      	LDI  R30,LOW(50)
0012b6 e0f0      	LDI  R31,HIGH(50)
                 _0x151:
0012b7 93e0 0901 	STS  _SteerB,R30
0012b9 93f0 0902 	STS  _SteerB+1,R31
                 ; 0000 00A7             }
                 _0x137:
                 ; 0000 00A8 
                 ; 0000 00A9 
                 ; 0000 00AA        }
                 ; 0000 00AB     }
                 _0x134:
0012bb cf9f      	RJMP _0x131
                 _0x133:
                 ; 0000 00AC 
                 ; 0000 00AD     /*
                 ; 0000 00AE     while(1)
                 ; 0000 00AF     {   TargetSpeedB=0;    SteerB = 0;
                 ; 0000 00B0         if ((MODE)==15)
                 ; 0000 00B1         {
                 ; 0000 00B2             #if ModeBalancing == 1
                 ; 0000 00B3             LCD_TulisF(0,"ModeBalancing ON");
                 ; 0000 00B4             SudutServo1(0);     SudutServo2(0);     SudutServo3(0);     SudutServo4(0);
                 ; 0000 00B5             SudutServo5(0);     SudutServo6(0);     SudutServo7(0);     SudutServo8(0);
                 ; 0000 00B6             TargetSpeedB=0;    SteerB = -120;       delay_ms(1000);
                 ; 0000 00B7             TargetSpeedB=0;    SteerB = -40;       delay_ms(100);
                 ; 0000 00B8             TargetSpeedB=0;    SteerB = 20;
                 ; 0000 00B9             LCD_HapusKanan(1);
                 ; 0000 00BA             LCD_TulisKiri(1,">>>> Putar Kanan");
                 ; 0000 00BB             SudutServo1(180);     SudutServo2(180);     SudutServo3(180);     SudutServo4(180);
                 ; 0000 00BC             SudutServo5(180);     SudutServo6(180);     SudutServo7(180);     SudutServo8(180);
                 ; 0000 00BD             TargetSpeedB=0;    SteerB = 120;        delay_ms(1000);
                 ; 0000 00BE             TargetSpeedB=0;    SteerB = 40;       delay_ms(100);
                 ; 0000 00BF             TargetSpeedB=0;    SteerB = -20;
                 ; 0000 00C0             LCD_HapusKiri(1);
                 ; 0000 00C1             LCD_TulisKanan(1,"<<<<< Putar Kiri");
                 ; 0000 00C2             #endif
                 ; 0000 00C3         }
                 ; 0000 00C4         else if ((MODE)==14)
                 ; 0000 00C5         {   LCD_TulisF(0,"Mode Walking ON.");
                 ; 0000 00C6             LCD_TulisF(1,"MKI Depan Mundur");
                 ; 0000 00C7             for (i=135,j=70;i>70;i--,j++)
                 ; 0000 00C8             {   SudutServo1(90);         SudutServo2(j);
                 ; 0000 00C9                 SudutServo3(135);        SudutServo4(j);
                 ; 0000 00CA                 SudutServo5(135);        SudutServo6(i);
                 ; 0000 00CB                 SudutServo7(90);         SudutServo8(i);
                 ; 0000 00CC                 delay_ms(5);
                 ; 0000 00CD             }
                 ; 0000 00CE             //step kanan depan  mundur
                 ; 0000 00CF             LCD_TulisF(1,"MKA Depan Mundur");
                 ; 0000 00D0             for (i=70,j=135;i<135;j--,i++)
                 ; 0000 00D1             {   SudutServo1(45);         SudutServo2(j);
                 ; 0000 00D2                 SudutServo3(90);         SudutServo4(j);
                 ; 0000 00D3                 SudutServo5(90);         SudutServo6(i);
                 ; 0000 00D4                 SudutServo7(45);         SudutServo8(i);
                 ; 0000 00D5                 delay_ms(5);
                 ; 0000 00D6             }
                 ; 0000 00D7         }
                 ; 0000 00D8         else
                 ; 0000 00D9         {   SetDataMotorPWM(100,100);
                 ; 0000 00DA             LCD_GotoXY(0,0);    LCD_Angka4(Enkoder1);
                 ; 0000 00DB             LCD_GotoXY(5,0);    LCD_Angka4(Enkoder2);
                 ; 0000 00DC             LCD_GotoXY(10,0);   LCD_Angka3(MODE);
                 ; 0000 00DD             LCD_GotoXY(0,1);    LCD_uByte(dSpeed1);
                 ; 0000 00DE             LCD_GotoXY(4,1);    LCD_uByte(dSpeed2);
                 ; 0000 00DF             LCD_GotoXY(8,1);    LCD_uByte(WaktuEksekusi);
                 ; 0000 00E0 
                 ; 0000 00E1         }
                 ; 0000 00E2         LED1 = ~PB1;
                 ; 0000 00E3         LED2 = ~PB2;
                 ; 0000 00E4         LED3 = ~PB3;
                 ; 0000 00E5         LED4 = ~PB4;
                 ; 0000 00E6 
                 ; 0000 00E7 
                 ; 0000 00E8 
                 ; 0000 00E9         //SetDataMotorPID(KalmanRoll/5,KalmanPitch/5);
                 ; 0000 00EA         if(MODE1)
                 ; 0000 00EB         {
                 ; 0000 00EC             LCD_GotoXY(0,0);    LCD_Angka4((int)(Roll));
                 ; 0000 00ED             LCD_GotoXY(6,0);    LCD_Angka4((int)(Pitch));
                 ; 0000 00EE             LCD_GotoXY(0,1);    LCD_Angka4((int)(Yaw));
                 ; 0000 00EF         }
                 ; 0000 00F0         else
                 ; 0000 00F1         {   LCD_GotoXY(0,0);    LCD_Angka4(Gx);
                 ; 0000 00F2             LCD_GotoXY(8,0);    LCD_Angka4(Gy);
                 ; 0000 00F3             LCD_GotoXY(0,1);    LCD_Angka4(Gz);
                 ; 0000 00F4         }
                 ; 0000 00F5         LCD_GotoXY(6,1);    LCD_uByte(WaktuEksekusi);
                 ; 0000 00F6         LCD_GotoXY(12,0);   LCD_Angka4(dCounter1);
                 ; 0000 00F7         LCD_GotoXY(12,1);   LCD_Angka4(dCounter2);
                 ; 0000 00F8 
                 ; 0000 00F9         delay_ms(10);
                 ; 0000 00FA 
                 ; 0000 00FB     };
                 ; 0000 00FC 
                 ; 0000 00FD     //dServo1 = 20;
                 ; 0000 00FE     //dServo2 = 80;
                 ; 0000 00FF     /*SudutServo1(0);
                 ; 0000 0100     SudutServo2(45);
                 ; 0000 0101     SudutServo3(90);
                 ; 0000 0102     SudutServo4(135);
                 ; 0000 0103     SudutServo5(180);
                 ; 0000 0104     SudutServo6(180);
                 ; 0000 0105     SudutServo7(0);
                 ; 0000 0106     SudutServo8(90);  */
                 ; 0000 0107     /*LCD_GotoXY(0,0);    LCD_Angka3(dServo1);
                 ; 0000 0108     LCD_GotoXY(4,0);    LCD_Angka3(dServo2);
                 ; 0000 0109     LCD_GotoXY(8,0);    LCD_Angka3(dServo3);
                 ; 0000 010A     LCD_GotoXY(12,0);   LCD_Angka3(dServo4);
                 ; 0000 010B     LCD_GotoXY(0,1);    LCD_Angka3(dServo5);
                 ; 0000 010C     LCD_GotoXY(4,1);    LCD_Angka4(dServo6);
                 ; 0000 010D     LCD_GotoXY(8,1);    LCD_Angka4(dServo7);
                 ; 0000 010E     LCD_GotoXY(12,1);   LCD_Angka4(BacadServo8);
                 ; 0000 010F     */
                 ; 0000 0110 
                 ; 0000 0111     //Nada1();
                 ; 0000 0112 
                 ; 0000 0113     /*
                 ; 0000 0114     while (1)
                 ; 0000 0115       {
                 ; 0000 0116       // Place your code here
                 ; 0000 0117 
                 ; 0000 0118          LCD_BackLight = 1;
                 ; 0000 0119          //if (!PB3) KalibrasiRGB(0);
                 ; 0000 011A          if (!PB1) Nada1();
                 ; 0000 011B          if (!PB2) Nada2();
                 ; 0000 011C          if (!PB3) Nada3();
                 ; 0000 011D          if (!PB4) Nada4();
                 ; 0000 011E 
                 ; 0000 011F          i = SysTick;
                 ; 0000 0120          do{    BacaSensor(0,pBacaSensorRGB);//  putchar1(pBacaSensorRGB);
                 ; 0000 0121          }  while(BacaSerial1(5000)!=pBacaSensorRGB);
                 ; 0000 0122          r = BacaSerial1(5000);
                 ; 0000 0123          g = BacaSerial1(5000);
                 ; 0000 0124          b = BacaSerial1(5000);
                 ; 0000 0125          if(SysTick>i)    i = SysTick - i;
                 ; 0000 0126          else             i = 0xFF - i + SysTick + 1;
                 ; 0000 0127 
                 ; 0000 0128          if (FlagSerial)
                 ; 0000 0129          {  LCD_GotoXY(0,0);
                 ; 0000 012A             LCD_uByte(r);  LCD_Data(' ');
                 ; 0000 012B             LCD_uByte(g);  LCD_Data(' ');
                 ; 0000 012C             LCD_uByte(b);  LCD_Data(' ');
                 ; 0000 012D          }
                 ; 0000 012E          else
                 ; 0000 012F          {  LCD_TulisF(0, "TimeOut"); }
                 ; 0000 0130          LCD_GotoXY(0,1);
                 ; 0000 0131          LCD_uByte(i);
                 ; 0000 0132 
                 ; 0000 0133          LCD_Data(' ');
                 ; 0000 0134          LCD_sByte(getchar1());
                 ; 0000 0135          LCD_Data(' ');
                 ; 0000 0136          LCD_sByte(getchar1());
                 ; 0000 0137          */
                 ; 0000 0138 
                 ; 0000 0139 
                 ; 0000 013A         //Stop();
                 ; 0000 013B        /* SetDataMotorPWM(300,300);
                 ; 0000 013C         for(i=0;i<1000;i++)
                 ; 0000 013D         {   //PIDTick=0; while(PIDTick<10);
                 ; 0000 013E             //PIDmotor();
                 ; 0000 013F             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
                 ; 0000 0140             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
                 ; 0000 0141             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
                 ; 0000 0142             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
                 ; 0000 0143         }
                 ; 0000 0144         SetDataMotorPWM(100,100);
                 ; 0000 0145         for(i=0;i<1000;i++)
                 ; 0000 0146         {   //PIDTick=0; while(PIDTick<10);
                 ; 0000 0147             //PIDmotor();
                 ; 0000 0148             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
                 ; 0000 0149             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
                 ; 0000 014A             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
                 ; 0000 014B             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
                 ; 0000 014C         }
                 ; 0000 014D         SetDataMotorPWM(0,0);
                 ; 0000 014E         for(i=0;i<500;i++)
                 ; 0000 014F         {   //PIDTick=0; while(PIDTick<10);
                 ; 0000 0150             //PIDmotor();
                 ; 0000 0151             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
                 ; 0000 0152             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
                 ; 0000 0153             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
                 ; 0000 0154             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
                 ; 0000 0155         }
                 ; 0000 0156         SetDataMotorPID(-10,-10);
                 ; 0000 0157         for(i=0;i<1000;i++)
                 ; 0000 0158         {   //PIDTick=0; while(PIDTick<10);
                 ; 0000 0159             //PIDmotor();
                 ; 0000 015A             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
                 ; 0000 015B             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
                 ; 0000 015C             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
                 ; 0000 015D             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
                 ; 0000 015E         }
                 ; 0000 015F         SetDataMotorPID(-3,-3);
                 ; 0000 0160         for(i=0;i<1000;i++)
                 ; 0000 0161         {   //PIDTick=0; while(PIDTick<10);
                 ; 0000 0162             //PIDmotor();
                 ; 0000 0163             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
                 ; 0000 0164             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
                 ; 0000 0165             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
                 ; 0000 0166             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
                 ; 0000 0167         }
                 ; 0000 0168         SetDataMotorPID(0,0);
                 ; 0000 0169         for(i=0;i<500;i++)
                 ; 0000 016A         {   //PIDTick=0; while(PIDTick<10);
                 ; 0000 016B             //PIDmotor();
                 ; 0000 016C             LCD_GotoXY(0,0);  LCD_Angka4(Enkoder2);
                 ; 0000 016D             LCD_Data(' ');    LCD_sByte(Error2);    LCD_Data(' ');
                 ; 0000 016E             LCD_GotoXY(0,1);  LCD_Angka4(Enkoder1);
                 ; 0000 016F             LCD_Data(' ');    LCD_sByte(Error1);    LCD_Data(' ');
                 ; 0000 0170         }
                 ; 0000 0171 
                 ; 0000 0172   } */
                 ; 0000 0173 }
0012bc 9621      	ADIW R28,1
                 _0x140:
0012bd cfff      	RJMP _0x140
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _xatan:
0012be 940e 1612 	CALL __PUTPARD2
0012c0 9724      	SBIW R28,4
                +
0012c1 81ec     +LDD R30 , Y + 4
0012c2 81fd     +LDD R31 , Y + 4 + 1
0012c3 816e     +LDD R22 , Y + 4 + 2
0012c4 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0012c5 81ac     +LDD R26 , Y + 4
0012c6 81bd     +LDD R27 , Y + 4 + 1
0012c7 818e     +LDD R24 , Y + 4 + 2
0012c8 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0012c9 940e 1462 	CALL __MULF12
0012cb 940e 1608 	CALL __PUTD1S0
                +
0012cd e6a5     +LDI R26 , LOW ( 0x40CBD065 )
0012ce edb0     +LDI R27 , HIGH ( 0x40CBD065 )
0012cf ec8b     +LDI R24 , BYTE3 ( 0x40CBD065 )
0012d0 e490     +LDI R25 , BYTE4 ( 0x40CBD065 )
                 	__GETD2N 0x40CBD065
0012d1 940e 1462 	CALL __MULF12
                +
0012d3 e4ae     +LDI R26 , LOW ( 0x414A8F4E )
0012d4 e8bf     +LDI R27 , HIGH ( 0x414A8F4E )
0012d5 e48a     +LDI R24 , BYTE3 ( 0x414A8F4E )
0012d6 e491     +LDI R25 , BYTE4 ( 0x414A8F4E )
                 	__GETD2N 0x414A8F4E
0012d7 940e 1412 	CALL __ADDF12
                +
0012d9 81ac     +LDD R26 , Y + 4
0012da 81bd     +LDD R27 , Y + 4 + 1
0012db 818e     +LDD R24 , Y + 4 + 2
0012dc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0012dd 940e 1462 	CALL __MULF12
0012df 937f      	PUSH R23
0012e0 936f      	PUSH R22
0012e1 93ff      	PUSH R31
0012e2 93ef      	PUSH R30
0012e3 940e 15fe 	CALL __GETD1S0
                +
0012e5 e0a0     +LDI R26 , LOW ( 0x41296D00 )
0012e6 e6bd     +LDI R27 , HIGH ( 0x41296D00 )
0012e7 e289     +LDI R24 , BYTE3 ( 0x41296D00 )
0012e8 e491     +LDI R25 , BYTE4 ( 0x41296D00 )
                 	__GETD2N 0x41296D00
0012e9 940e 1412 	CALL __ADDF12
0012eb 940e 1603 	CALL __GETD2S0
0012ed 940e 1462 	CALL __MULF12
                +
0012ef e4ae     +LDI R26 , LOW ( 0x414A8F4E )
0012f0 e8bf     +LDI R27 , HIGH ( 0x414A8F4E )
0012f1 e48a     +LDI R24 , BYTE3 ( 0x414A8F4E )
0012f2 e491     +LDI R25 , BYTE4 ( 0x414A8F4E )
                 	__GETD2N 0x414A8F4E
0012f3 940e 1412 	CALL __ADDF12
0012f5 91af      	POP  R26
0012f6 91bf      	POP  R27
0012f7 918f      	POP  R24
0012f8 919f      	POP  R25
0012f9 940e 14b0 	CALL __DIVF21
0012fb 9628      	ADIW R28,8
0012fc 9508      	RET
                 _yatan:
0012fd 940e 1612 	CALL __PUTPARD2
0012ff 940e 1603 	CALL __GETD2S0
                +
001301 eced     +LDI R30 , LOW ( 0x3ED413CD )
001302 e1f3     +LDI R31 , HIGH ( 0x3ED413CD )
001303 ed64     +LDI R22 , BYTE3 ( 0x3ED413CD )
001304 e37e     +LDI R23 , BYTE4 ( 0x3ED413CD )
                 	__GETD1N 0x3ED413CD
001305 940e 14f5 	CALL __CMPF12
001307 f410      	BRSH _0x2020020
001308 dfb5      	RCALL _xatan
001309 c056      	RJMP _0x20A0001
                 _0x2020020:
00130a 940e 1603 	CALL __GETD2S0
                +
00130c e7ea     +LDI R30 , LOW ( 0x401A827A )
00130d e8f2     +LDI R31 , HIGH ( 0x401A827A )
00130e e16a     +LDI R22 , BYTE3 ( 0x401A827A )
00130f e470     +LDI R23 , BYTE4 ( 0x401A827A )
                 	__GETD1N 0x401A827A
001310 940e 14f5 	CALL __CMPF12
001312 f009      	BREQ PC+2
001313 f410      	BRCC PC+3
001314 940c 132a 	JMP  _0x2020021
001316 940e 15fe 	CALL __GETD1S0
                +
001318 e0a0     +LDI R26 , LOW ( 0x3F800000 )
001319 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00131a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00131b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00131c 940e 14b0 	CALL __DIVF21
00131e 01df      	MOVW R26,R30
00131f 01cb      	MOVW R24,R22
001320 df9d      	RCALL _xatan
                +
001321 edab     +LDI R26 , LOW ( 0x3FC90FDB )
001322 e0bf     +LDI R27 , HIGH ( 0x3FC90FDB )
001323 ec89     +LDI R24 , BYTE3 ( 0x3FC90FDB )
001324 e39f     +LDI R25 , BYTE4 ( 0x3FC90FDB )
                 	__GETD2N 0x3FC90FDB
001325 940e 161c 	CALL __SWAPD12
001327 940e 140b 	CALL __SUBF12
001329 c036      	RJMP _0x20A0001
                 _0x2020021:
00132a 940e 15fe 	CALL __GETD1S0
                +
00132c e0a0     +LDI R26 , LOW ( 0x3F800000 )
00132d e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00132e e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00132f e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001330 940e 140b 	CALL __SUBF12
001332 937f      	PUSH R23
001333 936f      	PUSH R22
001334 93ff      	PUSH R31
001335 93ef      	PUSH R30
001336 940e 15fe 	CALL __GETD1S0
                +
001338 e0a0     +LDI R26 , LOW ( 0x3F800000 )
001339 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00133a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00133b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00133c 940e 1412 	CALL __ADDF12
00133e 91af      	POP  R26
00133f 91bf      	POP  R27
001340 918f      	POP  R24
001341 919f      	POP  R25
001342 940e 14b0 	CALL __DIVF21
001344 01df      	MOVW R26,R30
001345 01cb      	MOVW R24,R22
001346 df77      	RCALL _xatan
                +
001347 edab     +LDI R26 , LOW ( 0x3F490FDB )
001348 e0bf     +LDI R27 , HIGH ( 0x3F490FDB )
001349 e489     +LDI R24 , BYTE3 ( 0x3F490FDB )
00134a e39f     +LDI R25 , BYTE4 ( 0x3F490FDB )
                 	__GETD2N 0x3F490FDB
00134b 940e 1412 	CALL __ADDF12
00134d c012      	RJMP _0x20A0001
                 _atan:
00134e 940e 1612 	CALL __PUTPARD2
001350 81ab      	LDD  R26,Y+3
001351 23aa      	TST  R26
001352 f022      	BRMI _0x202002C
001353 940e 1603 	CALL __GETD2S0
001355 dfa7      	RCALL _yatan
001356 c009      	RJMP _0x20A0001
                 _0x202002C:
001357 940e 15fe 	CALL __GETD1S0
001359 940e 136c 	CALL __ANEGF1
00135b 01df      	MOVW R26,R30
00135c 01cb      	MOVW R24,R22
00135d df9f      	RCALL _yatan
00135e 940e 136c 	CALL __ANEGF1
                 _0x20A0001:
001360 9624      	ADIW R28,4
001361 9508      	RET
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _TargetSpeedB:
000900           	.BYTE 0x1
                 _SteerB:
000901           	.BYTE 0x2
                 _Ax:
000903           	.BYTE 0x2
                 _Ay:
000905           	.BYTE 0x2
                 _Az:
000907           	.BYTE 0x2
                 _Gx:
000909           	.BYTE 0x2
                 _Gy:
00090b           	.BYTE 0x2
                 _Gz:
00090d           	.BYTE 0x2
                 _GxOffset:
00090f           	.BYTE 0x4
                 _GyOffset:
000913           	.BYTE 0x4
                 _GzOffset:
000917           	.BYTE 0x4
                 _Roll:
00091b           	.BYTE 0x4
                 _Pitch:
00091f           	.BYTE 0x4
                 _Yaw:
000923           	.BYTE 0x4
                 _dSpeed1:
000927           	.BYTE 0x1
                 _dSpeed2:
000928           	.BYTE 0x1
                 _dCounter1:
000929           	.BYTE 0x1
                 _dCounter2:
00092a           	.BYTE 0x1
                 _rx_buffer1:
00092b           	.BYTE 0x10
                 _rx_wr_index1:
00093b           	.BYTE 0x1
                 _rx_rd_index1:
00093c           	.BYTE 0x1
                 _rx_counter1:
00093d           	.BYTE 0x1
                 _AccRoll:
00093e           	.BYTE 0x4
                 _P_00_S000004B000:
000942           	.BYTE 0x4
                 _P_01_S000004B000:
000946           	.BYTE 0x4
                 _P_10_S000004B000:
00094a           	.BYTE 0x4
                 _P_11_S000004B000:
00094e           	.BYTE 0x4
                 _hmc5883l_scale_G000:
000952           	.BYTE 0x4
                 _WaktuEksekusi:
000956           	.BYTE 0x1
                 _ServoCounter_S0000059000:
000957           	.BYTE 0x2
                 _iErrorSpeed_S000005A000:
000959           	.BYTE 0x4
                 _LastError_S000005A000:
00095d           	.BYTE 0x4
                 _iError_S000005A000:
000961           	.BYTE 0x4
                 _Rotary1_S000005A000:
000965           	.BYTE 0x2
                 _Rotary2_S000005A000:
000967           	.BYTE 0x2
                 _ServoCounter_S000005B000:
000969           	.BYTE 0x1
                 _LaguTick_S000005B000:
00096a           	.BYTE 0x1
                 _TempoTick_S000005B000:
00096b           	.BYTE 0x1
                 __dCounter1_S000005D000:
00096c           	.BYTE 0x1
                 __dCounter2_S000005D000:
00096d           	.BYTE 0x1
                 _Timer2Tick_S000005D000:
00096e           	.BYTE 0x1
                 __seed_G102:
00096f           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
001362 9610      	adiw r26,0
001363 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001364 ea80     +LDI R24 , LOW ( 0xFA0 )
001365 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
001366 9701     +SBIW R24 , 1
001367 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
001368 95a8      	wdr
001369 9711      	sbiw r26,1
00136a f7c9      	brne __delay_ms0
                 __delay_ms1:
00136b 9508      	ret
                 
                 __ANEGF1:
00136c 9730      	SBIW R30,0
00136d 4060      	SBCI R22,0
00136e 4070      	SBCI R23,0
00136f f009      	BREQ __ANEGF10
001370 5870      	SUBI R23,0x80
                 __ANEGF10:
001371 9508      	RET
                 
                 __ROUND_REPACK:
001372 2355      	TST  R21
001373 f442      	BRPL __REPACK
001374 3850      	CPI  R21,0x80
001375 f411      	BRNE __ROUND_REPACK0
001376 ffe0      	SBRS R30,0
001377 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001378 9631      	ADIW R30,1
001379 1f69      	ADC  R22,R25
00137a 1f79      	ADC  R23,R25
00137b f06b      	BRVS __REPACK1
                 
                 __REPACK:
00137c e850      	LDI  R21,0x80
00137d 2757      	EOR  R21,R23
00137e f411      	BRNE __REPACK0
00137f 935f      	PUSH R21
001380 c0cf      	RJMP __ZERORES
                 __REPACK0:
001381 3f5f      	CPI  R21,0xFF
001382 f031      	BREQ __REPACK1
001383 0f66      	LSL  R22
001384 0c00      	LSL  R0
001385 9557      	ROR  R21
001386 9567      	ROR  R22
001387 2f75      	MOV  R23,R21
001388 9508      	RET
                 __REPACK1:
001389 935f      	PUSH R21
00138a 2000      	TST  R0
00138b f00a      	BRMI __REPACK2
00138c c0cf      	RJMP __MAXRES
                 __REPACK2:
00138d c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00138e e850      	LDI  R21,0x80
00138f 2e19      	MOV  R1,R25
001390 2215      	AND  R1,R21
001391 0f88      	LSL  R24
001392 1f99      	ROL  R25
001393 2795      	EOR  R25,R21
001394 0f55      	LSL  R21
001395 9587      	ROR  R24
                 
                 __UNPACK1:
001396 e850      	LDI  R21,0x80
001397 2e07      	MOV  R0,R23
001398 2205      	AND  R0,R21
001399 0f66      	LSL  R22
00139a 1f77      	ROL  R23
00139b 2775      	EOR  R23,R21
00139c 0f55      	LSL  R21
00139d 9567      	ROR  R22
00139e 9508      	RET
                 
                 __CFD1U:
00139f 9468      	SET
0013a0 c001      	RJMP __CFD1U0
                 __CFD1:
0013a1 94e8      	CLT
                 __CFD1U0:
0013a2 935f      	PUSH R21
0013a3 dff2      	RCALL __UNPACK1
0013a4 3870      	CPI  R23,0x80
0013a5 f018      	BRLO __CFD10
0013a6 3f7f      	CPI  R23,0xFF
0013a7 f408      	BRCC __CFD10
0013a8 c0a7      	RJMP __ZERORES
                 __CFD10:
0013a9 e156      	LDI  R21,22
0013aa 1b57      	SUB  R21,R23
0013ab f4aa      	BRPL __CFD11
0013ac 9551      	NEG  R21
0013ad 3058      	CPI  R21,8
0013ae f40e      	BRTC __CFD19
0013af 3059      	CPI  R21,9
                 __CFD19:
0013b0 f030      	BRLO __CFD17
0013b1 efef      	SER  R30
0013b2 efff      	SER  R31
0013b3 ef6f      	SER  R22
0013b4 e77f      	LDI  R23,0x7F
0013b5 f977      	BLD  R23,7
0013b6 c01a      	RJMP __CFD15
                 __CFD17:
0013b7 2777      	CLR  R23
0013b8 2355      	TST  R21
0013b9 f0b9      	BREQ __CFD15
                 __CFD18:
0013ba 0fee      	LSL  R30
0013bb 1fff      	ROL  R31
0013bc 1f66      	ROL  R22
0013bd 1f77      	ROL  R23
0013be 955a      	DEC  R21
0013bf f7d1      	BRNE __CFD18
0013c0 c010      	RJMP __CFD15
                 __CFD11:
0013c1 2777      	CLR  R23
                 __CFD12:
0013c2 3058      	CPI  R21,8
0013c3 f028      	BRLO __CFD13
0013c4 2fef      	MOV  R30,R31
0013c5 2ff6      	MOV  R31,R22
0013c6 2f67      	MOV  R22,R23
0013c7 5058      	SUBI R21,8
0013c8 cff9      	RJMP __CFD12
                 __CFD13:
0013c9 2355      	TST  R21
0013ca f031      	BREQ __CFD15
                 __CFD14:
0013cb 9576      	LSR  R23
0013cc 9567      	ROR  R22
0013cd 95f7      	ROR  R31
0013ce 95e7      	ROR  R30
0013cf 955a      	DEC  R21
0013d0 f7d1      	BRNE __CFD14
                 __CFD15:
0013d1 2000      	TST  R0
0013d2 f40a      	BRPL __CFD16
0013d3 d154      	RCALL __ANEGD1
                 __CFD16:
0013d4 915f      	POP  R21
0013d5 9508      	RET
                 
                 __CDF1U:
0013d6 9468      	SET
0013d7 c001      	RJMP __CDF1U0
                 __CDF1:
0013d8 94e8      	CLT
                 __CDF1U0:
0013d9 9730      	SBIW R30,0
0013da 4060      	SBCI R22,0
0013db 4070      	SBCI R23,0
0013dc f0b1      	BREQ __CDF10
0013dd 2400      	CLR  R0
0013de f026      	BRTS __CDF11
0013df 2377      	TST  R23
0013e0 f412      	BRPL __CDF11
0013e1 9400      	COM  R0
0013e2 d145      	RCALL __ANEGD1
                 __CDF11:
0013e3 2e17      	MOV  R1,R23
0013e4 e17e      	LDI  R23,30
0013e5 2011      	TST  R1
                 __CDF12:
0013e6 f032      	BRMI __CDF13
0013e7 957a      	DEC  R23
0013e8 0fee      	LSL  R30
0013e9 1fff      	ROL  R31
0013ea 1f66      	ROL  R22
0013eb 1c11      	ROL  R1
0013ec cff9      	RJMP __CDF12
                 __CDF13:
0013ed 2fef      	MOV  R30,R31
0013ee 2ff6      	MOV  R31,R22
0013ef 2d61      	MOV  R22,R1
0013f0 935f      	PUSH R21
0013f1 df8a      	RCALL __REPACK
0013f2 915f      	POP  R21
                 __CDF10:
0013f3 9508      	RET
                 
                 __SWAPACC:
0013f4 934f      	PUSH R20
0013f5 01af      	MOVW R20,R30
0013f6 01fd      	MOVW R30,R26
0013f7 01da      	MOVW R26,R20
0013f8 01ab      	MOVW R20,R22
0013f9 01bc      	MOVW R22,R24
0013fa 01ca      	MOVW R24,R20
0013fb 2d40      	MOV  R20,R0
0013fc 2c01      	MOV  R0,R1
0013fd 2e14      	MOV  R1,R20
0013fe 914f      	POP  R20
0013ff 9508      	RET
                 
                 __UADD12:
001400 0fea      	ADD  R30,R26
001401 1ffb      	ADC  R31,R27
001402 1f68      	ADC  R22,R24
001403 9508      	RET
                 
                 __NEGMAN1:
001404 95e0      	COM  R30
001405 95f0      	COM  R31
001406 9560      	COM  R22
001407 5fef      	SUBI R30,-1
001408 4fff      	SBCI R31,-1
001409 4f6f      	SBCI R22,-1
00140a 9508      	RET
                 
                 __SUBF12:
00140b 935f      	PUSH R21
00140c df81      	RCALL __UNPACK
00140d 3890      	CPI  R25,0x80
00140e f171      	BREQ __ADDF129
00140f e850      	LDI  R21,0x80
001410 2615      	EOR  R1,R21
                 
001411 c004      	RJMP __ADDF120
                 
                 __ADDF12:
001412 935f      	PUSH R21
001413 df7a      	RCALL __UNPACK
001414 3890      	CPI  R25,0x80
001415 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001416 3870      	CPI  R23,0x80
001417 f121      	BREQ __ADDF128
                 __ADDF121:
001418 2f57      	MOV  R21,R23
001419 1b59      	SUB  R21,R25
00141a f12b      	BRVS __ADDF1211
00141b f412      	BRPL __ADDF122
00141c dfd7      	RCALL __SWAPACC
00141d cffa      	RJMP __ADDF121
                 __ADDF122:
00141e 3158      	CPI  R21,24
00141f f018      	BRLO __ADDF123
001420 27aa      	CLR  R26
001421 27bb      	CLR  R27
001422 2788      	CLR  R24
                 __ADDF123:
001423 3058      	CPI  R21,8
001424 f028      	BRLO __ADDF124
001425 2fab      	MOV  R26,R27
001426 2fb8      	MOV  R27,R24
001427 2788      	CLR  R24
001428 5058      	SUBI R21,8
001429 cff9      	RJMP __ADDF123
                 __ADDF124:
00142a 2355      	TST  R21
00142b f029      	BREQ __ADDF126
                 __ADDF125:
00142c 9586      	LSR  R24
00142d 95b7      	ROR  R27
00142e 95a7      	ROR  R26
00142f 955a      	DEC  R21
001430 f7d9      	BRNE __ADDF125
                 __ADDF126:
001431 2d50      	MOV  R21,R0
001432 2551      	EOR  R21,R1
001433 f072      	BRMI __ADDF127
001434 dfcb      	RCALL __UADD12
001435 f438      	BRCC __ADDF129
001436 9567      	ROR  R22
001437 95f7      	ROR  R31
001438 95e7      	ROR  R30
001439 9573      	INC  R23
00143a f413      	BRVC __ADDF129
00143b c020      	RJMP __MAXRES
                 __ADDF128:
00143c dfb7      	RCALL __SWAPACC
                 __ADDF129:
00143d df3e      	RCALL __REPACK
00143e 915f      	POP  R21
00143f 9508      	RET
                 __ADDF1211:
001440 f7d8      	BRCC __ADDF128
001441 cffb      	RJMP __ADDF129
                 __ADDF127:
001442 1bea      	SUB  R30,R26
001443 0bfb      	SBC  R31,R27
001444 0b68      	SBC  R22,R24
001445 f051      	BREQ __ZERORES
001446 f410      	BRCC __ADDF1210
001447 9400      	COM  R0
001448 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
001449 2366      	TST  R22
00144a f392      	BRMI __ADDF129
00144b 0fee      	LSL  R30
00144c 1fff      	ROL  R31
00144d 1f66      	ROL  R22
00144e 957a      	DEC  R23
00144f f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001450 27ee      	CLR  R30
001451 27ff      	CLR  R31
001452 2766      	CLR  R22
001453 2777      	CLR  R23
001454 915f      	POP  R21
001455 9508      	RET
                 
                 __MINRES:
001456 efef      	SER  R30
001457 efff      	SER  R31
001458 e76f      	LDI  R22,0x7F
001459 ef7f      	SER  R23
00145a 915f      	POP  R21
00145b 9508      	RET
                 
                 __MAXRES:
00145c efef      	SER  R30
00145d efff      	SER  R31
00145e e76f      	LDI  R22,0x7F
00145f e77f      	LDI  R23,0x7F
001460 915f      	POP  R21
001461 9508      	RET
                 
                 __MULF12:
001462 935f      	PUSH R21
001463 df2a      	RCALL __UNPACK
001464 3870      	CPI  R23,0x80
001465 f351      	BREQ __ZERORES
001466 3890      	CPI  R25,0x80
001467 f341      	BREQ __ZERORES
001468 2401      	EOR  R0,R1
001469 9408      	SEC
00146a 1f79      	ADC  R23,R25
00146b f423      	BRVC __MULF124
00146c f31c      	BRLT __ZERORES
                 __MULF125:
00146d 2000      	TST  R0
00146e f33a      	BRMI __MINRES
00146f cfec      	RJMP __MAXRES
                 __MULF124:
001470 920f      	PUSH R0
001471 931f      	PUSH R17
001472 932f      	PUSH R18
001473 933f      	PUSH R19
001474 934f      	PUSH R20
001475 2711      	CLR  R17
001476 2722      	CLR  R18
001477 2799      	CLR  R25
001478 9f68      	MUL  R22,R24
001479 01a0      	MOVW R20,R0
00147a 9f8f      	MUL  R24,R31
00147b 2d30      	MOV  R19,R0
00147c 0d41      	ADD  R20,R1
00147d 1f59      	ADC  R21,R25
00147e 9f6b      	MUL  R22,R27
00147f 0d30      	ADD  R19,R0
001480 1d41      	ADC  R20,R1
001481 1f59      	ADC  R21,R25
001482 9f8e      	MUL  R24,R30
001483 d027      	RCALL __MULF126
001484 9fbf      	MUL  R27,R31
001485 d025      	RCALL __MULF126
001486 9f6a      	MUL  R22,R26
001487 d023      	RCALL __MULF126
001488 9fbe      	MUL  R27,R30
001489 d01d      	RCALL __MULF127
00148a 9faf      	MUL  R26,R31
00148b d01b      	RCALL __MULF127
00148c 9fae      	MUL  R26,R30
00148d 0d11      	ADD  R17,R1
00148e 1f29      	ADC  R18,R25
00148f 1f39      	ADC  R19,R25
001490 1f49      	ADC  R20,R25
001491 1f59      	ADC  R21,R25
001492 2fe3      	MOV  R30,R19
001493 2ff4      	MOV  R31,R20
001494 2f65      	MOV  R22,R21
001495 2f52      	MOV  R21,R18
001496 914f      	POP  R20
001497 913f      	POP  R19
001498 912f      	POP  R18
001499 911f      	POP  R17
00149a 900f      	POP  R0
00149b 2366      	TST  R22
00149c f02a      	BRMI __MULF122
00149d 0f55      	LSL  R21
00149e 1fee      	ROL  R30
00149f 1fff      	ROL  R31
0014a0 1f66      	ROL  R22
0014a1 c002      	RJMP __MULF123
                 __MULF122:
0014a2 9573      	INC  R23
0014a3 f24b      	BRVS __MULF125
                 __MULF123:
0014a4 decd      	RCALL __ROUND_REPACK
0014a5 915f      	POP  R21
0014a6 9508      	RET
                 
                 __MULF127:
0014a7 0d10      	ADD  R17,R0
0014a8 1d21      	ADC  R18,R1
0014a9 1f39      	ADC  R19,R25
0014aa c002      	RJMP __MULF128
                 __MULF126:
0014ab 0d20      	ADD  R18,R0
0014ac 1d31      	ADC  R19,R1
                 __MULF128:
0014ad 1f49      	ADC  R20,R25
0014ae 1f59      	ADC  R21,R25
0014af 9508      	RET
                 
                 __DIVF21:
0014b0 935f      	PUSH R21
0014b1 dedc      	RCALL __UNPACK
0014b2 3870      	CPI  R23,0x80
0014b3 f421      	BRNE __DIVF210
0014b4 2011      	TST  R1
                 __DIVF211:
0014b5 f40a      	BRPL __DIVF219
0014b6 cf9f      	RJMP __MINRES
                 __DIVF219:
0014b7 cfa4      	RJMP __MAXRES
                 __DIVF210:
0014b8 3890      	CPI  R25,0x80
0014b9 f409      	BRNE __DIVF218
                 __DIVF217:
0014ba cf95      	RJMP __ZERORES
                 __DIVF218:
0014bb 2401      	EOR  R0,R1
0014bc 9408      	SEC
0014bd 0b97      	SBC  R25,R23
0014be f41b      	BRVC __DIVF216
0014bf f3d4      	BRLT __DIVF217
0014c0 2000      	TST  R0
0014c1 cff3      	RJMP __DIVF211
                 __DIVF216:
0014c2 2f79      	MOV  R23,R25
0014c3 931f      	PUSH R17
0014c4 932f      	PUSH R18
0014c5 933f      	PUSH R19
0014c6 934f      	PUSH R20
0014c7 2411      	CLR  R1
0014c8 2711      	CLR  R17
0014c9 2722      	CLR  R18
0014ca 2733      	CLR  R19
0014cb 2744      	CLR  R20
0014cc 2755      	CLR  R21
0014cd e290      	LDI  R25,32
                 __DIVF212:
0014ce 17ae      	CP   R26,R30
0014cf 07bf      	CPC  R27,R31
0014d0 0786      	CPC  R24,R22
0014d1 0741      	CPC  R20,R17
0014d2 f030      	BRLO __DIVF213
0014d3 1bae      	SUB  R26,R30
0014d4 0bbf      	SBC  R27,R31
0014d5 0b86      	SBC  R24,R22
0014d6 0b41      	SBC  R20,R17
0014d7 9408      	SEC
0014d8 c001      	RJMP __DIVF214
                 __DIVF213:
0014d9 9488      	CLC
                 __DIVF214:
0014da 1f55      	ROL  R21
0014db 1f22      	ROL  R18
0014dc 1f33      	ROL  R19
0014dd 1c11      	ROL  R1
0014de 1faa      	ROL  R26
0014df 1fbb      	ROL  R27
0014e0 1f88      	ROL  R24
0014e1 1f44      	ROL  R20
0014e2 959a      	DEC  R25
0014e3 f751      	BRNE __DIVF212
0014e4 01f9      	MOVW R30,R18
0014e5 2d61      	MOV  R22,R1
0014e6 914f      	POP  R20
0014e7 913f      	POP  R19
0014e8 912f      	POP  R18
0014e9 911f      	POP  R17
0014ea 2366      	TST  R22
0014eb f032      	BRMI __DIVF215
0014ec 0f55      	LSL  R21
0014ed 1fee      	ROL  R30
0014ee 1fff      	ROL  R31
0014ef 1f66      	ROL  R22
0014f0 957a      	DEC  R23
0014f1 f243      	BRVS __DIVF217
                 __DIVF215:
0014f2 de7f      	RCALL __ROUND_REPACK
0014f3 915f      	POP  R21
0014f4 9508      	RET
                 
                 __CMPF12:
0014f5 2399      	TST  R25
0014f6 f09a      	BRMI __CMPF120
0014f7 2377      	TST  R23
0014f8 f042      	BRMI __CMPF121
0014f9 1797      	CP   R25,R23
0014fa f048      	BRLO __CMPF122
0014fb f429      	BRNE __CMPF121
0014fc 17ae      	CP   R26,R30
0014fd 07bf      	CPC  R27,R31
0014fe 0786      	CPC  R24,R22
0014ff f020      	BRLO __CMPF122
001500 f031      	BREQ __CMPF123
                 __CMPF121:
001501 9498      	CLZ
001502 9488      	CLC
001503 9508      	RET
                 __CMPF122:
001504 9498      	CLZ
001505 9408      	SEC
001506 9508      	RET
                 __CMPF123:
001507 9418      	SEZ
001508 9488      	CLC
001509 9508      	RET
                 __CMPF120:
00150a 2377      	TST  R23
00150b f7c2      	BRPL __CMPF122
00150c 1797      	CP   R25,R23
00150d f398      	BRLO __CMPF121
00150e f7a9      	BRNE __CMPF122
00150f 17ea      	CP   R30,R26
001510 07fb      	CPC  R31,R27
001511 0768      	CPC  R22,R24
001512 f388      	BRLO __CMPF122
001513 f399      	BREQ __CMPF123
001514 cfec      	RJMP __CMPF121
                 
                 __ADDD12:
001515 0fea      	ADD  R30,R26
001516 1ffb      	ADC  R31,R27
001517 1f68      	ADC  R22,R24
001518 1f79      	ADC  R23,R25
001519 9508      	RET
                 
                 __SUBD12:
00151a 1bea      	SUB  R30,R26
00151b 0bfb      	SBC  R31,R27
00151c 0b68      	SBC  R22,R24
00151d 0b79      	SBC  R23,R25
00151e 9508      	RET
                 
                 __SUBD21:
00151f 1bae      	SUB  R26,R30
001520 0bbf      	SBC  R27,R31
001521 0b86      	SBC  R24,R22
001522 0b97      	SBC  R25,R23
001523 9508      	RET
                 
                 __ANEGW1:
001524 95f1      	NEG  R31
001525 95e1      	NEG  R30
001526 40f0      	SBCI R31,0
001527 9508      	RET
                 
                 __ANEGD1:
001528 95f0      	COM  R31
001529 9560      	COM  R22
00152a 9570      	COM  R23
00152b 95e1      	NEG  R30
00152c 4fff      	SBCI R31,-1
00152d 4f6f      	SBCI R22,-1
00152e 4f7f      	SBCI R23,-1
00152f 9508      	RET
                 
                 __LSLB12:
001530 23ee      	TST  R30
001531 2e0e      	MOV  R0,R30
001532 2fea      	MOV  R30,R26
001533 f019      	BREQ __LSLB12R
                 __LSLB12L:
001534 0fee      	LSL  R30
001535 940a      	DEC  R0
001536 f7e9      	BRNE __LSLB12L
                 __LSLB12R:
001537 9508      	RET
                 
                 __LSRB12:
001538 23ee      	TST  R30
001539 2e0e      	MOV  R0,R30
00153a 2fea      	MOV  R30,R26
00153b f019      	BREQ __LSRB12R
                 __LSRB12L:
00153c 95e6      	LSR  R30
00153d 940a      	DEC  R0
00153e f7e9      	BRNE __LSRB12L
                 __LSRB12R:
00153f 9508      	RET
                 
                 __ASRD1:
001540 9575      	ASR  R23
001541 9567      	ROR  R22
001542 95f7      	ROR  R31
001543 95e7      	ROR  R30
001544 9508      	RET
                 
                 __LSLD1:
001545 0fee      	LSL  R30
001546 1fff      	ROL  R31
001547 1f66      	ROL  R22
001548 1f77      	ROL  R23
001549 9508      	RET
                 
                 __CBD1:
00154a 2ffe      	MOV  R31,R30
00154b 0fff      	ADD  R31,R31
00154c 0bff      	SBC  R31,R31
00154d 2f6f      	MOV  R22,R31
00154e 2f7f      	MOV  R23,R31
00154f 9508      	RET
                 
                 __CWD1:
001550 2f6f      	MOV  R22,R31
001551 0f66      	ADD  R22,R22
001552 0b66      	SBC  R22,R22
001553 2f76      	MOV  R23,R22
001554 9508      	RET
                 
                 __CBD2:
001555 2fba      	MOV  R27,R26
001556 0fbb      	ADD  R27,R27
001557 0bbb      	SBC  R27,R27
001558 2f8b      	MOV  R24,R27
001559 2f9b      	MOV  R25,R27
00155a 9508      	RET
                 
                 __MULW12U:
00155b 9ffa      	MUL  R31,R26
00155c 2df0      	MOV  R31,R0
00155d 9feb      	MUL  R30,R27
00155e 0df0      	ADD  R31,R0
00155f 9fea      	MUL  R30,R26
001560 2de0      	MOV  R30,R0
001561 0df1      	ADD  R31,R1
001562 9508      	RET
                 
                 __MULB1W2U:
001563 2f6e      	MOV  R22,R30
001564 9f6a      	MUL  R22,R26
001565 01f0      	MOVW R30,R0
001566 9f6b      	MUL  R22,R27
001567 0df0      	ADD  R31,R0
001568 9508      	RET
                 
                 __MULW12:
001569 d065      	RCALL __CHKSIGNW
00156a dff0      	RCALL __MULW12U
00156b f40e      	BRTC __MULW121
00156c dfb7      	RCALL __ANEGW1
                 __MULW121:
00156d 9508      	RET
                 
                 __DIVB21U:
00156e 2400      	CLR  R0
00156f e098      	LDI  R25,8
                 __DIVB21U1:
001570 0faa      	LSL  R26
001571 1c00      	ROL  R0
001572 1a0e      	SUB  R0,R30
001573 f410      	BRCC __DIVB21U2
001574 0e0e      	ADD  R0,R30
001575 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
001576 60a1      	SBR  R26,1
                 __DIVB21U3:
001577 959a      	DEC  R25
001578 f7b9      	BRNE __DIVB21U1
001579 2fea      	MOV  R30,R26
00157a 2da0      	MOV  R26,R0
00157b 9508      	RET
                 
                 __DIVW21U:
00157c 2400      	CLR  R0
00157d 2411      	CLR  R1
00157e e190      	LDI  R25,16
                 __DIVW21U1:
00157f 0faa      	LSL  R26
001580 1fbb      	ROL  R27
001581 1c00      	ROL  R0
001582 1c11      	ROL  R1
001583 1a0e      	SUB  R0,R30
001584 0a1f      	SBC  R1,R31
001585 f418      	BRCC __DIVW21U2
001586 0e0e      	ADD  R0,R30
001587 1e1f      	ADC  R1,R31
001588 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
001589 60a1      	SBR  R26,1
                 __DIVW21U3:
00158a 959a      	DEC  R25
00158b f799      	BRNE __DIVW21U1
00158c 01fd      	MOVW R30,R26
00158d 01d0      	MOVW R26,R0
00158e 9508      	RET
                 
                 __DIVW21:
00158f d03f      	RCALL __CHKSIGNW
001590 dfeb      	RCALL __DIVW21U
001591 f40e      	BRTC __DIVW211
001592 df91      	RCALL __ANEGW1
                 __DIVW211:
001593 9508      	RET
                 
                 __DIVD21U:
001594 933f      	PUSH R19
001595 934f      	PUSH R20
001596 935f      	PUSH R21
001597 2400      	CLR  R0
001598 2411      	CLR  R1
001599 2744      	CLR  R20
00159a 2755      	CLR  R21
00159b e230      	LDI  R19,32
                 __DIVD21U1:
00159c 0faa      	LSL  R26
00159d 1fbb      	ROL  R27
00159e 1f88      	ROL  R24
00159f 1f99      	ROL  R25
0015a0 1c00      	ROL  R0
0015a1 1c11      	ROL  R1
0015a2 1f44      	ROL  R20
0015a3 1f55      	ROL  R21
0015a4 1a0e      	SUB  R0,R30
0015a5 0a1f      	SBC  R1,R31
0015a6 0b46      	SBC  R20,R22
0015a7 0b57      	SBC  R21,R23
0015a8 f428      	BRCC __DIVD21U2
0015a9 0e0e      	ADD  R0,R30
0015aa 1e1f      	ADC  R1,R31
0015ab 1f46      	ADC  R20,R22
0015ac 1f57      	ADC  R21,R23
0015ad c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0015ae 60a1      	SBR  R26,1
                 __DIVD21U3:
0015af 953a      	DEC  R19
0015b0 f759      	BRNE __DIVD21U1
0015b1 01fd      	MOVW R30,R26
0015b2 01bc      	MOVW R22,R24
0015b3 01d0      	MOVW R26,R0
0015b4 01ca      	MOVW R24,R20
0015b5 915f      	POP  R21
0015b6 914f      	POP  R20
0015b7 913f      	POP  R19
0015b8 9508      	RET
                 
                 __DIVD21:
0015b9 d023      	RCALL __CHKSIGND
0015ba dfd9      	RCALL __DIVD21U
0015bb f40e      	BRTC __DIVD211
0015bc df6b      	RCALL __ANEGD1
                 __DIVD211:
0015bd 9508      	RET
                 
                 __MODB21U:
0015be dfaf      	RCALL __DIVB21U
0015bf 2fea      	MOV  R30,R26
0015c0 9508      	RET
                 
                 __MODW21:
0015c1 94e8      	CLT
0015c2 ffb7      	SBRS R27,7
0015c3 c004      	RJMP __MODW211
0015c4 95a0      	COM  R26
0015c5 95b0      	COM  R27
0015c6 9611      	ADIW R26,1
0015c7 9468      	SET
                 __MODW211:
0015c8 fdf7      	SBRC R31,7
0015c9 df5a      	RCALL __ANEGW1
0015ca dfb1      	RCALL __DIVW21U
0015cb 01fd      	MOVW R30,R26
0015cc f40e      	BRTC __MODW212
0015cd df56      	RCALL __ANEGW1
                 __MODW212:
0015ce 9508      	RET
                 
                 __CHKSIGNW:
0015cf 94e8      	CLT
0015d0 fff7      	SBRS R31,7
0015d1 c002      	RJMP __CHKSW1
0015d2 df51      	RCALL __ANEGW1
0015d3 9468      	SET
                 __CHKSW1:
0015d4 ffb7      	SBRS R27,7
0015d5 c006      	RJMP __CHKSW2
0015d6 95a0      	COM  R26
0015d7 95b0      	COM  R27
0015d8 9611      	ADIW R26,1
0015d9 f800      	BLD  R0,0
0015da 9403      	INC  R0
0015db fa00      	BST  R0,0
                 __CHKSW2:
0015dc 9508      	RET
                 
                 __CHKSIGND:
0015dd 94e8      	CLT
0015de ff77      	SBRS R23,7
0015df c002      	RJMP __CHKSD1
0015e0 df47      	RCALL __ANEGD1
0015e1 9468      	SET
                 __CHKSD1:
0015e2 ff97      	SBRS R25,7
0015e3 c00b      	RJMP __CHKSD2
0015e4 2400      	CLR  R0
0015e5 95a0      	COM  R26
0015e6 95b0      	COM  R27
0015e7 9580      	COM  R24
0015e8 9590      	COM  R25
0015e9 9611      	ADIW R26,1
0015ea 1d80      	ADC  R24,R0
0015eb 1d90      	ADC  R25,R0
0015ec f800      	BLD  R0,0
0015ed 9403      	INC  R0
0015ee fa00      	BST  R0,0
                 __CHKSD2:
0015ef 9508      	RET
                 
                 __GETD1P_INC:
0015f0 91ed      	LD   R30,X+
0015f1 91fd      	LD   R31,X+
0015f2 916d      	LD   R22,X+
0015f3 917d      	LD   R23,X+
0015f4 9508      	RET
                 
                 __PUTDP1_DEC:
0015f5 937e      	ST   -X,R23
0015f6 936e      	ST   -X,R22
0015f7 93fe      	ST   -X,R31
0015f8 93ee      	ST   -X,R30
0015f9 9508      	RET
                 
                 __GETW2PF:
0015fa bf6b      	OUT  RAMPZ,R22
0015fb 91a7      	ELPM R26,Z+
0015fc 91b6      	ELPM R27,Z
0015fd 9508      	RET
                 
                 __GETD1S0:
0015fe 81e8      	LD   R30,Y
0015ff 81f9      	LDD  R31,Y+1
001600 816a      	LDD  R22,Y+2
001601 817b      	LDD  R23,Y+3
001602 9508      	RET
                 
                 __GETD2S0:
001603 81a8      	LD   R26,Y
001604 81b9      	LDD  R27,Y+1
001605 818a      	LDD  R24,Y+2
001606 819b      	LDD  R25,Y+3
001607 9508      	RET
                 
                 __PUTD1S0:
001608 83e8      	ST   Y,R30
001609 83f9      	STD  Y+1,R31
00160a 836a      	STD  Y+2,R22
00160b 837b      	STD  Y+3,R23
00160c 9508      	RET
                 
                 __PUTD2S0:
00160d 83a8      	ST   Y,R26
00160e 83b9      	STD  Y+1,R27
00160f 838a      	STD  Y+2,R24
001610 839b      	STD  Y+3,R25
001611 9508      	RET
                 
                 __PUTPARD2:
001612 939a      	ST   -Y,R25
001613 938a      	ST   -Y,R24
001614 93ba      	ST   -Y,R27
001615 93aa      	ST   -Y,R26
001616 9508      	RET
                 
                 __CDF2U:
001617 9468      	SET
001618 c001      	RJMP __CDF2U0
                 __CDF2:
001619 94e8      	CLT
                 __CDF2U0:
00161a d001      	RCALL __SWAPD12
00161b ddbd      	RCALL __CDF1U0
                 
                 __SWAPD12:
00161c 2e18      	MOV  R1,R24
00161d 2f86      	MOV  R24,R22
00161e 2d61      	MOV  R22,R1
00161f 2e19      	MOV  R1,R25
001620 2f97      	MOV  R25,R23
001621 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001622 2e1b      	MOV  R1,R27
001623 2fbf      	MOV  R27,R31
001624 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001625 2e1a      	MOV  R1,R26
001626 2fae      	MOV  R26,R30
001627 2de1      	MOV  R30,R1
001628 9508      	RET
                 
                 __CPW02:
001629 2400      	CLR  R0
00162a 160a      	CP   R0,R26
00162b 060b      	CPC  R0,R27
00162c 9508      	RET
                 
                 __SAVELOCR4:
00162d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00162e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00162f 931a      	ST   -Y,R17
001630 930a      	ST   -Y,R16
001631 9508      	RET
                 
                 __LOADLOCR4:
001632 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001633 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001634 8119      	LDD  R17,Y+1
001635 8108      	LD   R16,Y
001636 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  75 r1 :  44 r2 :  10 r3 :   0 r4 :   2 r5 :   2 r6 :   2 r7 :   2 
r8 :   5 r9 :   2 r10:  11 r11:   1 r12:  11 r13:   1 r14:   0 r15:   4 
r16:  26 r17: 131 r18:  14 r19:  20 r20:  29 r21:  69 r22: 194 r23: 160 
r24: 204 r25: 171 r26: 619 r27: 281 r28:  41 r29:   5 r30:1138 r31: 326 
x  :  18 y  : 699 z  :  20 
Registers used: 33 out of 35 (94.3%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  30 add   :  26 
adiw  :  33 and   :   7 andi  :  24 asr   :   1 bclr  :   0 bld   :  11 
brbc  :   0 brbs  :   0 brcc  :  10 brcs  :   0 break :   0 breq  :  46 
brge  :   7 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  25 
brlt  :   7 brmi  :  10 brne  :  68 brpl  :  11 brsh  :  12 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 356 
cbi   :  17 cbr   :   0 clc   :   3 clh   :   0 cli   :  11 cln   :   0 
clr   :  56 cls   :   0 clt   :   8 clv   :   0 clz   :   2 com   :  18 
cp    :  21 cpc   :  20 cpi   :  83 cpse  :   0 dec   :  24 des   :   0 
elpm  :  18 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 
ijmp  :   0 in    :  12 inc   :   5 jmp   :  43 ld    : 115 ldd   : 267 
ldi   : 842 lds   : 284 lpm   :   0 lsl   :  17 lsr   :   4 mov   : 112 
movw  :  89 mul   :  17 muls  :   0 mulsu :   0 neg   :   6 nop   :   0 
or    :   6 ori   :   5 out   :  86 pop   :  66 push  :  66 rcall : 171 
ret   :  79 reti  :   7 rjmp  : 184 rol   :  38 ror   :  15 sbc   :  22 
sbci  :  27 sbi   :  10 sbic  :   3 sbis  :  19 sbiw  :  27 sbr   :   3 
sbrc  :   1 sbrs  :   8 sec   :   4 seh   :   0 sei   :  14 sen   :   0 
ser   :   8 ses   :   0 set   :  11 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 261 std   :  76 sts   : 242 sub   :  24 subi  :  60 
swap  :   3 tst   :  24 wdr   :   1 
Instructions used: 81 out of 117 (69.2%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x002c6e  10596    778  11374  131072   8.7%
[.dseg] 0x000100 0x000973      0    115    115    4351   2.6%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 10 warnings
