
AVRASM ver. 2.1.30  G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm Fri Sep 04 11:09:07 2015

G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1084): warning: Register r4 already defined by the .DEF directive
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1085): warning: Register r6 already defined by the .DEF directive
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1086): warning: Register r8 already defined by the .DEF directive
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1087): warning: Register r10 already defined by the .DEF directive
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1088): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega128
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Medium
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2048 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : No
                 ;'char' is unsigned       : No
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega128
                 	#pragma AVRPART MEMORY PROG_FLASH 131072
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU RAMPZ=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0800
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rx_wr_index0=R4
                 	.DEF _rx_rd_index0=R6
                 	.DEF _rx_counter0=R8
                 	.DEF _Enkoder1=R10
                 	.DEF _Enkoder2=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0283 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 07a1 	JMP  _ext_int6_isr
000010 940c 07cc 	JMP  _ext_int7_isr
000012 940c 08a6 	JMP  _timer2_comp_isr
000014 940c 0000 	JMP  0x00
000016 940c 0824 	JMP  _timer1_capt_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0886 	JMP  _timer1_ovf_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0618 	JMP  _usart0_rx_isr
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 07f7 	JMP  _timer3_compc_isr
00003a 940c 0000 	JMP  0x00
00003c 940c 065f 	JMP  _usart1_rx_isr
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _Melodi:
000046 0a4f
000047 0a4f
000048 0000
000049 0a4f      	.DB  0x4F,0xA,0x4F,0xA,0x0,0x0,0x4F,0xA
00004a 0000
00004b 082d
00004c 0a4f
00004d 0000      	.DB  0x0,0x0,0x2D,0x8,0x4F,0xA,0x0,0x0
00004e 0c40
00004f 0000
000050 0000
000051 0000      	.DB  0x40,0xC,0x0,0x0,0x0,0x0,0x0,0x0
000052 0620
000053 0000
000054 0000
000055 0000      	.DB  0x20,0x6,0x0,0x0,0x0,0x0,0x0,0x0
000056 082d
000057 0000
000058 0000
000059 0620      	.DB  0x2D,0x8,0x0,0x0,0x0,0x0,0x20,0x6
00005a 0000
00005b 0000
00005c 0526
00005d 0000      	.DB  0x0,0x0,0x0,0x0,0x26,0x5,0x0,0x0
00005e 0000
00005f 06e0
000060 0000
000061 07b7      	.DB  0x0,0x0,0xE0,0x6,0x0,0x0,0xB7,0x7
000062 0000
000063 0748
000064 06e0
000065 0000      	.DB  0x0,0x0,0x48,0x7,0xE0,0x6,0x0,0x0
000066 0620
000067 0a4f
000068 0c40
000069 0dc0      	.DB  0x20,0x6,0x4F,0xA,0x40,0xC,0xC0,0xD
00006a 0000
00006b 0ae9
00006c 0c40
00006d 0000      	.DB  0x0,0x0,0xE9,0xA,0x40,0xC,0x0,0x0
00006e 0a4f
00006f 0000
000070 082d
000071 092d      	.DB  0x4F,0xA,0x0,0x0,0x2D,0x8,0x2D,0x9
000072 07b7
000073 0000
000074 0000
000075 082d      	.DB  0xB7,0x7,0x0,0x0,0x0,0x0,0x2D,0x8
000076 0000
000077 0000
000078 0620
000079 0000      	.DB  0x0,0x0,0x0,0x0,0x20,0x6,0x0,0x0
00007a 0000
00007b 0526
00007c 0000
00007d 0000      	.DB  0x0,0x0,0x26,0x5,0x0,0x0,0x0,0x0
00007e 06e0
00007f 0000
000080 07b7
000081 0000      	.DB  0xE0,0x6,0x0,0x0,0xB7,0x7,0x0,0x0
000082 0748
000083 06e0
000084 0000
000085 0620      	.DB  0x48,0x7,0xE0,0x6,0x0,0x0,0x20,0x6
000086 0a4f
000087 0c40
000088 0dc0
000089 0000      	.DB  0x4F,0xA,0x40,0xC,0xC0,0xD,0x0,0x0
00008a 0ae9
00008b 0c40
00008c 0000
00008d 0a4f      	.DB  0xE9,0xA,0x40,0xC,0x0,0x0,0x4F,0xA
00008e 0000
00008f 082d
000090 092d
000091 07b7      	.DB  0x0,0x0,0x2D,0x8,0x2D,0x9,0xB7,0x7
000092 0000
000093 0000      	.DB  0x0,0x0,0x0,0x0
                 _Tempo:
000094 1e1e
000095 1e1e
000096 1e1e
000097 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
000098 1e1e
000099 1e1e
00009a 1e1e
00009b 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
00009c 1e1e
00009d 1e1e
00009e 1e1e
00009f 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000a0 1e1e
0000a1 1e1e
0000a2 1e1e
0000a3 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000a4 2323
0000a5 1823
0000a6 1e1e
0000a7 1e1e      	.DB  0x23,0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E
0000a8 1e1e
0000a9 1e1e
0000aa 1e1e
0000ab 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000ac 1e1e
0000ad 1e1e
0000ae 1e1e
0000af 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
0000b0 1e1e
0000b1 1e1e
0000b2 1e1e
0000b3 231e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x23
0000b4 2323
0000b5 1e18
0000b6 1e1e
0000b7 1e1e      	.DB  0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E,0x1E
0000b8 1e1e
0000b9 1e1e
0000ba 1e1e      	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
                 _tbl10_G100:
0000bb 2710
0000bc 03e8
0000bd 0064
0000be 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
0000bf 0001      	.DB  0x1,0x0
                 _tbl16_G100:
0000c0 1000
0000c1 0100
0000c2 0010
0000c3 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
0000c4 0000      	.DW  0x0000
                 
                 _0x126:
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1176): warning: .cseg .db misalignment - padding zero byte
0000c5 0064      	.DB  0x64
                 _0x130:
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1178): warning: .cseg .db misalignment - padding zero byte
0000c6 0032      	.DB  0x32
                 _0x13B:
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1180): warning: .cseg .db misalignment - padding zero byte
0000c7 0032      	.DB  0x32
                 _0x19A:
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1182): warning: .cseg .db misalignment - padding zero byte
0000c8 0064      	.DB  0x64
                 _0x1A4:
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1184): warning: .cseg .db misalignment - padding zero byte
0000c9 0064      	.DB  0x64
                 _0x1D7:
0000ca 0000
0000cb 0000
0000cc 0000
0000cd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000ce 0000
0000cf 0000
0000d0 0000
0000d1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d2 0000      	.DB  0x0,0x0
                 _0x1E0:
0000d3 0000
0000d4 0000
0000d5 0000
0000d6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000d7 0000
0000d8 0000
0000d9 0000
0000da 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0000db 0000      	.DB  0x0,0x0
                 _0x28A:
0000dc 0000
0000dd 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
0000de 614b
0000df 696c
0000e0 7262
0000e1 7361      	.DB  0x4B,0x61,0x6C,0x69,0x62,0x72,0x61,0x73
0000e2 2069
0000e3 6553
0000e4 736e
0000e5 726f      	.DB  0x69,0x20,0x53,0x65,0x6E,0x73,0x6F,0x72
0000e6 5300
0000e7 6c65
0000e8 7365
0000e9 6961      	.DB  0x0,0x53,0x65,0x6C,0x65,0x73,0x61,0x69
0000ea 3e20
0000eb 3e3e
0000ec 3e3e
0000ed 3e3e      	.DB  0x20,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E
0000ee 003e
0000ef 6944
0000f0 6568
0000f1 746e      	.DB  0x3E,0x0,0x44,0x69,0x68,0x65,0x6E,0x74
0000f2 6b69
0000f3 6e61
0000f4 3e20
0000f5 3e3e      	.DB  0x69,0x6B,0x61,0x6E,0x20,0x3E,0x3E,0x3E
0000f6 3e3e
0000f7 4d00
0000f8 7265
0000f9 6861      	.DB  0x3E,0x3E,0x0,0x4D,0x65,0x72,0x61,0x68
0000fa 482d
0000fb 6a69
0000fc 7561
0000fd 422d      	.DB  0x2D,0x48,0x69,0x6A,0x61,0x75,0x2D,0x42
0000fe 7269
0000ff 0075
000100 2e31
000101 6157      	.DB  0x69,0x72,0x75,0x0,0x31,0x2E,0x57,0x61
000102 6e72
000103 2061
000104 654d
000105 6172      	.DB  0x72,0x6E,0x61,0x20,0x4D,0x65,0x72,0x61
000106 2068
000107 3e3e
000108 5400
000109 6b65      	.DB  0x68,0x20,0x3E,0x3E,0x0,0x54,0x65,0x6B
00010a 6e61
00010b 5420
00010c 6d6f
00010d 6f62      	.DB  0x61,0x6E,0x20,0x54,0x6F,0x6D,0x62,0x6F
00010e 206c
00010f 3c31
000110 003c
000111 2e32      	.DB  0x6C,0x20,0x31,0x3C,0x3C,0x0,0x32,0x2E
000112 6157
000113 6e72
000114 2061
000115 6948      	.DB  0x57,0x61,0x72,0x6E,0x61,0x20,0x48,0x69
000116 616a
000117 2075
000118 3e3e
000119 3300      	.DB  0x6A,0x61,0x75,0x20,0x3E,0x3E,0x0,0x33
00011a 572e
00011b 7261
00011c 616e
00011d 4220      	.DB  0x2E,0x57,0x61,0x72,0x6E,0x61,0x20,0x42
00011e 7269
00011f 2075
000120 3e3e
000121 003e      	.DB  0x69,0x72,0x75,0x20,0x3E,0x3E,0x3E,0x0
000122 2e34
000123 6157
000124 6e72
000125 2061      	.DB  0x34,0x2E,0x57,0x61,0x72,0x6E,0x61,0x20
000126 6948
000127 6174
000128 206d
000129 3e3e      	.DB  0x48,0x69,0x74,0x61,0x6D,0x20,0x3E,0x3E
00012a 4800
00012b 7469
00012c 6d61
00012d 7550      	.DB  0x0,0x48,0x69,0x74,0x61,0x6D,0x50,0x75
00012e 6974
00012f 2d68
000130 654d
000131 6172      	.DB  0x74,0x69,0x68,0x2D,0x4D,0x65,0x72,0x61
000132 0068
000133 6948
000134 6174
000135 506d      	.DB  0x68,0x0,0x48,0x69,0x74,0x61,0x6D,0x50
000136 7475
000137 6869
000138 482d
000139 6a69      	.DB  0x75,0x74,0x69,0x68,0x2D,0x48,0x69,0x6A
00013a 7561
00013b 4800
00013c 7469
00013d 6d61      	.DB  0x61,0x75,0x0,0x48,0x69,0x74,0x61,0x6D
00013e 7550
00013f 6974
000140 2d68
000141 6942      	.DB  0x50,0x75,0x74,0x69,0x68,0x2D,0x42,0x69
000142 7572
000143 0020
000144 2e31
000145 6157      	.DB  0x72,0x75,0x20,0x0,0x31,0x2E,0x57,0x61
000146 6e72
000147 2061
000148 7550
000149 6974      	.DB  0x72,0x6E,0x61,0x20,0x50,0x75,0x74,0x69
00014a 2068
00014b 3e3e
00014c 3200
00014d 572e      	.DB  0x68,0x20,0x3E,0x3E,0x0,0x32,0x2E,0x57
00014e 7261
00014f 616e
000150 4820
000151 7469      	.DB  0x61,0x72,0x6E,0x61,0x20,0x48,0x69,0x74
000152 6d61
000153 3e20
000154 003e
000155 2020      	.DB  0x61,0x6D,0x20,0x3E,0x3E,0x0,0x20,0x20
000156 2d20
000157 573d
000158 4c45
000159 4f43      	.DB  0x20,0x2D,0x3D,0x57,0x45,0x4C,0x43,0x4F
00015a 454d
00015b 2d3d
00015c 2020
00015d 2000      	.DB  0x4D,0x45,0x3D,0x2D,0x20,0x20,0x0,0x20
00015e 2020
00015f 2020
000160 2020
000161 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000162 2020
000163 2020
000164 2020
000165 0020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0
000166 2020
000167 3d2d
000168 4f52
000169 4f42      	.DB  0x20,0x20,0x2D,0x3D,0x52,0x4F,0x42,0x4F
00016a 4956
00016b 4550
00016c 3d52
00016d 202d      	.DB  0x56,0x49,0x50,0x45,0x52,0x3D,0x2D,0x20
00016e 2000
00016f 5220
000170 4145
000171 5944      	.DB  0x0,0x20,0x20,0x52,0x45,0x41,0x44,0x59
000172 2e2e
000173 2e2e
000174 2e2e
000175 2e2e      	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E
000176 0020
000177 414d
000178 554a
000179 572d      	.DB  0x20,0x0,0x4D,0x41,0x4A,0x55,0x2D,0x57
00017a 4b41
00017b 5554
00017c 2500
00017d 2064      	.DB  0x41,0x4B,0x54,0x55,0x0,0x25,0x64,0x20
00017e 6425
00017f 2520
000180 0064
000181 414d      	.DB  0x25,0x64,0x20,0x25,0x64,0x0,0x4D,0x41
000182 554a
000183 4a2d
000184 5241
000185 4b41      	.DB  0x4A,0x55,0x2D,0x4A,0x41,0x52,0x41,0x4B
000186 4d00
000187 4e55
000188 5544
000189 2d52      	.DB  0x0,0x4D,0x55,0x4E,0x44,0x55,0x52,0x2D
00018a 4157
00018b 544b
00018c 0055
00018d 554d      	.DB  0x57,0x41,0x4B,0x54,0x55,0x0,0x4D,0x55
00018e 444e
00018f 5255
000190 4a2d
000191 5241      	.DB  0x4E,0x44,0x55,0x52,0x2D,0x4A,0x41,0x52
000192 4b41
000193 4b00
000194 4e41
000195 4e41      	.DB  0x41,0x4B,0x0,0x4B,0x41,0x4E,0x41,0x4E
000196 572d
000197 4b41
000198 5554
000199 4b00      	.DB  0x2D,0x57,0x41,0x4B,0x54,0x55,0x0,0x4B
00019a 4e41
00019b 4e41
00019c 442d
00019d 5245      	.DB  0x41,0x4E,0x41,0x4E,0x2D,0x44,0x45,0x52
00019e 4a41
00019f 5441
0001a0 4b00
0001a1 5249      	.DB  0x41,0x4A,0x41,0x54,0x0,0x4B,0x49,0x52
0001a2 2d49
0001a3 4157
0001a4 544b
0001a5 0055      	.DB  0x49,0x2D,0x57,0x41,0x4B,0x54,0x55,0x0
0001a6 494b
0001a7 4952
0001a8 442d
0001a9 5245      	.DB  0x4B,0x49,0x52,0x49,0x2D,0x44,0x45,0x52
0001aa 4a41
0001ab 5441
0001ac 4700
0001ad 5241      	.DB  0x41,0x4A,0x41,0x54,0x0,0x47,0x41,0x52
0001ae 5349
0001af 4b2d
0001b0 5249
0001b1 0049      	.DB  0x49,0x53,0x2D,0x4B,0x49,0x52,0x49,0x0
0001b2 4157
0001b3 544b
0001b4 2d55
0001b5 494b      	.DB  0x57,0x41,0x4B,0x54,0x55,0x2D,0x4B,0x49
0001b6 4952
0001b7 4700
0001b8 5241
0001b9 5349      	.DB  0x52,0x49,0x0,0x47,0x41,0x52,0x49,0x53
0001ba 4b2d
0001bb 4e41
0001bc 4e41
0001bd 5700      	.DB  0x2D,0x4B,0x41,0x4E,0x41,0x4E,0x0,0x57
0001be 4b41
0001bf 5554
0001c0 4b2d
0001c1 4e41      	.DB  0x41,0x4B,0x54,0x55,0x2D,0x4B,0x41,0x4E
0001c2 4e41
0001c3 3300
0001c4 414b
0001c5 414e      	.DB  0x41,0x4E,0x0,0x33,0x4B,0x41,0x4E,0x41
0001c6 2d4e
0001c7 414b
0001c8 414e
0001c9 004e      	.DB  0x4E,0x2D,0x4B,0x41,0x4E,0x41,0x4E,0x0
0001ca 4b33
0001cb 4e41
0001cc 4e41
0001cd 4c2d      	.DB  0x33,0x4B,0x41,0x4E,0x41,0x4E,0x2D,0x4C
0001ce 5255
0001cf 5355
0001d0 3300
0001d1 494b      	.DB  0x55,0x52,0x55,0x53,0x0,0x33,0x4B,0x49
0001d2 4952
0001d3 4b2d
0001d4 5249
0001d5 0049      	.DB  0x52,0x49,0x2D,0x4B,0x49,0x52,0x49,0x0
0001d6 4b33
0001d7 5249
0001d8 2d49
0001d9 554c      	.DB  0x33,0x4B,0x49,0x52,0x49,0x2D,0x4C,0x55
0001da 5552
0001db 0053
0001dc 4550
0001dd 4552      	.DB  0x52,0x55,0x53,0x0,0x50,0x45,0x52,0x45
0001de 504d
0001df 5441
0001e0 4e41
0001e1 4b2d      	.DB  0x4D,0x50,0x41,0x54,0x41,0x4E,0x2D,0x4B
0001e2 4e41
0001e3 4e41
0001e4 5000
0001e5 5245      	.DB  0x41,0x4E,0x41,0x4E,0x0,0x50,0x45,0x52
0001e6 4d45
0001e7 4150
0001e8 4154
0001e9 2d4e      	.DB  0x45,0x4D,0x50,0x41,0x54,0x41,0x4E,0x2D
0001ea 494b
0001eb 4952
0001ec 5000
0001ed 5245      	.DB  0x4B,0x49,0x52,0x49,0x0,0x50,0x45,0x52
0001ee 4d45
0001ef 4150
0001f0 4154
0001f1 2d4e      	.DB  0x45,0x4D,0x50,0x41,0x54,0x41,0x4E,0x2D
0001f2 554c
0001f3 5552
0001f4 0053
0001f5 414a      	.DB  0x4C,0x55,0x52,0x55,0x53,0x0,0x4A,0x41
0001f6 414c
0001f7 204e
0001f8 4542
0001f9 4142      	.DB  0x4C,0x41,0x4E,0x20,0x42,0x45,0x42,0x41
0001fa 0053
0001fb 7542
0001fc 7a7a
0001fd 7265      	.DB  0x53,0x0,0x42,0x75,0x7A,0x7A,0x65,0x72
0001fe 5320
0001ff 6174
000200 7574
000201 3a73      	.DB  0x20,0x53,0x74,0x61,0x74,0x75,0x73,0x3A
000202 4f00
000203 004e
000204 464f
000205 0046      	.DB  0x0,0x4F,0x4E,0x0,0x4F,0x46,0x46,0x0
000206 2d20
000207 423d
000208 7a75
000209 657a      	.DB  0x20,0x2D,0x3D,0x42,0x75,0x7A,0x7A,0x65
00020a 2072
00020b 614e
00020c 6164
00020d 2d3d      	.DB  0x72,0x20,0x4E,0x61,0x64,0x61,0x3D,0x2D
00020e 5000
00020f 5345
000210 4e41
000211 3a20      	.DB  0x0,0x50,0x45,0x53,0x41,0x4E,0x20,0x3A
000212 4400
000213 4c45
000214 5941
000215 4700      	.DB  0x0,0x44,0x45,0x4C,0x41,0x59,0x0,0x47
000216 4952
000217 5050
000218 5245
000219 003a      	.DB  0x52,0x49,0x50,0x50,0x45,0x52,0x3A,0x0
00021a 5542
00021b 414b
00021c 0020
00021d 5554      	.DB  0x42,0x55,0x4B,0x41,0x20,0x0,0x54,0x55
00021e 5554
00021f 0050
000220 4156
000221 4952      	.DB  0x54,0x55,0x50,0x0,0x56,0x41,0x52,0x49
000222 5441
000223 4649
000224 3a20
000225 0020      	.DB  0x41,0x54,0x49,0x46,0x20,0x3A,0x20,0x0
000226 454c
000227 474e
000228 4e41
000229 003a      	.DB  0x4C,0x45,0x4E,0x47,0x41,0x4E,0x3A,0x0
00022a 414e
00022b 4b49
00022c 5400
00022d 5255      	.DB  0x4E,0x41,0x49,0x4B,0x0,0x54,0x55,0x52
00022e 4e55
00022f 5300
000230 4455
000231 5455      	.DB  0x55,0x4E,0x0,0x53,0x55,0x44,0x55,0x54
000232 3a20
000233 0020
000234 4f50
000235 414c      	.DB  0x20,0x3A,0x20,0x0,0x50,0x4F,0x4C,0x41
000236 003a
000237 4e41
000238 4b47
000239 5441      	.DB  0x3A,0x0,0x41,0x4E,0x47,0x4B,0x41,0x54
00023a 5400
00023b 5241
00023c 4855
00023d 5300      	.DB  0x0,0x54,0x41,0x52,0x55,0x48,0x0,0x53
00023e 6174
00023f 646e
000240 7942
000241 2e2e      	.DB  0x74,0x61,0x6E,0x64,0x42,0x79,0x2E,0x2E
000242 2e2e
000243 2e2e
000244 2e2e
000245 2e2e      	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E
000246 4700
000247 4f4f
000248 4f4f
000249 4f4f      	.DB  0x0,0x47,0x4F,0x4F,0x4F,0x4F,0x4F,0x4F
00024a 2e2e
00024b 2e2e
00024c 2e2e
00024d 2e2e      	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E
00024e 002e
00024f 4553
000250 2054
000251 4950      	.DB  0x2E,0x0,0x53,0x45,0x54,0x20,0x50,0x49
000252 0044
000253 3a31
000254 4b20
000255 2050      	.DB  0x44,0x0,0x31,0x3A,0x20,0x4B,0x50,0x20
000256 2020
000257 3a32
000258 4b20
000259 0044      	.DB  0x20,0x20,0x32,0x3A,0x20,0x4B,0x44,0x0
00025a 504b
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1291): warning: .cseg .db misalignment - padding zero byte
00025b 0000      	.DB  0x4B,0x50,0x0
                 _0x2080060:
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1293): warning: .cseg .db misalignment - padding zero byte
00025c 0001      	.DB  0x1
                 _0x2080000:
00025d 4e2d
00025e 4e41
00025f 4900
000260 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
G:\TUGAS AKHIR (BISMILLAH!!)\TUGAS AKHIR\PROGRESS\ROBOT ADROID\Program\List\ADROIT_AVR_R3_01.asm(1296): warning: .cseg .db misalignment - padding zero byte
000261 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000262 0001      	.DW  0x01
000263 0002      	.DW  0x02
000264 0188 0000 	.DD  __REG_BIT_VARS*2
                 
000266 0001      	.DW  0x01
000267 0d1d      	.DW  _LastSpeed_S0000048000
000268 018a 0000 	.DD  _0x126*2
                 
00026a 0001      	.DW  0x01
00026b 0d1f      	.DW  _LastSpeed_S0000049000
00026c 018c 0000 	.DD  _0x130*2
                 
00026e 0001      	.DW  0x01
00026f 0d21      	.DW  _LastSpeed_S000004A000
000270 018e 0000 	.DD  _0x13B*2
                 
000272 0001      	.DW  0x01
000273 0d27      	.DW  _LastSpeed_S000004F000
000274 0190 0000 	.DD  _0x19A*2
                 
000276 0001      	.DW  0x01
000277 0d29      	.DW  _LastSpeed_S0000050000
000278 0192 0000 	.DD  _0x1A4*2
                 
00027a 0004      	.DW  0x04
00027b 000a      	.DW  0x0A
00027c 01b8 0000 	.DD  _0x28A*2
                 
00027e 0001      	.DW  0x01
00027f 0d69      	.DW  __seed_G104
000280 04b8 0000 	.DD  _0x2080060*2
                 
                 _0xFFFFFFFF:
000282 0000      	.DW  0
                 
                 __RESET:
000283 94f8      	CLI
000284 27ee      	CLR  R30
000285 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000286 e0f1      	LDI  R31,1
000287 bff5      	OUT  MCUCR,R31
000288 bfe5      	OUT  MCUCR,R30
000289 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00028b e1f8      	LDI  R31,0x18
00028c bdf1      	OUT  WDTCR,R31
00028d bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00028e e08d      	LDI  R24,(14-2)+1
00028f e0a2      	LDI  R26,2
000290 27bb      	CLR  R27
                 __CLEAR_REG:
000291 93ed      	ST   X+,R30
000292 958a      	DEC  R24
000293 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000294 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000295 e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000296 e0a0      	LDI  R26,LOW(__SRAM_START)
000297 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000298 93ed      	ST   X+,R30
000299 9701      	SBIW R24,1
00029a f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00029b ece4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00029c e0f4      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
00029d e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00029e bfdb      	OUT  RAMPZ,R29
00029f 9187      	ELPM R24,Z+
0002a0 9197      	ELPM R25,Z+
0002a1 9700      	SBIW R24,0
0002a2 f081      	BREQ __GLOBAL_INI_END
0002a3 91a7      	ELPM R26,Z+
0002a4 91b7      	ELPM R27,Z+
0002a5 9007      	ELPM R0,Z+
0002a6 9017      	ELPM R1,Z+
0002a7 91c7      	ELPM R28,Z+
0002a8 91d7      	ELPM R29,Z+
0002a9 01bf      	MOVW R22,R30
0002aa b7db      	IN   R29,RAMPZ
0002ab 01f0      	MOVW R30,R0
0002ac bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
0002ad 9007      	ELPM R0,Z+
0002ae 920d      	ST   X+,R0
0002af 9701      	SBIW R24,1
0002b0 f7e1      	BRNE __GLOBAL_INI_LOOP
0002b1 01fb      	MOVW R30,R22
0002b2 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0002b3 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0002b4 bfed      	OUT  SPL,R30
0002b5 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0002b6 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0002b7 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0002b8 e0d9      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0002b9 940c 1bd0 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x900
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : ADROIT AVR Rev.3
                 ;Version : 1
                 ;Date    : 3/13/2014
                 ;Author  : Eko Henfri Binugroho
                 ;Company : ER2C
                 ;
                 ;Chip type           : ATmega128
                 ;Program type        : Application
                 ;Clock frequency     : 16,000000 MHz
                 ;Memory model        : Small
                 ;External SRAM size  : 0
                 ;Data Stack size     : 1024
                 ;*****************************************************/
                 ;
                 ;#include <stdio.h>
                 ;#include <mem.h>
                 ;#include <math.h>
                 ;#include "Include/mySystem.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 
                 	.CSEG
                 ;	sudut -> Y+0
                 _HitungSudut2:
0002bb 93ba      	ST   -Y,R27
0002bc 93aa      	ST   -Y,R26
                 ;	sudut -> Y+0
0002bd 81a8      	LD   R26,Y
0002be 81b9      	LDD  R27,Y+1
0002bf ece8      	LDI  R30,LOW(200)
0002c0 940e 2159 	CALL __MULB1W2U
0002c2 01df      	MOVW R26,R30
0002c3 e1e2      	LDI  R30,LOW(18)
0002c4 e0f0      	LDI  R31,HIGH(18)
0002c5 940e 2164 	CALL __DIVW21U
0002c7 50ec      	SUBI R30,LOW(-500)
0002c8 4ffe      	SBCI R31,HIGH(-500)
0002c9 9622      	ADIW R28,2
0002ca 9508      	RET
                 _SudutServo6:
0002cb 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
0002cc 81a8      	LD   R26,Y
0002cd 27bb      	CLR  R27
0002ce dfec      	RCALL _HitungSudut2
0002cf bdfb      	OUT  0x2A+1,R31
0002d0 bdea      	OUT  0x2A,R30
0002d1 c40b      	RJMP _0x20A000B
                 _SudutServo7:
0002d2 93aa      	ST   -Y,R26
                 ;	posisi -> Y+0
0002d3 81a8      	LD   R26,Y
0002d4 27bb      	CLR  R27
0002d5 dfe5      	RCALL _HitungSudut2
0002d6 bdf9      	OUT  0x28+1,R31
0002d7 bde8      	OUT  0x28,R30
0002d8 c404      	RJMP _0x20A000B
                 _SudutServo8:
0002d9 93aa      	ST   -Y,R26
0002da 931a      	ST   -Y,R17
0002db 930a      	ST   -Y,R16
                 ;	posisi -> Y+2
                 ;	dServo8 -> R16,R17
0002dc 81aa      	LDD  R26,Y+2
0002dd 27bb      	CLR  R27
0002de dfdc      	RCALL _HitungSudut2
0002df 018f      	MOVW R16,R30
0002e0 9310 0079 	STS  121,R17
0002e2 9300 0078 	STS  120,R16
0002e4 8119      	LDD  R17,Y+1
0002e5 8108      	LDD  R16,Y+0
0002e6 c416      	RJMP _0x20A000A
                 _SetDataMotorPWM:
0002e7 93ba      	ST   -Y,R27
0002e8 93aa      	ST   -Y,R26
                 ;	Ki -> Y+2
                 ;	Ka -> Y+0
0002e9 94e8      	CLT
0002ea f820      	BLD  R2,0
0002eb 81ab      	LDD  R26,Y+3
0002ec 23aa      	TST  R26
0002ed f472      	BRPL _0x3
0002ee 81ea      	LDD  R30,Y+2
0002ef 81fb      	LDD  R31,Y+2+1
0002f0 940e 2125 	CALL __ANEGW1
0002f2 2fef      	MOV  R30,R31
0002f3 e0f0      	LDI  R31,0
0002f4 93e0 0085 	STS  133,R30
0002f6 81ea      	LDD  R30,Y+2
0002f7 95e1      	NEG  R30
0002f8 93e0 0084 	STS  132,R30
0002fa 981d      	CBI  0x3,5
0002fb c007      	RJMP _0x6
                 _0x3:
0002fc 81eb      	LDD  R30,Y+3
0002fd 93e0 0085 	STS  133,R30
0002ff 81ea      	LDD  R30,Y+2
000300 93e0 0084 	STS  132,R30
000302 9a1d      	SBI  0x3,5
                 _0x6:
000303 81a9      	LDD  R26,Y+1
000304 23aa      	TST  R26
000305 f472      	BRPL _0x9
000306 81e8      	LD   R30,Y
000307 81f9      	LDD  R31,Y+1
000308 940e 2125 	CALL __ANEGW1
00030a 2fef      	MOV  R30,R31
00030b e0f0      	LDI  R31,0
00030c 93e0 0087 	STS  135,R30
00030e 81e8      	LD   R30,Y
00030f 95e1      	NEG  R30
000310 93e0 0086 	STS  134,R30
000312 981a      	CBI  0x3,2
000313 c007      	RJMP _0xC
                 _0x9:
000314 81e9      	LDD  R30,Y+1
000315 93e0 0087 	STS  135,R30
000317 81e8      	LD   R30,Y
000318 93e0 0086 	STS  134,R30
00031a 9a1a      	SBI  0x3,2
                 _0xC:
00031b c2fa      	RJMP _0x20A000C
                 _StopPWM:
00031c e0e0      	LDI  R30,LOW(0)
00031d 93e0 0087 	STS  135,R30
00031f 93e0 0086 	STS  134,R30
000321 93e0 0085 	STS  133,R30
000323 93e0 0084 	STS  132,R30
000325 9508      	RET
                 _SetDataMotorPID:
000326 93aa      	ST   -Y,R26
                 ;	dmKi -> Y+1
                 ;	dmKa -> Y+0
000327 81a9      	LDD  R26,Y+1
000328 30a0      	CPI  R26,0
000329 f434      	BRGE _0xF
00032a 81e9      	LDD  R30,Y+1
00032b 95e1      	NEG  R30
00032c 93e0 0900 	STS  _dMotor1,R30
00032e 981d      	CBI  0x3,5
00032f c004      	RJMP _0x12
                 _0xF:
000330 81e9      	LDD  R30,Y+1
000331 93e0 0900 	STS  _dMotor1,R30
000333 9a1d      	SBI  0x3,5
                 _0x12:
000334 81a8      	LD   R26,Y
000335 30a0      	CPI  R26,0
000336 f434      	BRGE _0x15
000337 81e8      	LD   R30,Y
000338 95e1      	NEG  R30
000339 93e0 0901 	STS  _dMotor2,R30
00033b 981a      	CBI  0x3,2
00033c c004      	RJMP _0x18
                 _0x15:
00033d 81e8      	LD   R30,Y
00033e 93e0 0901 	STS  _dMotor2,R30
000340 9a1a      	SBI  0x3,2
                 _0x18:
000341 9468      	SET
000342 f820      	BLD  R2,0
000343 940c 09d3 	JMP  _0x20A0007
                 _PIDmotor2:
000345 940e 2248 	CALL __SAVELOCR4
                 ;	Error2 -> R17
                 ;	U -> R18,R19
000347 91a0 0901 	LDS  R26,_dMotor2
000349 30a1      	CPI  R26,LOW(0x1)
00034a f414      	BRGE PC+3
00034b 940c 038c 	JMP _0x1B
00034d 91a0 0903 	LDS  R26,_dSpeed2
00034f 91e0 0901 	LDS  R30,_dMotor2
000351 1bea      	SUB  R30,R26
000352 2f1e      	MOV  R17,R30
000353 e0aa      	LDI  R26,LOW(10)
000354 021a      	MULS R17,R26
000355 0190      	MOVW R18,R0
000356 91e0 0906 	LDS  R30,_lErrorM2_S0000008000
000358 0fe1      	ADD  R30,R17
000359 91a0 0907 	LDS  R26,_iErrorM2_S0000008000
00035b 0fea      	ADD  R30,R26
00035c 93e0 0907 	STS  _iErrorM2_S0000008000,R30
00035e 91a0 0907 	LDS  R26,_iErrorM2_S0000008000
000360 35a1      	CPI  R26,LOW(0x51)
000361 f014      	BRLT _0x1C
000362 e5e0      	LDI  R30,LOW(80)
000363 c005      	RJMP _0x272
                 _0x1C:
000364 91a0 0907 	LDS  R26,_iErrorM2_S0000008000
000366 3ba0      	CPI  R26,LOW(0xB0)
000367 f41c      	BRGE _0x1E
000368 ebe0      	LDI  R30,LOW(176)
                 _0x272:
000369 93e0 0907 	STS  _iErrorM2_S0000008000,R30
                 _0x1E:
00036b 91e0 0907 	LDS  R30,_iErrorM2_S0000008000
00036d e0a5      	LDI  R26,LOW(5)
00036e 02ea      	MULS R30,R26
00036f 01f0      	MOVW R30,R0
                +
000370 0f2e     +ADD R18 , R30
000371 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                +
000372 3921     +CPI R18 , LOW ( 401 )
000373 e0e1     +LDI R30 , HIGH ( 401 )
000374 073e     +CPC R19 , R30
                 	__CPWRN 18,19,401
000375 f02c      	BRLT _0x1F
000376 e0e1      	LDI  R30,LOW(1)
000377 93e0 0087 	STS  135,R30
000379 e9e0      	LDI  R30,LOW(144)
00037a c00c      	RJMP _0x273
                 _0x1F:
00037b 2400      	CLR  R0
00037c 1602      	CP   R0,R18
00037d 0603      	CPC  R0,R19
00037e f42c      	BRGE _0x21
00037f 9330 0087 	STS  135,R19
000381 9320 0086 	STS  134,R18
000383 c005      	RJMP _0x22
                 _0x21:
000384 e0e0      	LDI  R30,LOW(0)
000385 93e0 0087 	STS  135,R30
                 _0x273:
000387 93e0 0086 	STS  134,R30
                 _0x22:
000389 9310 0906 	STS  _lErrorM2_S0000008000,R17
00038b c007      	RJMP _0x23
                 _0x1B:
00038c e0e0      	LDI  R30,LOW(0)
00038d 93e0 0087 	STS  135,R30
00038f 93e0 0086 	STS  134,R30
000391 93e0 0907 	STS  _iErrorM2_S0000008000,R30
                 _0x23:
000393 940e 224f 	CALL __LOADLOCR4
000395 c280      	RJMP _0x20A000C
                 _PIDmotor1:
000396 940e 2248 	CALL __SAVELOCR4
                 ;	Error1 -> R17
                 ;	U -> R18,R19
000398 91a0 0900 	LDS  R26,_dMotor1
00039a 30a1      	CPI  R26,LOW(0x1)
00039b f414      	BRGE PC+3
00039c 940c 03dd 	JMP _0x24
00039e 91a0 0902 	LDS  R26,_dSpeed1
0003a0 91e0 0900 	LDS  R30,_dMotor1
0003a2 1bea      	SUB  R30,R26
0003a3 2f1e      	MOV  R17,R30
0003a4 91e0 0908 	LDS  R30,_lErrorM1_S0000009000
0003a6 e0aa      	LDI  R26,LOW(10)
0003a7 02ea      	MULS R30,R26
0003a8 0190      	MOVW R18,R0
0003a9 0fe1      	ADD  R30,R17
0003aa 91a0 0909 	LDS  R26,_iErrorM1_S0000009000
0003ac 0fea      	ADD  R30,R26
0003ad 93e0 0909 	STS  _iErrorM1_S0000009000,R30
0003af 91a0 0909 	LDS  R26,_iErrorM1_S0000009000
0003b1 35a1      	CPI  R26,LOW(0x51)
0003b2 f014      	BRLT _0x25
0003b3 e5e0      	LDI  R30,LOW(80)
0003b4 c005      	RJMP _0x274
                 _0x25:
0003b5 91a0 0909 	LDS  R26,_iErrorM1_S0000009000
0003b7 3ba0      	CPI  R26,LOW(0xB0)
0003b8 f41c      	BRGE _0x27
0003b9 ebe0      	LDI  R30,LOW(176)
                 _0x274:
0003ba 93e0 0909 	STS  _iErrorM1_S0000009000,R30
                 _0x27:
0003bc 91e0 0909 	LDS  R30,_iErrorM1_S0000009000
0003be e0a5      	LDI  R26,LOW(5)
0003bf 02ea      	MULS R30,R26
0003c0 01f0      	MOVW R30,R0
                +
0003c1 0f2e     +ADD R18 , R30
0003c2 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                +
0003c3 3921     +CPI R18 , LOW ( 401 )
0003c4 e0e1     +LDI R30 , HIGH ( 401 )
0003c5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,401
0003c6 f02c      	BRLT _0x28
0003c7 e0e1      	LDI  R30,LOW(1)
0003c8 93e0 0085 	STS  133,R30
0003ca e9e0      	LDI  R30,LOW(144)
0003cb c00c      	RJMP _0x275
                 _0x28:
0003cc 2400      	CLR  R0
0003cd 1602      	CP   R0,R18
0003ce 0603      	CPC  R0,R19
0003cf f42c      	BRGE _0x2A
0003d0 9330 0085 	STS  133,R19
0003d2 9320 0084 	STS  132,R18
0003d4 c005      	RJMP _0x2B
                 _0x2A:
0003d5 e0e0      	LDI  R30,LOW(0)
0003d6 93e0 0085 	STS  133,R30
                 _0x275:
0003d8 93e0 0084 	STS  132,R30
                 _0x2B:
0003da 9310 0908 	STS  _lErrorM1_S0000009000,R17
0003dc c007      	RJMP _0x2C
                 _0x24:
0003dd e0e0      	LDI  R30,LOW(0)
0003de 93e0 0085 	STS  133,R30
0003e0 93e0 0084 	STS  132,R30
0003e2 93e0 0909 	STS  _iErrorM1_S0000009000,R30
                 _0x2C:
0003e4 940e 224f 	CALL __LOADLOCR4
0003e6 c22f      	RJMP _0x20A000C
                 _LCD_Init_Cmd:
0003e7 93aa      	ST   -Y,R26
                 ;	xData -> Y+0
0003e8 81e8      	LD   R30,Y
0003e9 7fe0      	ANDI R30,LOW(0xF0)
0003ea 60e4      	ORI  R30,4
0003eb bbeb      	OUT  0x1B,R30
                +
0003ec e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0003ed 958a     +DEC R24
0003ee f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0003ef 98da      	CBI  0x1B,2
0003f0 c2ec      	RJMP _0x20A000B
                 _LCD_Perintah:
0003f1 93aa      	ST   -Y,R26
                 ;	xData -> Y+0
0003f2 98d8      	CBI  0x1B,0
0003f3 81e8      	LD   R30,Y
0003f4 7fe0      	ANDI R30,LOW(0xF0)
0003f5 60ec      	ORI  R30,LOW(0xC)
0003f6 bbeb      	OUT  0x1B,R30
                +
0003f7 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0003f8 958a     +DEC R24
0003f9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
0003fa 98da      	CBI  0x1B,2
                +
0003fb e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0003fc 958a     +DEC R24
0003fd f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0003fe 81e8      	LD   R30,Y
0003ff 95e2      	SWAP R30
000400 7fe0      	ANDI R30,0xF0
000401 60ec      	ORI  R30,LOW(0xC)
000402 bbeb      	OUT  0x1B,R30
                +
000403 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000404 958a     +DEC R24
000405 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000406 98da      	CBI  0x1B,2
                +
000407 ef80     +LDI R24 , LOW ( 2800 )
000408 e09a     +LDI R25 , HIGH ( 2800 )
                +__DELAY_USW_LOOP :
000409 9701     +SBIW R24 , 1
00040a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 2800
00040b 9ada      	SBI  0x1B,2
00040c c2d0      	RJMP _0x20A000B
                 _LCD_Data:
00040d 93aa      	ST   -Y,R26
                 ;	xData -> Y+0
00040e 9ad8      	SBI  0x1B,0
00040f 81e8      	LD   R30,Y
000410 7fe0      	ANDI R30,LOW(0xF0)
000411 60ed      	ORI  R30,LOW(0xD)
000412 bbeb      	OUT  0x1B,R30
                +
000413 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000414 958a     +DEC R24
000415 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000416 98da      	CBI  0x1B,2
                +
000417 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000418 958a     +DEC R24
000419 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
00041a 81e8      	LD   R30,Y
00041b 95e2      	SWAP R30
00041c 7fe0      	ANDI R30,0xF0
00041d 60ed      	ORI  R30,LOW(0xD)
00041e bbeb      	OUT  0x1B,R30
                +
00041f e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000420 958a     +DEC R24
000421 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000422 98da      	CBI  0x1B,2
                +
000423 ed85     +LDI R24 , LOW ( 213 )
                +__DELAY_USB_LOOP :
000424 958a     +DEC R24
000425 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 213
000426 9ada      	SBI  0x1B,2
000427 c2b5      	RJMP _0x20A000B
                 _LCD_Init:
000428 e3a2      	LDI  R26,LOW(50)
000429 e0b0      	LDI  R27,0
00042a 940e 1f6f 	CALL _delay_ms
00042c e3a0      	LDI  R26,LOW(48)
00042d dfb9      	RCALL _LCD_Init_Cmd
00042e e0a5      	LDI  R26,LOW(5)
00042f e0b0      	LDI  R27,0
000430 940e 1f6f 	CALL _delay_ms
000432 e3a0      	LDI  R26,LOW(48)
000433 dfb3      	RCALL _LCD_Init_Cmd
000434 e0a1      	LDI  R26,LOW(1)
000435 e0b0      	LDI  R27,0
000436 940e 1f6f 	CALL _delay_ms
000438 e3a0      	LDI  R26,LOW(48)
000439 dfad      	RCALL _LCD_Init_Cmd
00043a e0a1      	LDI  R26,LOW(1)
00043b e0b0      	LDI  R27,0
00043c 940e 1f6f 	CALL _delay_ms
00043e e2a0      	LDI  R26,LOW(32)
00043f dfa7      	RCALL _LCD_Init_Cmd
000440 e2a8      	LDI  R26,LOW(40)
000441 dfaf      	RCALL _LCD_Perintah
000442 e1a0      	LDI  R26,LOW(16)
000443 dfad      	RCALL _LCD_Perintah
000444 e0ac      	LDI  R26,LOW(12)
000445 dfab      	RCALL _LCD_Perintah
000446 e0a6      	LDI  R26,LOW(6)
000447 dfa9      	RCALL _LCD_Perintah
000448 c033      	RJMP _0x20A000E
                 _LCD_GotoXY:
000449 93aa      	ST   -Y,R26
00044a 931a      	ST   -Y,R17
                 ;	x -> Y+2
                 ;	y -> Y+1
                 ;	baris -> R17
00044b 81e9      	LDD  R30,Y+1
00044c 30e0      	CPI  R30,0
00044d f419      	BRNE _0x3F
00044e 81aa      	LDD  R26,Y+2
00044f 58a0      	SUBI R26,-LOW(128)
000450 c002      	RJMP _0x276
                 _0x3F:
000451 81aa      	LDD  R26,Y+2
000452 54a0      	SUBI R26,-LOW(192)
                 _0x276:
000453 df9d      	RCALL _LCD_Perintah
000454 c2a7      	RJMP _0x20A0009
                 _LCD_TextF:
000455 940e 2206 	CALL __PUTPARD2
                 ;	*text -> Y+0
                 _0x41:
000457 940e 21f2 	CALL __GETD1S0
                +
000459 bf6b     +OUT RAMPZ , R22
00045a 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00045b 30e0      	CPI  R30,0
00045c f099      	BREQ _0x43
00045d 940e 21f2 	CALL __GETD1S0
                +
00045f bf6b     +OUT RAMPZ , R22
000460 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
000461 dfab      	RCALL _LCD_Data
000462 01de      	MOVW R26,R28
000463 940e 21df 	CALL __GETD1P_INC
                +
000465 5fef     +SUBI R30 , LOW ( - 1 )
000466 4fff     +SBCI R31 , HIGH ( - 1 )
000467 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000468 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
000469 940e 21e4 	CALL __PUTDP1_DEC
                +
00046b 50e1     +SUBI R30 , LOW ( 1 )
00046c 40f0     +SBCI R31 , HIGH ( 1 )
00046d 4060     +SBCI R22 , BYTE3 ( 1 )
00046e 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00046f cfe7      	RJMP _0x41
                 _0x43:
000470 c1a5      	RJMP _0x20A000C
                 ;	*text -> Y+0
                 _LCD_TulisF:
000471 940e 2206 	CALL __PUTPARD2
                 ;	Baris -> Y+4
                 ;	*text -> Y+0
000473 e0e0      	LDI  R30,LOW(0)
000474 93ea      	ST   -Y,R30
000475 81ad      	LDD  R26,Y+5
000476 dfd2      	RCALL _LCD_GotoXY
000477 940e 21f7 	CALL __GETD2S0
000479 dfdb      	RCALL _LCD_TextF
00047a 9625      	ADIW R28,5
00047b 9508      	RET
                 _LCD_Hapus:
                 _0x20A000E:
00047c e0a1      	LDI  R26,LOW(1)
00047d df73      	RCALL _LCD_Perintah
00047e 9508      	RET
                 ;	Baris -> Y+1
                 ;	i -> R17
                 ;	Baris -> Y+1
                 ;	i -> R17
                 _LCD_HapusKanan:
00047f 93aa      	ST   -Y,R26
000480 931a      	ST   -Y,R17
000481 930a      	ST   -Y,R16
                 ;	Baris -> Y+2
                 ;	i -> R17
                 ;	j -> R16
000482 81ea      	LDD  R30,Y+2
000483 e4a0      	LDI  R26,LOW(64)
000484 9fea      	MUL  R30,R26
000485 01f0      	MOVW R30,R0
000486 58e0      	SUBI R30,-LOW(128)
000487 2f0e      	MOV  R16,R30
000488 e01f      	LDI  R17,LOW(15)
                 _0x4E:
000489 efef      	LDI  R30,LOW(255)
00048a 17e1      	CP   R30,R17
00048b f45c      	BRGE _0x4F
00048c 2fa1      	MOV  R26,R17
00048d 0fa0      	ADD  R26,R16
00048e df62      	RCALL _LCD_Perintah
00048f e2a0      	LDI  R26,LOW(32)
000490 df7c      	RCALL _LCD_Data
000491 e3a2      	LDI  R26,LOW(50)
000492 e0b0      	LDI  R27,0
000493 940e 1f6f 	CALL _delay_ms
000495 5011      	SUBI R17,1
000496 cff2      	RJMP _0x4E
                 _0x4F:
000497 8119      	LDD  R17,Y+1
000498 8108      	LDD  R16,Y+0
000499 c263      	RJMP _0x20A000A
                 _LCD_TulisKiri:
00049a 940e 2206 	CALL __PUTPARD2
00049c 931a      	ST   -Y,R17
                 ;	Baris -> Y+5
                 ;	*text -> Y+1
                 ;	i -> R17
00049d e0e0      	LDI  R30,LOW(0)
00049e 93ea      	ST   -Y,R30
00049f 81ae      	LDD  R26,Y+6
0004a0 dfa8      	RCALL _LCD_GotoXY
0004a1 e010      	LDI  R17,LOW(0)
                 _0x51:
0004a2 3110      	CPI  R17,16
0004a3 f498      	BRSH _0x52
0004a4 2fe1      	MOV  R30,R17
                +
0004a5 81a9     +LDD R26 , Y + 1
0004a6 81ba     +LDD R27 , Y + 1 + 1
0004a7 818b     +LDD R24 , Y + 1 + 2
0004a8 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
0004a9 27ff      	CLR  R31
0004aa 2766      	CLR  R22
0004ab 2777      	CLR  R23
0004ac 940e 211b 	CALL __ADDD12
                +
0004ae bf6b     +OUT RAMPZ , R22
0004af 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
0004b0 df5c      	RCALL _LCD_Data
0004b1 e3a2      	LDI  R26,LOW(50)
0004b2 e0b0      	LDI  R27,0
0004b3 940e 1f6f 	CALL _delay_ms
0004b5 5f1f      	SUBI R17,-1
0004b6 cfeb      	RJMP _0x51
                 _0x52:
0004b7 8118      	LDD  R17,Y+0
0004b8 9626      	ADIW R28,6
0004b9 9508      	RET
                 _LCD_TulisKanan:
0004ba 940e 2206 	CALL __PUTPARD2
0004bc 931a      	ST   -Y,R17
0004bd 930a      	ST   -Y,R16
                 ;	Baris -> Y+6
                 ;	*text -> Y+2
                 ;	i -> R17
                 ;	j -> R16
0004be 81ee      	LDD  R30,Y+6
0004bf e4a0      	LDI  R26,LOW(64)
0004c0 9fea      	MUL  R30,R26
0004c1 01f0      	MOVW R30,R0
0004c2 58e0      	SUBI R30,-LOW(128)
0004c3 2f0e      	MOV  R16,R30
0004c4 e01f      	LDI  R17,LOW(15)
                 _0x54:
0004c5 efef      	LDI  R30,LOW(255)
0004c6 17e1      	CP   R30,R17
0004c7 f4ac      	BRGE _0x55
0004c8 2fa1      	MOV  R26,R17
0004c9 0fa0      	ADD  R26,R16
0004ca df26      	RCALL _LCD_Perintah
0004cb 2fe1      	MOV  R30,R17
                +
0004cc 81aa     +LDD R26 , Y + 2
0004cd 81bb     +LDD R27 , Y + 2 + 1
0004ce 818c     +LDD R24 , Y + 2 + 2
0004cf 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0004d0 940e 2136 	CALL __CBD1
0004d2 940e 211b 	CALL __ADDD12
                +
0004d4 bf6b     +OUT RAMPZ , R22
0004d5 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
0004d6 df36      	RCALL _LCD_Data
0004d7 e3a2      	LDI  R26,LOW(50)
0004d8 e0b0      	LDI  R27,0
0004d9 940e 1f6f 	CALL _delay_ms
0004db 5011      	SUBI R17,1
0004dc cfe8      	RJMP _0x54
                 _0x55:
0004dd c03e      	RJMP _0x20A000D
                 _LCD_TulisTengah:
0004de 940e 2206 	CALL __PUTPARD2
0004e0 931a      	ST   -Y,R17
0004e1 930a      	ST   -Y,R16
                 ;	Baris -> Y+6
                 ;	*text -> Y+2
                 ;	i -> R17
                 ;	j -> R16
0004e2 81ee      	LDD  R30,Y+6
0004e3 e4a0      	LDI  R26,LOW(64)
0004e4 9fea      	MUL  R30,R26
0004e5 01f0      	MOVW R30,R0
0004e6 58e0      	SUBI R30,-LOW(128)
0004e7 2f0e      	MOV  R16,R30
0004e8 e017      	LDI  R17,LOW(7)
                 _0x57:
0004e9 efef      	LDI  R30,LOW(255)
0004ea 17e1      	CP   R30,R17
0004eb f584      	BRGE _0x58
0004ec 2fa1      	MOV  R26,R17
0004ed 0fa0      	ADD  R26,R16
0004ee df02      	RCALL _LCD_Perintah
0004ef 2fe1      	MOV  R30,R17
                +
0004f0 81aa     +LDD R26 , Y + 2
0004f1 81bb     +LDD R27 , Y + 2 + 1
0004f2 818c     +LDD R24 , Y + 2 + 2
0004f3 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0004f4 940e 2136 	CALL __CBD1
0004f6 940e 211b 	CALL __ADDD12
                +
0004f8 bf6b     +OUT RAMPZ , R22
0004f9 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
0004fa df12      	RCALL _LCD_Data
0004fb e3a2      	LDI  R26,LOW(50)
0004fc e0b0      	LDI  R27,0
0004fd 940e 1f6f 	CALL _delay_ms
0004ff 2fe0      	MOV  R30,R16
000500 1be1      	SUB  R30,R17
000501 5fe1      	SUBI R30,-LOW(15)
000502 2fae      	MOV  R26,R30
000503 deed      	RCALL _LCD_Perintah
000504 2fe1      	MOV  R30,R17
                +
000505 81aa     +LDD R26 , Y + 2
000506 81bb     +LDD R27 , Y + 2 + 1
000507 818c     +LDD R24 , Y + 2 + 2
000508 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000509 940e 2136 	CALL __CBD1
00050b 940e 2210 	CALL __SWAPD12
00050d 940e 2120 	CALL __SUBD12
                +
00050f 5fe1     +SUBI R30 , LOW ( - 15 )
000510 4fff     +SBCI R31 , HIGH ( - 15 )
000511 4f6f     +SBCI R22 , BYTE3 ( - 15 )
000512 4f7f     +SBCI R23 , BYTE4 ( - 15 )
                 	__ADDD1N 15
                +
000513 bf6b     +OUT RAMPZ , R22
000514 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
000515 def7      	RCALL _LCD_Data
000516 e3a2      	LDI  R26,LOW(50)
000517 e0b0      	LDI  R27,0
000518 940e 1f6f 	CALL _delay_ms
00051a 5011      	SUBI R17,1
00051b cfcd      	RJMP _0x57
                 _0x58:
                 _0x20A000D:
00051c 8119      	LDD  R17,Y+1
00051d 8108      	LDD  R16,Y+0
00051e 9627      	ADIW R28,7
00051f 9508      	RET
                 ;	Baris -> Y+6
                 ;	*text -> Y+2
                 ;	i -> R17
                 ;	j -> R16
                 _LCD_Angka4:
000520 93ba      	ST   -Y,R27
000521 93aa      	ST   -Y,R26
                 ;	x -> Y+0
000522 81a9      	LDD  R26,Y+1
000523 23aa      	TST  R26
000524 f452      	BRPL _0x5C
000525 81e8      	LD   R30,Y
000526 81f9      	LDD  R31,Y+1
000527 efaf      	LDI  R26,LOW(65535)
000528 efbf      	LDI  R27,HIGH(65535)
000529 940e 215f 	CALL __MULW12
00052b 83e8      	ST   Y,R30
00052c 83f9      	STD  Y+1,R31
00052d e2ad      	LDI  R26,LOW(45)
00052e dede      	RCALL _LCD_Data
                 _0x5C:
00052f 81a8      	LD   R26,Y
000530 81b9      	LDD  R27,Y+1
000531 eee8      	LDI  R30,LOW(1000)
000532 e0f3      	LDI  R31,HIGH(1000)
000533 940e 2177 	CALL __DIVW21
000535 5de0      	SUBI R30,-LOW(48)
000536 2fae      	MOV  R26,R30
000537 ded5      	RCALL _LCD_Data
000538 81a8      	LD   R26,Y
000539 81b9      	LDD  R27,Y+1
00053a eee8      	LDI  R30,LOW(1000)
00053b e0f3      	LDI  R31,HIGH(1000)
00053c 940e 21a6 	CALL __MODW21
00053e 01df      	MOVW R26,R30
00053f e6e4      	LDI  R30,LOW(100)
000540 e0f0      	LDI  R31,HIGH(100)
000541 940e 2177 	CALL __DIVW21
000543 5de0      	SUBI R30,-LOW(48)
000544 2fae      	MOV  R26,R30
000545 dec7      	RCALL _LCD_Data
000546 81a8      	LD   R26,Y
000547 81b9      	LDD  R27,Y+1
000548 e6e4      	LDI  R30,LOW(100)
000549 e0f0      	LDI  R31,HIGH(100)
00054a 940e 21a6 	CALL __MODW21
00054c 01df      	MOVW R26,R30
00054d e0ea      	LDI  R30,LOW(10)
00054e e0f0      	LDI  R31,HIGH(10)
00054f 940e 2177 	CALL __DIVW21
000551 5de0      	SUBI R30,-LOW(48)
000552 2fae      	MOV  R26,R30
000553 deb9      	RCALL _LCD_Data
000554 81a8      	LD   R26,Y
000555 81b9      	LDD  R27,Y+1
000556 e0ea      	LDI  R30,LOW(10)
000557 e0f0      	LDI  R31,HIGH(10)
000558 940e 21a6 	CALL __MODW21
00055a 5de0      	SUBI R30,-LOW(48)
00055b 2fae      	MOV  R26,R30
00055c deb0      	RCALL _LCD_Data
00055d 940c 09d3 	JMP  _0x20A0007
                 _LCD_Angka3:
00055f 93ba      	ST   -Y,R27
000560 93aa      	ST   -Y,R26
                 ;	x -> Y+0
000561 81a9      	LDD  R26,Y+1
000562 23aa      	TST  R26
000563 f452      	BRPL _0x5D
000564 81e8      	LD   R30,Y
000565 81f9      	LDD  R31,Y+1
000566 efaf      	LDI  R26,LOW(65535)
000567 efbf      	LDI  R27,HIGH(65535)
000568 940e 215f 	CALL __MULW12
00056a 83e8      	ST   Y,R30
00056b 83f9      	STD  Y+1,R31
00056c e2ad      	LDI  R26,LOW(45)
00056d de9f      	RCALL _LCD_Data
                 _0x5D:
00056e 81a8      	LD   R26,Y
00056f 81b9      	LDD  R27,Y+1
000570 e6e4      	LDI  R30,LOW(100)
000571 e0f0      	LDI  R31,HIGH(100)
000572 940e 2177 	CALL __DIVW21
000574 5de0      	SUBI R30,-LOW(48)
000575 2fae      	MOV  R26,R30
000576 de96      	RCALL _LCD_Data
000577 81a8      	LD   R26,Y
000578 81b9      	LDD  R27,Y+1
000579 e6e4      	LDI  R30,LOW(100)
00057a e0f0      	LDI  R31,HIGH(100)
00057b 940e 21a6 	CALL __MODW21
00057d 01df      	MOVW R26,R30
00057e e0ea      	LDI  R30,LOW(10)
00057f e0f0      	LDI  R31,HIGH(10)
000580 940e 2177 	CALL __DIVW21
000582 5de0      	SUBI R30,-LOW(48)
000583 2fae      	MOV  R26,R30
000584 de88      	RCALL _LCD_Data
000585 81a8      	LD   R26,Y
000586 81b9      	LDD  R27,Y+1
000587 e0ea      	LDI  R30,LOW(10)
000588 e0f0      	LDI  R31,HIGH(10)
000589 940e 21a6 	CALL __MODW21
00058b 5de0      	SUBI R30,-LOW(48)
00058c 2fae      	MOV  R26,R30
00058d de7f      	RCALL _LCD_Data
00058e 940c 09d3 	JMP  _0x20A0007
                 ;	x -> Y+0
                 ;	x -> Y+0
                 ;	x -> Y+1
                 ;	i -> R17
                 _I2C_Init:
000590 e0e0      	LDI  R30,LOW(0)
000591 93e0 0071 	STS  113,R30
000593 e4e8      	LDI  R30,LOW(72)
000594 93e0 0070 	STS  112,R30
000596 9508      	RET
                 ;	address -> Y+1
                 ;	twst -> R17
                 ;	address -> Y+1
                 ;	twst -> R17
                 ;	address -> Y+0
                 ;	data -> Y+1
                 ;	twst -> R17
                 _BuzzerOff:
000597 e0e0      	LDI  R30,LOW(0)
000598 bfe3      	OUT  0x33,R30
000599 98c4      	CBI  0x18,4
00059a bfe0      	OUT  0x30,R30
00059b 9508      	RET
                 _FBuzzer:
00059c 93ba      	ST   -Y,R27
00059d 93aa      	ST   -Y,R26
                 ;	x -> Y+0
00059e 81a8      	LD   R26,Y
00059f 81b9      	LDD  R27,Y+1
0005a0 37ad      	CPI  R26,LOW(0x7D)
0005a1 e0e0      	LDI  R30,HIGH(0x7D)
0005a2 07be      	CPC  R27,R30
0005a3 f020      	BRLO _0x92
0005a4 31a1      	CPI  R26,LOW(0x2711)
0005a5 e2e7      	LDI  R30,HIGH(0x2711)
0005a6 07be      	CPC  R27,R30
0005a7 f008      	BRLO _0x93
                 _0x92:
0005a8 c060      	RJMP _0x91
                 _0x93:
0005a9 81a8      	LD   R26,Y
0005aa 81b9      	LDD  R27,Y+1
0005ab 3da0      	CPI  R26,LOW(0x7D0)
0005ac e0e7      	LDI  R30,HIGH(0x7D0)
0005ad 07be      	CPC  R27,R30
0005ae f078      	BRLO _0x94
0005af e1ea      	LDI  R30,LOW(26)
0005b0 bfe3      	OUT  0x33,R30
0005b1 e0e0      	LDI  R30,LOW(0)
0005b2 bfe2      	OUT  0x32,R30
0005b3 81e8      	LD   R30,Y
0005b4 81f9      	LDD  R31,Y+1
0005b5 2766      	CLR  R22
0005b6 2777      	CLR  R23
                +
0005b7 e2a0     +LDI R26 , LOW ( 0x7A120 )
0005b8 eab1     +LDI R27 , HIGH ( 0x7A120 )
0005b9 e087     +LDI R24 , BYTE3 ( 0x7A120 )
0005ba e090     +LDI R25 , BYTE4 ( 0x7A120 )
                 	__GETD2N 0x7A120
0005bb 940e 21a1 	CALL __DIVD21
0005bd bfe1      	OUT  0x31,R30
                 _0x94:
0005be 81a8      	LD   R26,Y
0005bf 81b9      	LDD  R27,Y+1
0005c0 3ea8      	CPI  R26,LOW(0x3E8)
0005c1 e0e3      	LDI  R30,HIGH(0x3E8)
0005c2 07be      	CPC  R27,R30
0005c3 f078      	BRLO _0x95
0005c4 e1eb      	LDI  R30,LOW(27)
0005c5 bfe3      	OUT  0x33,R30
0005c6 e0e0      	LDI  R30,LOW(0)
0005c7 bfe2      	OUT  0x32,R30
0005c8 81e8      	LD   R30,Y
0005c9 81f9      	LDD  R31,Y+1
0005ca 2766      	CLR  R22
0005cb 2777      	CLR  R23
                +
0005cc e9a0     +LDI R26 , LOW ( 0x3D090 )
0005cd edb0     +LDI R27 , HIGH ( 0x3D090 )
0005ce e083     +LDI R24 , BYTE3 ( 0x3D090 )
0005cf e090     +LDI R25 , BYTE4 ( 0x3D090 )
                 	__GETD2N 0x3D090
0005d0 940e 21a1 	CALL __DIVD21
0005d2 c034      	RJMP _0x278
                 _0x95:
0005d3 81a8      	LD   R26,Y
0005d4 81b9      	LDD  R27,Y+1
0005d5 3fa4      	CPI  R26,LOW(0x1F4)
0005d6 e0e1      	LDI  R30,HIGH(0x1F4)
0005d7 07be      	CPC  R27,R30
0005d8 f078      	BRLO _0x97
0005d9 e1ec      	LDI  R30,LOW(28)
0005da bfe3      	OUT  0x33,R30
0005db e0e0      	LDI  R30,LOW(0)
0005dc bfe2      	OUT  0x32,R30
0005dd 81e8      	LD   R30,Y
0005de 81f9      	LDD  R31,Y+1
0005df 2766      	CLR  R22
0005e0 2777      	CLR  R23
                +
0005e1 e4a8     +LDI R26 , LOW ( 0x1E848 )
0005e2 eeb8     +LDI R27 , HIGH ( 0x1E848 )
0005e3 e081     +LDI R24 , BYTE3 ( 0x1E848 )
0005e4 e090     +LDI R25 , BYTE4 ( 0x1E848 )
                 	__GETD2N 0x1E848
0005e5 940e 21a1 	CALL __DIVD21
0005e7 c01f      	RJMP _0x278
                 _0x97:
0005e8 81a8      	LD   R26,Y
0005e9 81b9      	LDD  R27,Y+1
0005ea 3faa      	CPI  R26,LOW(0xFA)
0005eb e0e0      	LDI  R30,HIGH(0xFA)
0005ec 07be      	CPC  R27,R30
0005ed f078      	BRLO _0x99
0005ee e1ed      	LDI  R30,LOW(29)
0005ef bfe3      	OUT  0x33,R30
0005f0 e0e0      	LDI  R30,LOW(0)
0005f1 bfe2      	OUT  0x32,R30
0005f2 81e8      	LD   R30,Y
0005f3 81f9      	LDD  R31,Y+1
0005f4 2766      	CLR  R22
0005f5 2777      	CLR  R23
                +
0005f6 eaac     +LDI R26 , LOW ( 0x107AC )
0005f7 e0b7     +LDI R27 , HIGH ( 0x107AC )
0005f8 e081     +LDI R24 , BYTE3 ( 0x107AC )
0005f9 e090     +LDI R25 , BYTE4 ( 0x107AC )
                 	__GETD2N 0x107AC
0005fa 940e 21a1 	CALL __DIVD21
0005fc c00a      	RJMP _0x278
                 _0x99:
0005fd e1ee      	LDI  R30,LOW(30)
0005fe bfe3      	OUT  0x33,R30
0005ff e0e0      	LDI  R30,LOW(0)
000600 bfe2      	OUT  0x32,R30
000601 81e8      	LD   R30,Y
000602 81f9      	LDD  R31,Y+1
000603 eda6      	LDI  R26,LOW(33750)
000604 e8b3      	LDI  R27,HIGH(33750)
000605 940e 2164 	CALL __DIVW21U
                 _0x278:
000607 bfe1      	OUT  0x31,R30
000608 c001      	RJMP _0x9B
                 _0x91:
000609 df8d      	RCALL _BuzzerOff
                 _0x9B:
00060a 940c 09d3 	JMP  _0x20A0007
                 _Buzzer:
00060c 93ba      	ST   -Y,R27
00060d 93aa      	ST   -Y,R26
                 ;	Frek -> Y+2
                 ;	Tempo -> Y+0
00060e 81aa      	LDD  R26,Y+2
00060f 81bb      	LDD  R27,Y+2+1
000610 df8b      	RCALL _FBuzzer
000611 81a8      	LD   R26,Y
000612 81b9      	LDD  R27,Y+1
000613 940e 1f6f 	CALL _delay_ms
000615 df81      	RCALL _BuzzerOff
                 _0x20A000C:
000616 9624      	ADIW R28,4
000617 9508      	RET
                 _usart0_rx_isr:
000618 93aa      	ST   -Y,R26
000619 93ea      	ST   -Y,R30
00061a 93fa      	ST   -Y,R31
00061b b7ef      	IN   R30,SREG
00061c 93ea      	ST   -Y,R30
00061d 931a      	ST   -Y,R17
00061e 930a      	ST   -Y,R16
                 ;	status0 -> R17
                 ;	data0 -> R16
00061f b11b      	IN   R17,11
000620 b10c      	IN   R16,12
000621 2fe1      	MOV  R30,R17
000622 71ec      	ANDI R30,LOW(0x1C)
000623 f4c9      	BRNE _0x9C
000624 01f2      	MOVW R30,R4
000625 9631      	ADIW R30,1
000626 012f      	MOVW R4,R30
000627 9731      	SBIW R30,1
000628 5fe6      	SUBI R30,LOW(-_rx_buffer0)
000629 4ff6      	SBCI R31,HIGH(-_rx_buffer0)
00062a 8300      	ST   Z,R16
00062b e0e0      	LDI  R30,LOW(512)
00062c e0f2      	LDI  R31,HIGH(512)
00062d 15e4      	CP   R30,R4
00062e 05f5      	CPC  R31,R5
00062f f411      	BRNE _0x9D
000630 2444      	CLR  R4
000631 2455      	CLR  R5
                 _0x9D:
000632 01f4      	MOVW R30,R8
000633 9631      	ADIW R30,1
000634 014f      	MOVW R8,R30
000635 30e0      	CPI  R30,LOW(0x200)
000636 e0a2      	LDI  R26,HIGH(0x200)
000637 07fa      	CPC  R31,R26
000638 f421      	BRNE _0x9E
000639 2488      	CLR  R8
00063a 2499      	CLR  R9
00063b 9468      	SET
00063c f825      	BLD  R2,5
                 _0x9E:
                 _0x9C:
00063d 9109      	LD   R16,Y+
00063e 9119      	LD   R17,Y+
00063f 91e9      	LD   R30,Y+
000640 bfef      	OUT  SREG,R30
000641 91f9      	LD   R31,Y+
000642 91e9      	LD   R30,Y+
000643 91a9      	LD   R26,Y+
000644 9518      	RETI
                 _getchar:
000645 931a      	ST   -Y,R17
                 ;	data -> R17
                 _0x9F:
000646 2c08      	MOV  R0,R8
000647 2809      	OR   R0,R9
000648 f3e9      	BREQ _0x9F
000649 01f3      	MOVW R30,R6
00064a 9631      	ADIW R30,1
00064b 013f      	MOVW R6,R30
00064c 9731      	SBIW R30,1
00064d 5fe6      	SUBI R30,LOW(-_rx_buffer0)
00064e 4ff6      	SBCI R31,HIGH(-_rx_buffer0)
00064f 8110      	LD   R17,Z
000650 e0e0      	LDI  R30,LOW(512)
000651 e0f2      	LDI  R31,HIGH(512)
000652 15e6      	CP   R30,R6
000653 05f7      	CPC  R31,R7
000654 f411      	BRNE _0xA2
000655 2466      	CLR  R6
000656 2477      	CLR  R7
                 _0xA2:
000657 94f8      	cli
000658 01f4      	MOVW R30,R8
000659 9731      	SBIW R30,1
00065a 014f      	MOVW R8,R30
00065b 9478      	sei
00065c 2fe1      	MOV  R30,R17
00065d 9119      	LD   R17,Y+
00065e 9508      	RET
                 _usart1_rx_isr:
00065f 93aa      	ST   -Y,R26
000660 93ea      	ST   -Y,R30
000661 93fa      	ST   -Y,R31
000662 b7ef      	IN   R30,SREG
000663 93ea      	ST   -Y,R30
000664 9725      	SBIW R28,5
                 ;	Pointer_X -> Y+4
                 ;	Pointer_Y -> Y+3
                 ;	Flag_Serial_Step -> Y+2
                 ;	status -> Y+1
                 ;	data -> Y+0
000665 91e0 009b 	LDS  R30,155
000667 83e9      	STD  Y+1,R30
000668 91e0 009c 	LDS  R30,156
00066a 83e8      	ST   Y,R30
00066b 81e9      	LDD  R30,Y+1
00066c 71ec      	ANDI R30,LOW(0x1C)
00066d f519      	BRNE _0xA3
00066e 91e0 0d0a 	LDS  R30,_rx_wr_index1
000670 e0f0      	LDI  R31,0
000671 5fe6      	SUBI R30,LOW(-_rx_buffer1)
000672 4ff4      	SBCI R31,HIGH(-_rx_buffer1)
000673 81a8      	LD   R26,Y
000674 83a0      	STD  Z+0,R26
000675 91e0 0d0a 	LDS  R30,_rx_wr_index1
000677 5fef      	SUBI R30,-LOW(1)
000678 93e0 0d0a 	STS  _rx_wr_index1,R30
00067a e0f0      	LDI  R31,0
00067b 30e0      	CPI  R30,LOW(0x200)
00067c e0a2      	LDI  R26,HIGH(0x200)
00067d 07fa      	CPC  R31,R26
00067e f419      	BRNE _0xA4
00067f e0e0      	LDI  R30,LOW(0)
000680 93e0 0d0a 	STS  _rx_wr_index1,R30
                 _0xA4:
000682 91e0 0d0c 	LDS  R30,_rx_counter1
000684 5fef      	SUBI R30,-LOW(1)
000685 93e0 0d0c 	STS  _rx_counter1,R30
000687 e0f0      	LDI  R31,0
000688 30e0      	CPI  R30,LOW(0x200)
000689 e0a2      	LDI  R26,HIGH(0x200)
00068a 07fa      	CPC  R31,R26
00068b f429      	BRNE _0xA5
00068c e0e0      	LDI  R30,LOW(0)
00068d 93e0 0d0c 	STS  _rx_counter1,R30
00068f 9468      	SET
000690 f826      	BLD  R2,6
                 _0xA5:
                 _0xA3:
000691 9625      	ADIW R28,5
000692 91e9      	LD   R30,Y+
000693 bfef      	OUT  SREG,R30
000694 91f9      	LD   R31,Y+
000695 91e9      	LD   R30,Y+
000696 91a9      	LD   R26,Y+
000697 9518      	RETI
                 _BacaSerial1:
000698 93ba      	ST   -Y,R27
000699 93aa      	ST   -Y,R26
00069a 940e 2248 	CALL __SAVELOCR4
                 ;	TimeOut -> Y+4
                 ;	i -> R16,R17
                 ;	data -> R19
00069c 94e8      	CLT
00069d f822      	BLD  R2,2
                +
00069e e000     +LDI R16 , LOW ( 0 )
00069f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA7:
0006a0 81ec      	LDD  R30,Y+4
0006a1 81fd      	LDD  R31,Y+4+1
0006a2 170e      	CP   R16,R30
0006a3 071f      	CPC  R17,R31
0006a4 f558      	BRSH _0xA8
0006a5 91e0 0d0c 	LDS  R30,_rx_counter1
0006a7 30e0      	CPI  R30,0
0006a8 f109      	BREQ _0xA9
0006a9 9468      	SET
0006aa f822      	BLD  R2,2
0006ab 91e0 0d0b 	LDS  R30,_rx_rd_index1
0006ad e0f0      	LDI  R31,0
0006ae 5fe6      	SUBI R30,LOW(-_rx_buffer1)
0006af 4ff4      	SBCI R31,HIGH(-_rx_buffer1)
0006b0 8130      	LD   R19,Z
0006b1 91e0 0d0b 	LDS  R30,_rx_rd_index1
0006b3 5fef      	SUBI R30,-LOW(1)
0006b4 93e0 0d0b 	STS  _rx_rd_index1,R30
0006b6 e0f0      	LDI  R31,0
0006b7 30e0      	CPI  R30,LOW(0x200)
0006b8 e0a2      	LDI  R26,HIGH(0x200)
0006b9 07fa      	CPC  R31,R26
0006ba f419      	BRNE _0xAA
0006bb e0e0      	LDI  R30,LOW(0)
0006bc 93e0 0d0b 	STS  _rx_rd_index1,R30
                 _0xAA:
0006be 94f8      	cli
0006bf 91e0 0d0c 	LDS  R30,_rx_counter1
0006c1 50e1      	SUBI R30,LOW(1)
0006c2 93e0 0d0c 	STS  _rx_counter1,R30
0006c4 9478      	sei
0006c5 2fe3      	MOV  R30,R19
0006c6 940e 224f 	CALL __LOADLOCR4
0006c8 940c 0c11 	JMP  _0x20A0006
                 _0xA9:
                +
0006ca e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0006cb 958a     +DEC R24
0006cc f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                +
0006cd 5f0f     +SUBI R16 , LOW ( - 1 )
0006ce 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0006cf cfd0      	RJMP _0xA7
                 _0xA8:
0006d0 e0e0      	LDI  R30,LOW(0)
0006d1 940e 224f 	CALL __LOADLOCR4
0006d3 940c 0c11 	JMP  _0x20A0006
                 ;	data -> R17
                 _putchar1:
0006d5 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0xAF:
0006d6 91e0 009b 	LDS  R30,155
0006d8 72e0      	ANDI R30,LOW(0x20)
0006d9 f3e1      	BREQ _0xAF
0006da 81e8      	LD   R30,Y
0006db 93e0 009c 	STS  156,R30
                 _0x20A000B:
0006dd 9621      	ADIW R28,1
0006de 9508      	RET
                 _BacaSensor:
0006df 93aa      	ST   -Y,R26
                 ;	Alamat -> Y+1
                 ;	Protokol -> Y+0
0006e0 81e9      	LDD  R30,Y+1
0006e1 81a8      	LD   R26,Y
0006e2 2bea      	OR   R30,R26
0006e3 2fae      	MOV  R26,R30
0006e4 dff0      	RCALL _putchar1
0006e5 940c 09d3 	JMP  _0x20A0007
                 ;	Alamat -> Y+2
                 ;	Protokol -> Y+1
                 ;	filter -> R17
                 _TungguTombolKalibrasiEx:
0006e7 93aa      	ST   -Y,R26
0006e8 931a      	ST   -Y,R17
                 ;	Alamat -> Y+2
                 ;	Protokol -> Y+1
                 ;	filter -> R17
0006e9 e010      	LDI  R17,0
                 _0xB8:
0006ea 3615      	CPI  R17,101
0006eb f420      	BRSH _0xBA
0006ec 999b      	SBIC 0x13,3
0006ed e010      	LDI  R17,LOW(0)
0006ee 5f1f      	SUBI R17,-1
0006ef cffa      	RJMP _0xB8
                 _0xBA:
0006f0 999b      	SBIC 0x13,3
0006f1 c007      	RJMP _0xBC
0006f2 81ea      	LDD  R30,Y+2
0006f3 81a9      	LDD  R26,Y+1
0006f4 2bea      	OR   R30,R26
0006f5 2fae      	MOV  R26,R30
0006f6 dfde      	RCALL _putchar1
0006f7 e0e1      	LDI  R30,LOW(1)
0006f8 c003      	RJMP _0x20A0009
                 _0xBC:
0006f9 e0a0      	LDI  R26,LOW(0)
0006fa dfda      	RCALL _putchar1
0006fb e0e0      	LDI  R30,LOW(0)
                 _0x20A0009:
0006fc 8118      	LDD  R17,Y+0
                 _0x20A000A:
0006fd 9623      	ADIW R28,3
0006fe 9508      	RET
                 _PesanKalibrasiBerhasil:
0006ff e0a1      	LDI  R26,LOW(1)
000700 dcf0      	RCALL _LCD_Perintah
000701 e0e0      	LDI  R30,LOW(0)
000702 93ea      	ST   -Y,R30
                +
000703 ebac     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000704 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
000705 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 0 ) )
000706 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD2FN _0x0,0
000707 dd69      	RCALL _LCD_TulisF
000708 e0e1      	LDI  R30,LOW(1)
000709 93ea      	ST   -Y,R30
                +
00070a ecad     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
00070b e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
00070c e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 17 ) )
00070d e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 17 ) )
                 	__POINTD2FN _0x0,17
00070e c00f      	RJMP _0x20A0008
                 _PesanKalibrasiGagal:
00070f e0a1      	LDI  R26,LOW(1)
000710 dce0      	RCALL _LCD_Perintah
000711 e0e0      	LDI  R30,LOW(0)
000712 93ea      	ST   -Y,R30
                +
000713 ebac     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000714 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
000715 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 0 ) )
000716 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD2FN _0x0,0
000717 dd59      	RCALL _LCD_TulisF
000718 e0e1      	LDI  R30,LOW(1)
000719 93ea      	ST   -Y,R30
                +
00071a edae     +LDI R26 , LOW ( 2 * _0x0 + ( 34 ) )
00071b e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 34 ) )
00071c e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 34 ) )
00071d e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 34 ) )
                 	__POINTD2FN _0x0,34
                 _0x20A0008:
00071e dd7b      	RCALL _LCD_TulisKiri
00071f 9508      	RET
                 ;	Alamat -> Y+0
                 ;	Alamat -> Y+1
                 ;	Protocol -> Y+0
                 _KalibrasiHitamPutihEx:
000720 93aa      	ST   -Y,R26
                 ;	Alamat -> Y+1
                 ;	Protocol -> Y+0
000721 e0a1      	LDI  R26,LOW(1)
000722 dcce      	RCALL _LCD_Perintah
000723 e0e0      	LDI  R30,LOW(0)
000724 93ea      	ST   -Y,R30
                +
000725 ebac     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
000726 e0b1     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
000727 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 0 ) )
000728 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD2FN _0x0,0
000729 dd47      	RCALL _LCD_TulisF
00072a 81a8      	LD   R26,Y
00072b 3ca0      	CPI  R26,LOW(0xC0)
00072c f441      	BRNE _0xCC
00072d e0e1      	LDI  R30,LOW(1)
00072e 93ea      	ST   -Y,R30
                +
00072f e5a5     +LDI R26 , LOW ( 2 * _0x0 + ( 153 ) )
000730 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 153 ) )
000731 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 153 ) )
000732 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 153 ) )
                 	__POINTD2FN _0x0,153
000733 dd3d      	RCALL _LCD_TulisF
000734 c01a      	RJMP _0xCD
                 _0xCC:
000735 81a8      	LD   R26,Y
000736 3aa0      	CPI  R26,LOW(0xA0)
000737 f441      	BRNE _0xCE
000738 e0e1      	LDI  R30,LOW(1)
000739 93ea      	ST   -Y,R30
                +
00073a e6a6     +LDI R26 , LOW ( 2 * _0x0 + ( 170 ) )
00073b e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 170 ) )
00073c e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 170 ) )
00073d e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 170 ) )
                 	__POINTD2FN _0x0,170
00073e dd32      	RCALL _LCD_TulisF
00073f c00f      	RJMP _0xCF
                 _0xCE:
000740 81a8      	LD   R26,Y
000741 39a0      	CPI  R26,LOW(0x90)
000742 f441      	BRNE _0xD0
000743 e0e1      	LDI  R30,LOW(1)
000744 93ea      	ST   -Y,R30
                +
000745 e7a7     +LDI R26 , LOW ( 2 * _0x0 + ( 187 ) )
000746 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 187 ) )
000747 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 187 ) )
000748 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 187 ) )
                 	__POINTD2FN _0x0,187
000749 dd27      	RCALL _LCD_TulisF
00074a c004      	RJMP _0xD1
                 _0xD0:
00074b dfc3      	RCALL _PesanKalibrasiGagal
00074c e0e0      	LDI  R30,LOW(0)
00074d 940c 09d3 	JMP  _0x20A0007
                 _0xD1:
                 _0xCF:
                 _0xCD:
00074f ebe8      	LDI  R30,LOW(3000)
000750 e0fb      	LDI  R31,HIGH(3000)
000751 93fa      	ST   -Y,R31
000752 93ea      	ST   -Y,R30
000753 efa4      	LDI  R26,LOW(500)
000754 e0b1      	LDI  R27,HIGH(500)
000755 deb6      	RCALL _Buzzer
000756 eea8      	LDI  R26,LOW(1000)
000757 e0b3      	LDI  R27,HIGH(1000)
000758 940e 1f6f 	CALL _delay_ms
00075a e0a1      	LDI  R26,LOW(1)
00075b dc95      	RCALL _LCD_Perintah
00075c 81e9      	LDD  R30,Y+1
00075d 81a8      	LD   R26,Y
00075e 2bea      	OR   R30,R26
00075f 2fae      	MOV  R26,R30
000760 df74      	RCALL _putchar1
000761 e0e0      	LDI  R30,LOW(0)
000762 93ea      	ST   -Y,R30
                +
000763 e8a8     +LDI R26 , LOW ( 2 * _0x0 + ( 204 ) )
000764 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 204 ) )
000765 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 204 ) )
000766 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 204 ) )
                 	__POINTD2FN _0x0,204
000767 dd32      	RCALL _LCD_TulisKiri
000768 e0e1      	LDI  R30,LOW(1)
000769 93ea      	ST   -Y,R30
                +
00076a e1a1     +LDI R26 , LOW ( 2 * _0x0 + ( 85 ) )
00076b e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 85 ) )
00076c e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 85 ) )
00076d e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 85 ) )
                 	__POINTD2FN _0x0,85
00076e dd4b      	RCALL _LCD_TulisKanan
00076f 81e9      	LDD  R30,Y+1
000770 93ea      	ST   -Y,R30
000771 81a9      	LDD  R26,Y+1
000772 df74      	RCALL _TungguTombolKalibrasiEx
000773 30e0      	CPI  R30,0
000774 f141      	BREQ _0xD2
000775 ebe8      	LDI  R30,LOW(3000)
000776 e0fb      	LDI  R31,HIGH(3000)
000777 93fa      	ST   -Y,R31
000778 93ea      	ST   -Y,R30
000779 eca8      	LDI  R26,LOW(200)
00077a e0b0      	LDI  R27,0
00077b de90      	RCALL _Buzzer
00077c e0a0      	LDI  R26,LOW(0)
00077d dd01      	RCALL _LCD_HapusKanan
00077e e0e0      	LDI  R30,LOW(0)
00077f 93ea      	ST   -Y,R30
                +
000780 e9a9     +LDI R26 , LOW ( 2 * _0x0 + ( 221 ) )
000781 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 221 ) )
000782 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 221 ) )
000783 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 221 ) )
                 	__POINTD2FN _0x0,221
000784 dd15      	RCALL _LCD_TulisKiri
000785 81e9      	LDD  R30,Y+1
000786 93ea      	ST   -Y,R30
000787 81a9      	LDD  R26,Y+1
000788 df5e      	RCALL _TungguTombolKalibrasiEx
000789 30e0      	CPI  R30,0
00078a f091      	BREQ _0xD3
00078b ebe8      	LDI  R30,LOW(3000)
00078c e0fb      	LDI  R31,HIGH(3000)
00078d 93fa      	ST   -Y,R31
00078e 93ea      	ST   -Y,R30
00078f eca8      	LDI  R26,LOW(200)
000790 e0b0      	LDI  R27,0
000791 de7a      	RCALL _Buzzer
000792 e8a8      	LDI  R26,LOW(5000)
000793 e1b3      	LDI  R27,HIGH(5000)
000794 df03      	RCALL _BacaSerial1
000795 2fae      	MOV  R26,R30
000796 81e8      	LD   R30,Y
000797 17ea      	CP   R30,R26
000798 f421      	BRNE _0xD4
000799 df65      	RCALL _PesanKalibrasiBerhasil
00079a e0e1      	LDI  R30,LOW(1)
00079b 940c 09d3 	JMP  _0x20A0007
                 _0xD4:
                 _0xD3:
                 _0xD2:
00079d df71      	RCALL _PesanKalibrasiGagal
00079e e0e0      	LDI  R30,LOW(0)
00079f 940c 09d3 	JMP  _0x20A0007
                 _ext_int6_isr:
0007a1 93ea      	ST   -Y,R30
0007a2 93fa      	ST   -Y,R31
0007a3 b7ef      	IN   R30,SREG
0007a4 93ea      	ST   -Y,R30
0007a5 9b0e      	SBIS 0x1,6
0007a6 c00e      	RJMP _0xD5
0007a7 9bb0      	SBIS 0x16,0
0007a8 c006      	RJMP _0xD6
0007a9 94f8      	cli
0007aa 01f5      	MOVW R30,R10
0007ab 9731      	SBIW R30,1
0007ac 015f      	MOVW R10,R30
0007ad 9478      	sei
0007ae c005      	RJMP _0xD7
                 _0xD6:
0007af 94f8      	cli
0007b0 01f5      	MOVW R30,R10
0007b1 9631      	ADIW R30,1
0007b2 015f      	MOVW R10,R30
0007b3 9478      	sei
                 _0xD7:
0007b4 c00d      	RJMP _0xD8
                 _0xD5:
0007b5 9bb0      	SBIS 0x16,0
0007b6 c006      	RJMP _0xD9
0007b7 94f8      	cli
0007b8 01f5      	MOVW R30,R10
0007b9 9631      	ADIW R30,1
0007ba 015f      	MOVW R10,R30
0007bb 9478      	sei
0007bc c005      	RJMP _0xDA
                 _0xD9:
0007bd 94f8      	cli
0007be 01f5      	MOVW R30,R10
0007bf 9731      	SBIW R30,1
0007c0 015f      	MOVW R10,R30
0007c1 9478      	sei
                 _0xDA:
                 _0xD8:
0007c2 91e0 0904 	LDS  R30,_dCounter1
0007c4 5fef      	SUBI R30,-LOW(1)
0007c5 93e0 0904 	STS  _dCounter1,R30
0007c7 91e9      	LD   R30,Y+
0007c8 bfef      	OUT  SREG,R30
0007c9 91f9      	LD   R31,Y+
0007ca 91e9      	LD   R30,Y+
0007cb 9518      	RETI
                 _ext_int7_isr:
0007cc 93ea      	ST   -Y,R30
0007cd 93fa      	ST   -Y,R31
0007ce b7ef      	IN   R30,SREG
0007cf 93ea      	ST   -Y,R30
0007d0 9b0f      	SBIS 0x1,7
0007d1 c00e      	RJMP _0xDB
0007d2 9bb2      	SBIS 0x16,2
0007d3 c006      	RJMP _0xDC
0007d4 94f8      	cli
0007d5 01f6      	MOVW R30,R12
0007d6 9631      	ADIW R30,1
0007d7 016f      	MOVW R12,R30
0007d8 9478      	sei
0007d9 c005      	RJMP _0xDD
                 _0xDC:
0007da 94f8      	cli
0007db 01f6      	MOVW R30,R12
0007dc 9731      	SBIW R30,1
0007dd 016f      	MOVW R12,R30
0007de 9478      	sei
                 _0xDD:
0007df c00d      	RJMP _0xDE
                 _0xDB:
0007e0 9bb2      	SBIS 0x16,2
0007e1 c006      	RJMP _0xDF
0007e2 94f8      	cli
0007e3 01f6      	MOVW R30,R12
0007e4 9731      	SBIW R30,1
0007e5 016f      	MOVW R12,R30
0007e6 9478      	sei
0007e7 c005      	RJMP _0xE0
                 _0xDF:
0007e8 94f8      	cli
0007e9 01f6      	MOVW R30,R12
0007ea 9631      	ADIW R30,1
0007eb 016f      	MOVW R12,R30
0007ec 9478      	sei
                 _0xE0:
                 _0xDE:
0007ed 91e0 0905 	LDS  R30,_dCounter2
0007ef 5fef      	SUBI R30,-LOW(1)
0007f0 93e0 0905 	STS  _dCounter2,R30
0007f2 91e9      	LD   R30,Y+
0007f3 bfef      	OUT  SREG,R30
0007f4 91f9      	LD   R31,Y+
0007f5 91e9      	LD   R30,Y+
0007f6 9518      	RETI
                 _timer3_compc_isr:
0007f7 93aa      	ST   -Y,R26
0007f8 93ba      	ST   -Y,R27
0007f9 93ea      	ST   -Y,R30
0007fa 93fa      	ST   -Y,R31
0007fb b7ef      	IN   R30,SREG
0007fc 93ea      	ST   -Y,R30
0007fd e0ae      	LDI  R26,LOW(_usCounter)
0007fe e0bd      	LDI  R27,HIGH(_usCounter)
0007ff 91ed      	LD   R30,X+
000800 91fd      	LD   R31,X+
000801 9631      	ADIW R30,1
000802 93fe      	ST   -X,R31
000803 93ee      	ST   -X,R30
000804 9731      	SBIW R30,1
000805 e1a0      	LDI  R26,LOW(_ServoCounter_S000003E000)
000806 e0bd      	LDI  R27,HIGH(_ServoCounter_S000003E000)
000807 91ed      	LD   R30,X+
000808 91fd      	LD   R31,X+
000809 9631      	ADIW R30,1
00080a 93fe      	ST   -X,R31
00080b 93ee      	ST   -X,R30
00080c 35e1      	CPI  R30,LOW(0x51)
00080d e0a0      	LDI  R26,HIGH(0x51)
00080e 07fa      	CPC  R31,R26
00080f f068      	BRLO _0xE2
000810 91a0 0d10 	LDS  R26,_ServoCounter_S000003E000
000812 91b0 0d11 	LDS  R27,_ServoCounter_S000003E000+1
000814 32a1      	CPI  R26,LOW(0x321)
000815 e0e3      	LDI  R30,HIGH(0x321)
000816 07be      	CPC  R27,R30
000817 f028      	BRLO _0xE3
000818 e0e0      	LDI  R30,LOW(0)
000819 93e0 0d10 	STS  _ServoCounter_S000003E000,R30
00081b 93e0 0d11 	STS  _ServoCounter_S000003E000+1,R30
                 _0xE3:
                 _0xE2:
00081d 91e9      	LD   R30,Y+
00081e bfef      	OUT  SREG,R30
00081f 91f9      	LD   R31,Y+
000820 91e9      	LD   R30,Y+
000821 91b9      	LD   R27,Y+
000822 91a9      	LD   R26,Y+
000823 9518      	RETI
                 _timer1_capt_isr:
000824 920a      	ST   -Y,R0
000825 921a      	ST   -Y,R1
000826 92fa      	ST   -Y,R15
000827 936a      	ST   -Y,R22
000828 937a      	ST   -Y,R23
000829 938a      	ST   -Y,R24
00082a 939a      	ST   -Y,R25
00082b 93aa      	ST   -Y,R26
00082c 93ba      	ST   -Y,R27
00082d 93ea      	ST   -Y,R30
00082e 93fa      	ST   -Y,R31
00082f b7eb      	IN   R30,RAMPZ
000830 93ea      	ST   -Y,R30
000831 b7ef      	IN   R30,SREG
000832 93ea      	ST   -Y,R30
000833 9478      	sei
000834 91a0 0d12 	LDS  R26,_ServoCounter_S000003F000
000836 5faf      	SUBI R26,-LOW(1)
000837 93a0 0d12 	STS  _ServoCounter_S000003F000,R26
000839 30a5      	CPI  R26,LOW(0x5)
00083a f030      	BRLO _0xE4
00083b e0e0      	LDI  R30,LOW(0)
00083c 93e0 0d12 	STS  _ServoCounter_S000003F000,R30
00083e eaea      	LDI  R30,LOW(170)
00083f bdef      	OUT  0x2F,R30
000840 c005      	RJMP _0xE5
                 _0xE4:
000841 e0e2      	LDI  R30,LOW(2)
000842 bdef      	OUT  0x2F,R30
000843 98c5      	CBI  0x18,5
000844 98c6      	CBI  0x18,6
000845 98c7      	CBI  0x18,7
                 _0xE5:
000846 fe21      	SBRS R2,1
000847 c02e      	RJMP _0xEC
000848 91a0 0d14 	LDS  R26,_TempoTick_S000003F000
00084a 5faf      	SUBI R26,-LOW(1)
00084b 93a0 0d14 	STS  _TempoTick_S000003F000,R26
00084d 91e0 0d13 	LDS  R30,_LaguTick_S000003F000
00084f 27ff      	CLR  R31
000850 2766      	CLR  R22
000851 2777      	CLR  R23
000852 5de8      	SUBI R30,LOW(-_Tempo*2)
000853 4ffe      	SBCI R31,HIGH(-_Tempo*2)
000854 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
000855 bf6b     +OUT RAMPZ , R22
000856 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
000857 17ae      	CP   R26,R30
000858 f0e8      	BRLO _0xED
000859 e0e0      	LDI  R30,LOW(0)
00085a 93e0 0d14 	STS  _TempoTick_S000003F000,R30
00085c 91e0 0d13 	LDS  R30,_LaguTick_S000003F000
00085e e8ac      	LDI  R26,LOW(_Melodi*2)
00085f e0b0      	LDI  R27,HIGH(_Melodi*2)
000860 e080      	LDI  R24,BYTE3(_Melodi*2)
000861 27ff      	CLR  R31
000862 2766      	CLR  R22
000863 2777      	CLR  R23
000864 940e 2131 	CALL __LSLD1
000866 940e 211b 	CALL __ADDD12
000868 940e 21ee 	CALL __GETW2PF
00086a 940e 059c 	CALL _FBuzzer
00086c 91a0 0d13 	LDS  R26,_LaguTick_S000003F000
00086e 5faf      	SUBI R26,-LOW(1)
00086f 93a0 0d13 	STS  _LaguTick_S000003F000,R26
000871 34ae      	CPI  R26,LOW(0x4E)
000872 f018      	BRLO _0xEE
000873 e0e0      	LDI  R30,LOW(0)
000874 93e0 0d13 	STS  _LaguTick_S000003F000,R30
                 _0xEE:
                 _0xED:
                 _0xEC:
000876 91e9      	LD   R30,Y+
000877 bfef      	OUT  SREG,R30
000878 91e9      	LD   R30,Y+
000879 bfeb      	OUT  RAMPZ,R30
00087a 91f9      	LD   R31,Y+
00087b 91e9      	LD   R30,Y+
00087c 91b9      	LD   R27,Y+
00087d 91a9      	LD   R26,Y+
00087e 9199      	LD   R25,Y+
00087f 9189      	LD   R24,Y+
000880 9179      	LD   R23,Y+
000881 9169      	LD   R22,Y+
000882 90f9      	LD   R15,Y+
000883 9019      	LD   R1,Y+
000884 9009      	LD   R0,Y+
000885 9518      	RETI
                 _timer1_ovf_isr:
000886 93aa      	ST   -Y,R26
000887 93ba      	ST   -Y,R27
000888 93ea      	ST   -Y,R30
000889 93fa      	ST   -Y,R31
00088a b7ef      	IN   R30,SREG
00088b 93ea      	ST   -Y,R30
00088c 91e0 0d17 	LDS  R30,_DTimeTick
00088e 5fef      	SUBI R30,-LOW(1)
00088f 93e0 0d17 	STS  _DTimeTick,R30
000891 91a0 0d17 	LDS  R26,_DTimeTick
000893 3ca9      	CPI  R26,LOW(0xC9)
000894 f050      	BRLO _0xEF
000895 e0e0      	LDI  R30,LOW(0)
000896 93e0 0d17 	STS  _DTimeTick,R30
000898 e1a5      	LDI  R26,LOW(_DTime)
000899 e0bd      	LDI  R27,HIGH(_DTime)
00089a 91ed      	LD   R30,X+
00089b 91fd      	LD   R31,X+
00089c 9631      	ADIW R30,1
00089d 93fe      	ST   -X,R31
00089e 93ee      	ST   -X,R30
                 _0xEF:
00089f 91e9      	LD   R30,Y+
0008a0 bfef      	OUT  SREG,R30
0008a1 91f9      	LD   R31,Y+
0008a2 91e9      	LD   R30,Y+
0008a3 91b9      	LD   R27,Y+
0008a4 91a9      	LD   R26,Y+
0008a5 9518      	RETI
                 _timer2_comp_isr:
0008a6 920a      	ST   -Y,R0
0008a7 921a      	ST   -Y,R1
0008a8 92fa      	ST   -Y,R15
0008a9 936a      	ST   -Y,R22
0008aa 937a      	ST   -Y,R23
0008ab 938a      	ST   -Y,R24
0008ac 939a      	ST   -Y,R25
0008ad 93aa      	ST   -Y,R26
0008ae 93ba      	ST   -Y,R27
0008af 93ea      	ST   -Y,R30
0008b0 93fa      	ST   -Y,R31
0008b1 b7eb      	IN   R30,RAMPZ
0008b2 93ea      	ST   -Y,R30
0008b3 b7ef      	IN   R30,SREG
0008b4 93ea      	ST   -Y,R30
0008b5 91e0 0d0d 	LDS  R30,_SysTick
0008b7 5fef      	SUBI R30,-LOW(1)
0008b8 93e0 0d0d 	STS  _SysTick,R30
0008ba 9478      	sei
0008bb 91a0 0d1a 	LDS  R26,_Timer2Tick_S0000041000
0008bd 5faf      	SUBI R26,-LOW(1)
0008be 93a0 0d1a 	STS  _Timer2Tick_S0000041000,R26
0008c0 30a4      	CPI  R26,LOW(0x4)
0008c1 f4d9      	BRNE _0xF0
0008c2 91e0 0d18 	LDS  R30,__dCounter1_S0000041000
0008c4 91a0 0904 	LDS  R26,_dCounter1
0008c6 17ea      	CP   R30,R26
0008c7 f430      	BRSH _0xF1
0008c8 91a0 0d18 	LDS  R26,__dCounter1_S0000041000
0008ca 91e0 0904 	LDS  R30,_dCounter1
0008cc 1bea      	SUB  R30,R26
0008cd c008      	RJMP _0x279
                 _0xF1:
0008ce 91a0 0d18 	LDS  R26,__dCounter1_S0000041000
0008d0 efef      	LDI  R30,LOW(255)
0008d1 1bea      	SUB  R30,R26
0008d2 91a0 0904 	LDS  R26,_dCounter1
0008d4 0fea      	ADD  R30,R26
0008d5 5fef      	SUBI R30,-LOW(1)
                 _0x279:
0008d6 93e0 0902 	STS  _dSpeed1,R30
0008d8 91e0 0904 	LDS  R30,_dCounter1
0008da 93e0 0d18 	STS  __dCounter1_S0000041000,R30
0008dc c033      	RJMP _0xF3
                 _0xF0:
0008dd 91a0 0d1a 	LDS  R26,_Timer2Tick_S0000041000
0008df 30a5      	CPI  R26,LOW(0x5)
0008e0 f429      	BRNE _0xF4
0008e1 fe20      	SBRS R2,0
0008e2 c002      	RJMP _0xF5
0008e3 940e 0396 	CALL _PIDmotor1
                 _0xF5:
0008e5 c02a      	RJMP _0xF6
                 _0xF4:
0008e6 91a0 0d1a 	LDS  R26,_Timer2Tick_S0000041000
0008e8 30a9      	CPI  R26,LOW(0x9)
0008e9 f4d9      	BRNE _0xF7
0008ea 91e0 0d19 	LDS  R30,__dCounter2_S0000041000
0008ec 91a0 0905 	LDS  R26,_dCounter2
0008ee 17ea      	CP   R30,R26
0008ef f430      	BRSH _0xF8
0008f0 91a0 0d19 	LDS  R26,__dCounter2_S0000041000
0008f2 91e0 0905 	LDS  R30,_dCounter2
0008f4 1bea      	SUB  R30,R26
0008f5 c008      	RJMP _0x27A
                 _0xF8:
0008f6 91a0 0d19 	LDS  R26,__dCounter2_S0000041000
0008f8 efef      	LDI  R30,LOW(255)
0008f9 1bea      	SUB  R30,R26
0008fa 91a0 0905 	LDS  R26,_dCounter2
0008fc 0fea      	ADD  R30,R26
0008fd 5fef      	SUBI R30,-LOW(1)
                 _0x27A:
0008fe 93e0 0903 	STS  _dSpeed2,R30
000900 91e0 0905 	LDS  R30,_dCounter2
000902 93e0 0d19 	STS  __dCounter2_S0000041000,R30
000904 c00b      	RJMP _0xFA
                 _0xF7:
000905 91a0 0d1a 	LDS  R26,_Timer2Tick_S0000041000
000907 30aa      	CPI  R26,LOW(0xA)
000908 f038      	BRLO _0xFB
000909 fe20      	SBRS R2,0
00090a c002      	RJMP _0xFC
00090b 940e 0345 	CALL _PIDmotor2
                 _0xFC:
00090d e0e0      	LDI  R30,LOW(0)
00090e 93e0 0d1a 	STS  _Timer2Tick_S0000041000,R30
                 _0xFB:
                 _0xFA:
                 _0xF6:
                 _0xF3:
000910 91e9      	LD   R30,Y+
000911 bfef      	OUT  SREG,R30
000912 91e9      	LD   R30,Y+
000913 bfeb      	OUT  RAMPZ,R30
000914 91f9      	LD   R31,Y+
000915 91e9      	LD   R30,Y+
000916 91b9      	LD   R27,Y+
000917 91a9      	LD   R26,Y+
000918 9199      	LD   R25,Y+
000919 9189      	LD   R24,Y+
00091a 9179      	LD   R23,Y+
00091b 9169      	LD   R22,Y+
00091c 90f9      	LD   R15,Y+
00091d 9019      	LD   R1,Y+
00091e 9009      	LD   R0,Y+
00091f 9518      	RETI
                 _SystemInit:
000920 e0e0      	LDI  R30,LOW(0)
000921 bbeb      	OUT  0x1B,R30
000922 efef      	LDI  R30,LOW(255)
000923 bbea      	OUT  0x1A,R30
000924 e0e5      	LDI  R30,LOW(5)
000925 bbe8      	OUT  0x18,R30
000926 efe8      	LDI  R30,LOW(248)
000927 bbe7      	OUT  0x17,R30
000928 e0ef      	LDI  R30,LOW(15)
000929 bbe5      	OUT  0x15,R30
00092a efe0      	LDI  R30,LOW(240)
00092b bbe4      	OUT  0x14,R30
00092c bbe2      	OUT  0x12,R30
00092d e0e0      	LDI  R30,LOW(0)
00092e bbe1      	OUT  0x11,R30
00092f ece0      	LDI  R30,LOW(192)
000930 b9e3      	OUT  0x3,R30
000931 e3ec      	LDI  R30,LOW(60)
000932 b9e2      	OUT  0x2,R30
000933 e0e0      	LDI  R30,LOW(0)
000934 93e0 0062 	STS  98,R30
000936 e0e4      	LDI  R30,LOW(4)
000937 93e0 0061 	STS  97,R30
000939 e1e7      	LDI  R30,LOW(23)
00093a 93e0 0065 	STS  101,R30
00093c e0e0      	LDI  R30,LOW(0)
00093d 93e0 0064 	STS  100,R30
00093f bfe0      	OUT  0x30,R30
000940 bfe3      	OUT  0x33,R30
000941 bfe2      	OUT  0x32,R30
000942 bfe1      	OUT  0x31,R30
000943 eaea      	LDI  R30,LOW(170)
000944 bdef      	OUT  0x2F,R30
000945 e1e2      	LDI  R30,LOW(18)
000946 bdee      	OUT  0x2E,R30
000947 e0e0      	LDI  R30,LOW(0)
000948 bded      	OUT  0x2D,R30
000949 bdec      	OUT  0x2C,R30
00094a e2e7      	LDI  R30,LOW(39)
00094b bde7      	OUT  0x27,R30
00094c e1e0      	LDI  R30,LOW(16)
00094d bde6      	OUT  0x26,R30
00094e e1e3      	LDI  R30,LOW(19)
00094f bde7      	OUT  0x27,R30
000950 e8e8      	LDI  R30,LOW(136)
000951 bde6      	OUT  0x26,R30
000952 e0e0      	LDI  R30,LOW(0)
000953 bdeb      	OUT  0x2B,R30
000954 bdea      	OUT  0x2A,R30
000955 bde9      	OUT  0x29,R30
000956 bde8      	OUT  0x28,R30
000957 93e0 0079 	STS  121,R30
000959 93e0 0078 	STS  120,R30
00095b e0eb      	LDI  R30,LOW(11)
00095c bde5      	OUT  0x25,R30
00095d e0e0      	LDI  R30,LOW(0)
00095e bde4      	OUT  0x24,R30
00095f efea      	LDI  R30,LOW(250)
000960 bde3      	OUT  0x23,R30
000961 efe2      	LDI  R30,LOW(242)
000962 93e0 008b 	STS  139,R30
000964 e1e1      	LDI  R30,LOW(17)
000965 93e0 008a 	STS  138,R30
000967 e0e0      	LDI  R30,LOW(0)
000968 93e0 0089 	STS  137,R30
00096a 93e0 0088 	STS  136,R30
00096c e0e1      	LDI  R30,LOW(1)
00096d 93e0 0081 	STS  129,R30
00096f e9e0      	LDI  R30,LOW(144)
000970 93e0 0080 	STS  128,R30
000972 e0e0      	LDI  R30,LOW(0)
000973 93e0 0087 	STS  135,R30
000975 93e0 0086 	STS  134,R30
000977 93e0 0085 	STS  133,R30
000979 93e0 0084 	STS  132,R30
00097b 93e0 0083 	STS  131,R30
00097d ece8      	LDI  R30,LOW(200)
00097e 93e0 0082 	STS  130,R30
000980 e0e0      	LDI  R30,LOW(0)
000981 93e0 006a 	STS  106,R30
000983 e5e0      	LDI  R30,LOW(80)
000984 bfea      	OUT  0x3A,R30
000985 ece0      	LDI  R30,LOW(192)
000986 bfe9      	OUT  0x39,R30
000987 bfe8      	OUT  0x38,R30
000988 eae4      	LDI  R30,LOW(164)
000989 bfe7      	OUT  0x37,R30
00098a e0e2      	LDI  R30,LOW(2)
00098b 93e0 007d 	STS  125,R30
00098d e0e0      	LDI  R30,LOW(0)
00098e b9eb      	OUT  0xB,R30
00098f e9e0      	LDI  R30,LOW(144)
000990 b9ea      	OUT  0xA,R30
000991 e0e6      	LDI  R30,LOW(6)
000992 93e0 0095 	STS  149,R30
000994 e0e0      	LDI  R30,LOW(0)
000995 93e0 0090 	STS  144,R30
000997 e6e7      	LDI  R30,LOW(103)
000998 b9e9      	OUT  0x9,R30
000999 e0e0      	LDI  R30,LOW(0)
00099a 93e0 009b 	STS  155,R30
00099c e9e8      	LDI  R30,LOW(152)
00099d 93e0 009a 	STS  154,R30
00099f e0e6      	LDI  R30,LOW(6)
0009a0 93e0 009d 	STS  157,R30
0009a2 e0e0      	LDI  R30,LOW(0)
0009a3 93e0 0098 	STS  152,R30
0009a5 e6e7      	LDI  R30,LOW(103)
0009a6 93e0 0099 	STS  153,R30
0009a8 e8e0      	LDI  R30,LOW(128)
0009a9 b9e8      	OUT  0x8,R30
0009aa e0e0      	LDI  R30,LOW(0)
0009ab bde0      	OUT  0x20,R30
0009ac 940e 0428 	CALL _LCD_Init
0009ae 940e 031c 	CALL _StopPWM
0009b0 e5aa      	LDI  R26,LOW(90)
0009b1 940e 02cb 	CALL _SudutServo6
0009b3 e5aa      	LDI  R26,LOW(90)
0009b4 940e 02d2 	CALL _SudutServo7
0009b6 e5aa      	LDI  R26,LOW(90)
0009b7 940e 02d9 	CALL _SudutServo8
0009b9 94f8      	cli
0009ba 940e 0590 	CALL _I2C_Init
0009bc 9478      	sei
0009bd 9478      	sei
0009be 9508      	RET
                 ;#include "Include/NOTASI.c"
                 ;#include "Include/Line_Follower.c"
                 ;//  --------------  DEKLARASI VARIABEL GLOBAL --------------------------
                 ;
                 ;bit FlagBelok;
                 ;
                 ;unsigned char BacaSensorWarna(unsigned char alamat, unsigned char warna)
                 ; 0000 0014 {   BacaSensor(alamat,warna);
                 _BacaSensorWarna:
0009bf 93aa      	ST   -Y,R26
                 ;	alamat -> Y+1
                 ;	warna -> Y+0
0009c0 81e9      	LDD  R30,Y+1
0009c1 93ea      	ST   -Y,R30
0009c2 81a9      	LDD  R26,Y+1
0009c3 940e 06df 	CALL _BacaSensor
                 ;    if(BacaSerial1(5000)==warna)
0009c5 e8a8      	LDI  R26,LOW(5000)
0009c6 e1b3      	LDI  R27,HIGH(5000)
0009c7 940e 0698 	CALL _BacaSerial1
0009c9 2fae      	MOV  R26,R30
0009ca 81e8      	LD   R30,Y
0009cb 17ea      	CP   R30,R26
0009cc f429      	BRNE _0xFD
                 ;    {   return BacaSerial1(5000);
0009cd e8a8      	LDI  R26,LOW(5000)
0009ce e1b3      	LDI  R27,HIGH(5000)
0009cf 940e 0698 	CALL _BacaSerial1
0009d1 c001      	RJMP _0x20A0007
                 ;    }
                 ;    else return 0;
                 _0xFD:
0009d2 e0e0      	LDI  R30,LOW(0)
                 ;}
                 _0x20A0007:
0009d3 9622      	ADIW R28,2
0009d4 9508      	RET
                 ;
                 ;unsigned char BacaSensorMerah(unsigned char alamat)
                 ;{   BacaSensor(alamat,pBacaSensorR);
                 ;	alamat -> Y+0
                 ;    if(BacaSerial1(5000)==pBacaSensorR)
                 ;    {   return BacaSerial1(5000);
                 ;    }
                 ;    else return 0;
                 ;}
                 ;
                 ;unsigned char BacaSensorBiru(unsigned char alamat)
                 ;{   BacaSensor(alamat,pBacaSensorB);
                 ;	alamat -> Y+0
                 ;    if(BacaSerial1(5000)==pBacaSensorB)
                 ;    {   return BacaSerial1(5000);
                 ;    }
                 ;    else return 0;
                 ;}
                 ;
                 ;void ExitStart(unsigned char Warna)
                 ;{   unsigned char sensor;
                 ;    do{  SetDataMotorPWM(100,100);
                 ;	Warna -> Y+1
                 ;	sensor -> R17
                 ;         sensor = BacaSensorWarna(0,Warna);
                 ;         LCD_GotoXY(0,1);
                 ;         LCD_Biner(sensor);
                 ;    }while((sensor|0B11000011)!=0B11000011);
                 ;    do{  SetDataMotorPWM(100,100);
                 ;         sensor = BacaSensorWarna(0,Warna);
                 ;         LCD_GotoXY(0,1);
                 ;         LCD_Biner(sensor);
                 ;
                 ;    }while((sensor|0B11000011)==0B11000011);
                 ;}
                 ;
                 ;void ScanGaris(int16_t TopSpeed, unsigned char WarnaGaris)
                 ;{   unsigned char sensor;
                 _ScanGaris:
                 ;    int16_t MKi, MKa, Error, dError, u;
                 ;    static int16_t LastError;
                 ;    //LCD_GotoXY(0,0);
                 ;    BacaSensor(0,WarnaGaris);
0009d5 93aa      	ST   -Y,R26
0009d6 9726      	SBIW R28,6
0009d7 940e 2246 	CALL __SAVELOCR6
                 ;	TopSpeed -> Y+13
                 ;	WarnaGaris -> Y+12
                 ;	sensor -> R17
                 ;	MKi -> R18,R19
                 ;	MKa -> R20,R21
                 ;	Error -> Y+10
                 ;	dError -> Y+8
                 ;	u -> Y+6
0009d9 e0e0      	LDI  R30,LOW(0)
0009da 93ea      	ST   -Y,R30
0009db 85ad      	LDD  R26,Y+13
0009dc 940e 06df 	CALL _BacaSensor
                 ;    if(BacaSerial1(5000)==WarnaGaris)
0009de e8a8      	LDI  R26,LOW(5000)
0009df e1b3      	LDI  R27,HIGH(5000)
0009e0 940e 0698 	CALL _BacaSerial1
0009e2 2fae      	MOV  R26,R30
0009e3 85ec      	LDD  R30,Y+12
0009e4 17ea      	CP   R30,R26
0009e5 f011      	BREQ PC+3
0009e6 940c 0a9e 	JMP _0x109
                 ;        {   sensor = BacaSerial1(5000);
0009e8 e8a8      	LDI  R26,LOW(5000)
0009e9 e1b3      	LDI  R27,HIGH(5000)
0009ea 940e 0698 	CALL _BacaSerial1
0009ec 2f1e      	MOV  R17,R30
                 ;            //LCD_Biner(sensor);
                 ;            switch (sensor)
0009ed 2fe1      	MOV  R30,R17
                 ;            {   case    0B01111111: Error = -7;    break;
0009ee 37ef      	CPI  R30,LOW(0x7F)
0009ef f419      	BRNE _0x10D
0009f0 efe9      	LDI  R30,LOW(65529)
0009f1 efff      	LDI  R31,HIGH(65529)
0009f2 c04b      	RJMP _0x27B
                 ;                case    0B00111111: Error = -6;    break;
                 _0x10D:
0009f3 33ef      	CPI  R30,LOW(0x3F)
0009f4 f419      	BRNE _0x10E
0009f5 efea      	LDI  R30,LOW(65530)
0009f6 efff      	LDI  R31,HIGH(65530)
0009f7 c046      	RJMP _0x27B
                 ;                case    0B10111111: Error = -5;    break;
                 _0x10E:
0009f8 3bef      	CPI  R30,LOW(0xBF)
0009f9 f419      	BRNE _0x10F
0009fa efeb      	LDI  R30,LOW(65531)
0009fb efff      	LDI  R31,HIGH(65531)
0009fc c041      	RJMP _0x27B
                 ;                case    0B10011111: Error = -4;    break;
                 _0x10F:
0009fd 39ef      	CPI  R30,LOW(0x9F)
0009fe f419      	BRNE _0x110
0009ff efec      	LDI  R30,LOW(65532)
000a00 efff      	LDI  R31,HIGH(65532)
000a01 c03c      	RJMP _0x27B
                 ;                case    0B11011111: Error = -3;    break;
                 _0x110:
000a02 3def      	CPI  R30,LOW(0xDF)
000a03 f419      	BRNE _0x111
000a04 efed      	LDI  R30,LOW(65533)
000a05 efff      	LDI  R31,HIGH(65533)
000a06 c037      	RJMP _0x27B
                 ;                case    0B11001111: Error = -2;    break;
                 _0x111:
000a07 3cef      	CPI  R30,LOW(0xCF)
000a08 f419      	BRNE _0x112
000a09 efee      	LDI  R30,LOW(65534)
000a0a efff      	LDI  R31,HIGH(65534)
000a0b c032      	RJMP _0x27B
                 ;                case    0B11101111: Error = -1;    break;
                 _0x112:
000a0c 3eef      	CPI  R30,LOW(0xEF)
000a0d f419      	BRNE _0x113
000a0e efef      	LDI  R30,LOW(65535)
000a0f efff      	LDI  R31,HIGH(65535)
000a10 c02d      	RJMP _0x27B
                 ;                case    0B11100111: Error = -0;    break;
                 _0x113:
000a11 3ee7      	CPI  R30,LOW(0xE7)
000a12 f421      	BRNE _0x114
000a13 e0e0      	LDI  R30,LOW(0)
000a14 87ea      	STD  Y+10,R30
000a15 87eb      	STD  Y+10+1,R30
000a16 c029      	RJMP _0x10C
                 ;                case    0B11110111: Error = 1;      break;
                 _0x114:
000a17 3fe7      	CPI  R30,LOW(0xF7)
000a18 f419      	BRNE _0x115
000a19 e0e1      	LDI  R30,LOW(1)
000a1a e0f0      	LDI  R31,HIGH(1)
000a1b c022      	RJMP _0x27B
                 ;                case    0B11110011: Error = 2;      break;
                 _0x115:
000a1c 3fe3      	CPI  R30,LOW(0xF3)
000a1d f419      	BRNE _0x116
000a1e e0e2      	LDI  R30,LOW(2)
000a1f e0f0      	LDI  R31,HIGH(2)
000a20 c01d      	RJMP _0x27B
                 ;                case    0B11111011: Error = 3;      break;
                 _0x116:
000a21 3feb      	CPI  R30,LOW(0xFB)
000a22 f419      	BRNE _0x117
000a23 e0e3      	LDI  R30,LOW(3)
000a24 e0f0      	LDI  R31,HIGH(3)
000a25 c018      	RJMP _0x27B
                 ;                case    0B11111001: Error = 4;      break;
                 _0x117:
000a26 3fe9      	CPI  R30,LOW(0xF9)
000a27 f419      	BRNE _0x118
000a28 e0e4      	LDI  R30,LOW(4)
000a29 e0f0      	LDI  R31,HIGH(4)
000a2a c013      	RJMP _0x27B
                 ;                case    0B11111101: Error = 5;      break;
                 _0x118:
000a2b 3fed      	CPI  R30,LOW(0xFD)
000a2c f419      	BRNE _0x119
000a2d e0e5      	LDI  R30,LOW(5)
000a2e e0f0      	LDI  R31,HIGH(5)
000a2f c00e      	RJMP _0x27B
                 ;                case    0B11111100: Error = 6;      break;
                 _0x119:
000a30 3fec      	CPI  R30,LOW(0xFC)
000a31 f419      	BRNE _0x11A
000a32 e0e6      	LDI  R30,LOW(6)
000a33 e0f0      	LDI  R31,HIGH(6)
000a34 c009      	RJMP _0x27B
                 ;                case    0B11111110: Error = 7;      break;
                 _0x11A:
000a35 3fee      	CPI  R30,LOW(0xFE)
000a36 f419      	BRNE _0x11B
000a37 e0e7      	LDI  R30,LOW(7)
000a38 e0f0      	LDI  R31,HIGH(7)
000a39 c004      	RJMP _0x27B
                 ;                case    0B11111111: Error=LastError;break;
                 _0x11B:
                 ;                default:            Error=LastError;break;
                 _0x27C:
000a3a 91e0 0d1b 	LDS  R30,_LastError_S0000047000
000a3c 91f0 0d1c 	LDS  R31,_LastError_S0000047000+1
                 _0x27B:
000a3e 87ea      	STD  Y+10,R30
000a3f 87fb      	STD  Y+10+1,R31
                 ;            }
                 _0x10C:
                 ;                dError = Error-LastError;
000a40 91a0 0d1b 	LDS  R26,_LastError_S0000047000
000a42 91b0 0d1c 	LDS  R27,_LastError_S0000047000+1
000a44 85ea      	LDD  R30,Y+10
000a45 85fb      	LDD  R31,Y+10+1
000a46 1bea      	SUB  R30,R26
000a47 0bfb      	SBC  R31,R27
000a48 87e8      	STD  Y+8,R30
000a49 87f9      	STD  Y+8+1,R31
                 ;                //iError += (float)Error/5;
                 ;
                 ;                //if(iError>300)iError=300;
                 ;                //else if (iError<-300)iError=-300;
                 ;
                 ;                LastError = Error;
000a4a 85ea      	LDD  R30,Y+10
000a4b 85fb      	LDD  R31,Y+10+1
000a4c 93e0 0d1b 	STS  _LastError_S0000047000,R30
000a4e 93f0 0d1c 	STS  _LastError_S0000047000+1,R31
                 ;                if (TopSpeed>=300)
000a50 85ad      	LDD  R26,Y+13
000a51 85be      	LDD  R27,Y+13+1
000a52 32ac      	CPI  R26,LOW(0x12C)
000a53 e0e1      	LDI  R30,HIGH(0x12C)
000a54 07be      	CPC  R27,R30
000a55 f064      	BRLT _0x11E
                 ;                    u = ((20 * Error + 150*dError));
000a56 85ea      	LDD  R30,Y+10
000a57 85fb      	LDD  R31,Y+10+1
000a58 e1a4      	LDI  R26,LOW(20)
000a59 e0b0      	LDI  R27,HIGH(20)
000a5a 940e 215f 	CALL __MULW12
000a5c 01bf      	MOVW R22,R30
000a5d 85e8      	LDD  R30,Y+8
000a5e 85f9      	LDD  R31,Y+8+1
000a5f e9a6      	LDI  R26,LOW(150)
000a60 e0b0      	LDI  R27,HIGH(150)
000a61 c00b      	RJMP _0x27D
                 ;                else
                 _0x11E:
                 ;                    u = ((20 * Error + 120*dError));
000a62 85ea      	LDD  R30,Y+10
000a63 85fb      	LDD  R31,Y+10+1
000a64 e1a4      	LDI  R26,LOW(20)
000a65 e0b0      	LDI  R27,HIGH(20)
000a66 940e 215f 	CALL __MULW12
000a68 01bf      	MOVW R22,R30
000a69 85e8      	LDD  R30,Y+8
000a6a 85f9      	LDD  R31,Y+8+1
000a6b e7a8      	LDI  R26,LOW(120)
000a6c e0b0      	LDI  R27,HIGH(120)
                 _0x27D:
000a6d 940e 215f 	CALL __MULW12
000a6f 0fe6      	ADD  R30,R22
000a70 1ff7      	ADC  R31,R23
000a71 83ee      	STD  Y+6,R30
000a72 83ff      	STD  Y+6+1,R31
                 ;
                 ;                MKi = TopSpeed + u;
000a73 85ad      	LDD  R26,Y+13
000a74 85be      	LDD  R27,Y+13+1
000a75 0fea      	ADD  R30,R26
000a76 1ffb      	ADC  R31,R27
000a77 019f      	MOVW R18,R30
                 ;                MKa = TopSpeed - u;
000a78 81ae      	LDD  R26,Y+6
000a79 81bf      	LDD  R27,Y+6+1
000a7a 85ed      	LDD  R30,Y+13
000a7b 85fe      	LDD  R31,Y+13+1
000a7c 1bea      	SUB  R30,R26
000a7d 0bfb      	SBC  R31,R27
000a7e 01af      	MOVW R20,R30
                 ;                if (MKi>400) MKi = 400;
                +
000a7f 3921     +CPI R18 , LOW ( 401 )
000a80 e0e1     +LDI R30 , HIGH ( 401 )
000a81 073e     +CPC R19 , R30
                 	__CPWRN 18,19,401
000a82 f01c      	BRLT _0x120
                +
000a83 e920     +LDI R18 , LOW ( 400 )
000a84 e031     +LDI R19 , HIGH ( 400 )
                 	__GETWRN 18,19,400
                 ;                else if (MKi<-400) MKi = -400;
000a85 c006      	RJMP _0x121
                 _0x120:
                +
000a86 3720     +CPI R18 , LOW ( - 400 )
000a87 efee     +LDI R30 , HIGH ( - 400 )
000a88 073e     +CPC R19 , R30
                 	__CPWRN 18,19,-400
000a89 f414      	BRGE _0x122
                +
000a8a e720     +LDI R18 , LOW ( - 400 )
000a8b ef3e     +LDI R19 , HIGH ( - 400 )
                 	__GETWRN 18,19,-400
                 ;                if (MKa>400) MKa = 400;
                 _0x122:
                 _0x121:
                +
000a8c 3941     +CPI R20 , LOW ( 401 )
000a8d e0e1     +LDI R30 , HIGH ( 401 )
000a8e 075e     +CPC R21 , R30
                 	__CPWRN 20,21,401
000a8f f01c      	BRLT _0x123
                +
000a90 e940     +LDI R20 , LOW ( 400 )
000a91 e051     +LDI R21 , HIGH ( 400 )
                 	__GETWRN 20,21,400
                 ;                else if (MKa<-400) MKa = -400;
000a92 c006      	RJMP _0x124
                 _0x123:
                +
000a93 3740     +CPI R20 , LOW ( - 400 )
000a94 efee     +LDI R30 , HIGH ( - 400 )
000a95 075e     +CPC R21 , R30
                 	__CPWRN 20,21,-400
000a96 f414      	BRGE _0x125
                +
000a97 e740     +LDI R20 , LOW ( - 400 )
000a98 ef5e     +LDI R21 , HIGH ( - 400 )
                 	__GETWRN 20,21,-400
                 ;                SetDataMotorPWM(MKi,MKa);
                 _0x125:
                 _0x124:
000a99 933a      	ST   -Y,R19
000a9a 932a      	ST   -Y,R18
000a9b 01da      	MOVW R26,R20
000a9c 940e 02e7 	CALL _SetDataMotorPWM
                 ;                //LCD_GotoXY(0,1);        LCD_sByte(MKi);     LCD_Data(' ');
                 ;                //LCD_GotoXY(8,1);        LCD_sByte(MKa);     LCD_Data(' ');
                 ;
                 ;                ////////////////=====================================////////////////////////
                 ;
                 ;       }
                 ;}
                 _0x109:
000a9e 940e 224d 	CALL __LOADLOCR6
000aa0 962f      	ADIW R28,15
000aa1 9508      	RET
                 ;
                 ;#define Bit(x,y) (x & (1<<y))
                 ;
                 ;void ScanPerempatan(int16_t TopSpeed, unsigned char WarnaGaris, unsigned char WarnaPerempatan)
                 ;{   unsigned char sensor;
                 _ScanPerempatan:
                 ;    static int LastSpeed=100;
                 
                 	.DSEG
                 
                 	.CSEG
                 ;    unsigned char Counter;
                 ;    if((LastSpeed>TopSpeed) | FlagBelok==1) LastSpeed = 100;
000aa2 93aa      	ST   -Y,R26
000aa3 931a      	ST   -Y,R17
000aa4 930a      	ST   -Y,R16
                 ;	TopSpeed -> Y+4
                 ;	WarnaGaris -> Y+3
                 ;	WarnaPerempatan -> Y+2
                 ;	sensor -> R17
                 ;	Counter -> R16
000aa5 81ec      	LDD  R30,Y+4
000aa6 81fd      	LDD  R31,Y+4+1
000aa7 91a0 0d1d 	LDS  R26,_LastSpeed_S0000048000
000aa9 91b0 0d1e 	LDS  R27,_LastSpeed_S0000048000+1
000aab 940e 214b 	CALL __GTW12
000aad 2e0e      	MOV  R0,R30
000aae e0a0      	LDI  R26,0
000aaf fc27      	SBRC R2,7
000ab0 e0a1      	LDI  R26,1
000ab1 e0e1      	LDI  R30,LOW(1)
000ab2 940e 2146 	CALL __EQB12
000ab4 29e0      	OR   R30,R0
000ab5 f031      	BREQ _0x127
000ab6 e6e4      	LDI  R30,LOW(100)
000ab7 e0f0      	LDI  R31,HIGH(100)
000ab8 93e0 0d1d 	STS  _LastSpeed_S0000048000,R30
000aba 93f0 0d1e 	STS  _LastSpeed_S0000048000+1,R31
                 ;    FlagBelok=0;
                 _0x127:
000abc 94e8      	CLT
000abd f827      	BLD  R2,7
                 ;    Counter = 0;
000abe e000      	LDI  R16,LOW(0)
                 ;    do{  if(Counter<255)Counter++;
                 _0x129:
000abf 3f0f      	CPI  R16,255
000ac0 f408      	BRSH _0x12B
000ac1 5f0f      	SUBI R16,-1
                 ;         if((LastSpeed<TopSpeed))LastSpeed+=7;
                 _0x12B:
000ac2 81ec      	LDD  R30,Y+4
000ac3 81fd      	LDD  R31,Y+4+1
000ac4 91a0 0d1d 	LDS  R26,_LastSpeed_S0000048000
000ac6 91b0 0d1e 	LDS  R27,_LastSpeed_S0000048000+1
000ac8 17ae      	CP   R26,R30
000ac9 07bf      	CPC  R27,R31
000aca f44c      	BRGE _0x12C
000acb 91e0 0d1d 	LDS  R30,_LastSpeed_S0000048000
000acd 91f0 0d1e 	LDS  R31,_LastSpeed_S0000048000+1
000acf 9637      	ADIW R30,7
000ad0 93e0 0d1d 	STS  _LastSpeed_S0000048000,R30
000ad2 93f0 0d1e 	STS  _LastSpeed_S0000048000+1,R31
                 ;         ScanGaris(LastSpeed, WarnaGaris);
                 _0x12C:
000ad4 91e0 0d1d 	LDS  R30,_LastSpeed_S0000048000
000ad6 91f0 0d1e 	LDS  R31,_LastSpeed_S0000048000+1
000ad8 93fa      	ST   -Y,R31
000ad9 93ea      	ST   -Y,R30
000ada 81ad      	LDD  R26,Y+5
000adb def9      	RCALL _ScanGaris
                 ;         sensor = BacaSensorWarna(0,WarnaPerempatan);
000adc e0e0      	LDI  R30,LOW(0)
000add 93ea      	ST   -Y,R30
000ade 81ab      	LDD  R26,Y+3
000adf dedf      	RCALL _BacaSensorWarna
000ae0 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while((sensor|0B11000011)!=0B11000011);
000ae1 2fe1      	MOV  R30,R17
000ae2 6ce3      	ORI  R30,LOW(0xC3)
000ae3 3ce3      	CPI  R30,LOW(0xC3)
000ae4 f6d1      	BRNE _0x129
                 ;    do{  ScanGaris(LastSpeed, WarnaGaris);
                 _0x12E:
000ae5 91e0 0d1d 	LDS  R30,_LastSpeed_S0000048000
000ae7 91f0 0d1e 	LDS  R31,_LastSpeed_S0000048000+1
000ae9 93fa      	ST   -Y,R31
000aea 93ea      	ST   -Y,R30
000aeb 81ad      	LDD  R26,Y+5
000aec dee8      	RCALL _ScanGaris
                 ;         sensor = BacaSensorWarna(0,WarnaPerempatan);
000aed e0e0      	LDI  R30,LOW(0)
000aee 93ea      	ST   -Y,R30
000aef 81ab      	LDD  R26,Y+3
000af0 dece      	RCALL _BacaSensorWarna
000af1 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while((sensor|0B11000011)==0B11000011);
000af2 2fe1      	MOV  R30,R17
000af3 6ce3      	ORI  R30,LOW(0xC3)
000af4 3ce3      	CPI  R30,LOW(0xC3)
000af5 f379      	BREQ _0x12E
                 ;    StopPWM();
000af6 940e 031c 	CALL _StopPWM
                 ;    LastSpeed=TopSpeed;
000af8 81ec      	LDD  R30,Y+4
000af9 81fd      	LDD  R31,Y+4+1
000afa 93e0 0d1d 	STS  _LastSpeed_S0000048000,R30
000afc 93f0 0d1e 	STS  _LastSpeed_S0000048000+1,R31
                 ;}
000afe 8119      	LDD  R17,Y+1
000aff 8108      	LDD  R16,Y+0
000b00 c110      	RJMP _0x20A0006
                 ;
                 ;void Scan3Kanan(int16_t TopSpeed, unsigned char WarnaGaris, unsigned char Warna3)
                 ;{   unsigned char sensor;
                 _Scan3Kanan:
                 ;    static int LastSpeed=50;
                 
                 	.DSEG
                 
                 	.CSEG
                 ;    unsigned char Counter;
                 ;    if( LastSpeed>TopSpeed) LastSpeed = TopSpeed;
000b01 93aa      	ST   -Y,R26
000b02 931a      	ST   -Y,R17
000b03 930a      	ST   -Y,R16
                 ;	TopSpeed -> Y+4
                 ;	WarnaGaris -> Y+3
                 ;	Warna3 -> Y+2
                 ;	sensor -> R17
                 ;	Counter -> R16
000b04 81ec      	LDD  R30,Y+4
000b05 81fd      	LDD  R31,Y+4+1
000b06 91a0 0d1f 	LDS  R26,_LastSpeed_S0000049000
000b08 91b0 0d20 	LDS  R27,_LastSpeed_S0000049000+1
000b0a 17ea      	CP   R30,R26
000b0b 07fb      	CPC  R31,R27
000b0c f424      	BRGE _0x131
000b0d 93e0 0d1f 	STS  _LastSpeed_S0000049000,R30
000b0f 93f0 0d20 	STS  _LastSpeed_S0000049000+1,R31
                 ;    if( FlagBelok==1) LastSpeed = 50;
                 _0x131:
000b11 fe27      	SBRS R2,7
000b12 c006      	RJMP _0x132
000b13 e3e2      	LDI  R30,LOW(50)
000b14 e0f0      	LDI  R31,HIGH(50)
000b15 93e0 0d1f 	STS  _LastSpeed_S0000049000,R30
000b17 93f0 0d20 	STS  _LastSpeed_S0000049000+1,R31
                 ;    FlagBelok=0;
                 _0x132:
000b19 94e8      	CLT
000b1a f827      	BLD  R2,7
                 ;    Counter = 0;
000b1b e000      	LDI  R16,LOW(0)
                 ;    do{  if(Counter<255)Counter++;
                 _0x134:
000b1c 3f0f      	CPI  R16,255
000b1d f408      	BRSH _0x136
000b1e 5f0f      	SUBI R16,-1
                 ;         if((LastSpeed<TopSpeed))LastSpeed+=10;
                 _0x136:
000b1f 81ec      	LDD  R30,Y+4
000b20 81fd      	LDD  R31,Y+4+1
000b21 91a0 0d1f 	LDS  R26,_LastSpeed_S0000049000
000b23 91b0 0d20 	LDS  R27,_LastSpeed_S0000049000+1
000b25 17ae      	CP   R26,R30
000b26 07bf      	CPC  R27,R31
000b27 f44c      	BRGE _0x137
000b28 91e0 0d1f 	LDS  R30,_LastSpeed_S0000049000
000b2a 91f0 0d20 	LDS  R31,_LastSpeed_S0000049000+1
000b2c 963a      	ADIW R30,10
000b2d 93e0 0d1f 	STS  _LastSpeed_S0000049000,R30
000b2f 93f0 0d20 	STS  _LastSpeed_S0000049000+1,R31
                 ;         ScanGaris(LastSpeed, WarnaGaris);
                 _0x137:
000b31 91e0 0d1f 	LDS  R30,_LastSpeed_S0000049000
000b33 91f0 0d20 	LDS  R31,_LastSpeed_S0000049000+1
000b35 93fa      	ST   -Y,R31
000b36 93ea      	ST   -Y,R30
000b37 81ad      	LDD  R26,Y+5
000b38 de9c      	RCALL _ScanGaris
                 ;         sensor = BacaSensorWarna(0,Warna3);
000b39 e0e0      	LDI  R30,LOW(0)
000b3a 93ea      	ST   -Y,R30
000b3b 81ab      	LDD  R26,Y+3
000b3c de82      	RCALL _BacaSensorWarna
000b3d 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while((sensor|0B11111000)!=0B11111000);
000b3e 2fe1      	MOV  R30,R17
000b3f 6fe8      	ORI  R30,LOW(0xF8)
000b40 3fe8      	CPI  R30,LOW(0xF8)
000b41 f6d1      	BRNE _0x134
                 ;    do{  ScanGaris(LastSpeed, WarnaGaris);
                 _0x139:
000b42 91e0 0d1f 	LDS  R30,_LastSpeed_S0000049000
000b44 91f0 0d20 	LDS  R31,_LastSpeed_S0000049000+1
000b46 93fa      	ST   -Y,R31
000b47 93ea      	ST   -Y,R30
000b48 81ad      	LDD  R26,Y+5
000b49 de8b      	RCALL _ScanGaris
                 ;         sensor = BacaSensorWarna(0,Warna3);
000b4a e0e0      	LDI  R30,LOW(0)
000b4b 93ea      	ST   -Y,R30
000b4c 81ab      	LDD  R26,Y+3
000b4d de71      	RCALL _BacaSensorWarna
000b4e 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while((sensor|0B11111000)==0B11111000);
000b4f 2fe1      	MOV  R30,R17
000b50 6fe8      	ORI  R30,LOW(0xF8)
000b51 3fe8      	CPI  R30,LOW(0xF8)
000b52 f379      	BREQ _0x139
                 ;    StopPWM();
000b53 940e 031c 	CALL _StopPWM
                 ;    LastSpeed=TopSpeed;
000b55 81ec      	LDD  R30,Y+4
000b56 81fd      	LDD  R31,Y+4+1
000b57 93e0 0d1f 	STS  _LastSpeed_S0000049000,R30
000b59 93f0 0d20 	STS  _LastSpeed_S0000049000+1,R31
                 ;}
000b5b 8119      	LDD  R17,Y+1
000b5c 8108      	LDD  R16,Y+0
000b5d c0b3      	RJMP _0x20A0006
                 ;void Scan3Kiri(int16_t TopSpeed, unsigned char WarnaGaris, unsigned char Warna3)
                 ;{   unsigned char sensor;
                 _Scan3Kiri:
                 ;    static int LastSpeed=50;
                 
                 	.DSEG
                 
                 	.CSEG
                 ;    unsigned char Counter;
                 ;    if( LastSpeed>TopSpeed) LastSpeed = TopSpeed;
000b5e 93aa      	ST   -Y,R26
000b5f 931a      	ST   -Y,R17
000b60 930a      	ST   -Y,R16
                 ;	TopSpeed -> Y+4
                 ;	WarnaGaris -> Y+3
                 ;	Warna3 -> Y+2
                 ;	sensor -> R17
                 ;	Counter -> R16
000b61 81ec      	LDD  R30,Y+4
000b62 81fd      	LDD  R31,Y+4+1
000b63 91a0 0d21 	LDS  R26,_LastSpeed_S000004A000
000b65 91b0 0d22 	LDS  R27,_LastSpeed_S000004A000+1
000b67 17ea      	CP   R30,R26
000b68 07fb      	CPC  R31,R27
000b69 f424      	BRGE _0x13C
000b6a 93e0 0d21 	STS  _LastSpeed_S000004A000,R30
000b6c 93f0 0d22 	STS  _LastSpeed_S000004A000+1,R31
                 ;    if( FlagBelok==1) LastSpeed = 50;
                 _0x13C:
000b6e fe27      	SBRS R2,7
000b6f c006      	RJMP _0x13D
000b70 e3e2      	LDI  R30,LOW(50)
000b71 e0f0      	LDI  R31,HIGH(50)
000b72 93e0 0d21 	STS  _LastSpeed_S000004A000,R30
000b74 93f0 0d22 	STS  _LastSpeed_S000004A000+1,R31
                 ;    FlagBelok=0;
                 _0x13D:
000b76 94e8      	CLT
000b77 f827      	BLD  R2,7
                 ;    Counter = 0;
000b78 e000      	LDI  R16,LOW(0)
                 ;    do{  if(Counter<255)Counter++;
                 _0x13F:
000b79 3f0f      	CPI  R16,255
000b7a f408      	BRSH _0x141
000b7b 5f0f      	SUBI R16,-1
                 ;         if((LastSpeed<TopSpeed))LastSpeed+=10;
                 _0x141:
000b7c 81ec      	LDD  R30,Y+4
000b7d 81fd      	LDD  R31,Y+4+1
000b7e 91a0 0d21 	LDS  R26,_LastSpeed_S000004A000
000b80 91b0 0d22 	LDS  R27,_LastSpeed_S000004A000+1
000b82 17ae      	CP   R26,R30
000b83 07bf      	CPC  R27,R31
000b84 f44c      	BRGE _0x142
000b85 91e0 0d21 	LDS  R30,_LastSpeed_S000004A000
000b87 91f0 0d22 	LDS  R31,_LastSpeed_S000004A000+1
000b89 963a      	ADIW R30,10
000b8a 93e0 0d21 	STS  _LastSpeed_S000004A000,R30
000b8c 93f0 0d22 	STS  _LastSpeed_S000004A000+1,R31
                 ;         ScanGaris(LastSpeed, WarnaGaris);
                 _0x142:
000b8e 91e0 0d21 	LDS  R30,_LastSpeed_S000004A000
000b90 91f0 0d22 	LDS  R31,_LastSpeed_S000004A000+1
000b92 93fa      	ST   -Y,R31
000b93 93ea      	ST   -Y,R30
000b94 81ad      	LDD  R26,Y+5
000b95 de3f      	RCALL _ScanGaris
                 ;         sensor = BacaSensorWarna(0,Warna3);
000b96 e0e0      	LDI  R30,LOW(0)
000b97 93ea      	ST   -Y,R30
000b98 81ab      	LDD  R26,Y+3
000b99 de25      	RCALL _BacaSensorWarna
000b9a 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while((sensor|0B00011111)!=0B00011111);
000b9b 2fe1      	MOV  R30,R17
000b9c 61ef      	ORI  R30,LOW(0x1F)
000b9d 31ef      	CPI  R30,LOW(0x1F)
000b9e f6d1      	BRNE _0x13F
                 ;    do{  ScanGaris(LastSpeed, WarnaGaris);
                 _0x144:
000b9f 91e0 0d21 	LDS  R30,_LastSpeed_S000004A000
000ba1 91f0 0d22 	LDS  R31,_LastSpeed_S000004A000+1
000ba3 93fa      	ST   -Y,R31
000ba4 93ea      	ST   -Y,R30
000ba5 81ad      	LDD  R26,Y+5
000ba6 de2e      	RCALL _ScanGaris
                 ;         sensor = BacaSensorWarna(0,Warna3);
000ba7 e0e0      	LDI  R30,LOW(0)
000ba8 93ea      	ST   -Y,R30
000ba9 81ab      	LDD  R26,Y+3
000baa de14      	RCALL _BacaSensorWarna
000bab 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while((sensor|0B00011111)==0B00011111);
000bac 2fe1      	MOV  R30,R17
000bad 61ef      	ORI  R30,LOW(0x1F)
000bae 31ef      	CPI  R30,LOW(0x1F)
000baf f379      	BREQ _0x144
                 ;    StopPWM();
000bb0 940e 031c 	CALL _StopPWM
                 ;    LastSpeed=TopSpeed;
000bb2 81ec      	LDD  R30,Y+4
000bb3 81fd      	LDD  R31,Y+4+1
000bb4 93e0 0d21 	STS  _LastSpeed_S000004A000,R30
000bb6 93f0 0d22 	STS  _LastSpeed_S000004A000+1,R31
                 ;}
000bb8 8119      	LDD  R17,Y+1
000bb9 8108      	LDD  R16,Y+0
000bba c056      	RJMP _0x20A0006
                 ;
                 ;void BelKaPWM(int16_t Ki,int16_t Ka,unsigned char WarnaAkhir)
                 ;{   unsigned char sensor;
                 _BelKaPWM:
                 ;    SetDataMotorPWM(Ki,Ka);
000bbb 93aa      	ST   -Y,R26
000bbc 931a      	ST   -Y,R17
                 ;	Ki -> Y+4
                 ;	Ka -> Y+2
                 ;	WarnaAkhir -> Y+1
                 ;	sensor -> R17
000bbd 81ec      	LDD  R30,Y+4
000bbe 81fd      	LDD  R31,Y+4+1
000bbf 93fa      	ST   -Y,R31
000bc0 93ea      	ST   -Y,R30
000bc1 81ac      	LDD  R26,Y+4
000bc2 81bd      	LDD  R27,Y+4+1
000bc3 940e 02e7 	CALL _SetDataMotorPWM
                 ;    FlagBelok=1;
000bc5 9468      	SET
000bc6 f827      	BLD  R2,7
                 ;    // menunggu sensor kanan ke 1 atau ke 2 keluar garis
                 ;    delay_ms(50);
000bc7 e3a2      	LDI  R26,LOW(50)
000bc8 e0b0      	LDI  R27,0
000bc9 940e 1f6f 	CALL _delay_ms
                 ;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
                 _0x147:
000bcb e0e0      	LDI  R30,LOW(0)
000bcc 93ea      	ST   -Y,R30
000bcd 81aa      	LDD  R26,Y+2
000bce ddf0      	RCALL _BacaSensorWarna
000bcf 2f1e      	MOV  R17,R30
                 ;      } while(Bit(sensor,0)==0 || Bit(sensor,1)==0 );
000bd0 ff10      	SBRS R17,0
000bd1 c002      	RJMP _0x149
000bd2 fd11      	SBRC R17,1
000bd3 c001      	RJMP _0x148
                 _0x149:
000bd4 cff6      	RJMP _0x147
                 _0x148:
                 ;    // menunggu sensor kanan ke 1 atau ke 2 masuk garis
                 ;    delay_ms(50);
000bd5 e3a2      	LDI  R26,LOW(50)
000bd6 e0b0      	LDI  R27,0
000bd7 940e 1f6f 	CALL _delay_ms
                 ;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
                 _0x14C:
000bd9 e0e0      	LDI  R30,LOW(0)
000bda 93ea      	ST   -Y,R30
000bdb 81aa      	LDD  R26,Y+2
000bdc dde2      	RCALL _BacaSensorWarna
000bdd 2f1e      	MOV  R17,R30
                 ;      } while(Bit(sensor,0)!=0 && Bit(sensor,1)!=0);
000bde ff10      	SBRS R17,0
000bdf c002      	RJMP _0x14E
000be0 fd11      	SBRC R17,1
000be1 c001      	RJMP _0x14F
                 _0x14E:
000be2 c001      	RJMP _0x14D
                 _0x14F:
000be3 cff5      	RJMP _0x14C
                 _0x14D:
                 ;    StopPWM();
000be4 c029      	RJMP _0x20A0005
                 ;}
                 ;void BelKiPWM(int16_t Ki,int16_t Ka,unsigned char WarnaAkhir)
                 ;{   unsigned char sensor;
                 _BelKiPWM:
                 ;    SetDataMotorPWM(Ki,Ka);
000be5 93aa      	ST   -Y,R26
000be6 931a      	ST   -Y,R17
                 ;	Ki -> Y+4
                 ;	Ka -> Y+2
                 ;	WarnaAkhir -> Y+1
                 ;	sensor -> R17
000be7 81ec      	LDD  R30,Y+4
000be8 81fd      	LDD  R31,Y+4+1
000be9 93fa      	ST   -Y,R31
000bea 93ea      	ST   -Y,R30
000beb 81ac      	LDD  R26,Y+4
000bec 81bd      	LDD  R27,Y+4+1
000bed 940e 02e7 	CALL _SetDataMotorPWM
                 ;    FlagBelok=1;
000bef 9468      	SET
000bf0 f827      	BLD  R2,7
                 ;    // menunggu sensor kanan ke 6 atau ke 7 keluar garis
                 ;    delay_ms(50);
000bf1 e3a2      	LDI  R26,LOW(50)
000bf2 e0b0      	LDI  R27,0
000bf3 940e 1f6f 	CALL _delay_ms
                 ;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
                 _0x151:
000bf5 e0e0      	LDI  R30,LOW(0)
000bf6 93ea      	ST   -Y,R30
000bf7 81aa      	LDD  R26,Y+2
000bf8 ddc6      	RCALL _BacaSensorWarna
000bf9 2f1e      	MOV  R17,R30
                 ;      } while(Bit(sensor,7)==0 || Bit(sensor,6)==0 );
000bfa ff17      	SBRS R17,7
000bfb c002      	RJMP _0x153
000bfc fd16      	SBRC R17,6
000bfd c001      	RJMP _0x152
                 _0x153:
000bfe cff6      	RJMP _0x151
                 _0x152:
                 ;    // menunggu sensor kanan ke 6 atau ke 7 masuk garis
                 ;    delay_ms(50);
000bff e3a2      	LDI  R26,LOW(50)
000c00 e0b0      	LDI  R27,0
000c01 940e 1f6f 	CALL _delay_ms
                 ;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
                 _0x156:
000c03 e0e0      	LDI  R30,LOW(0)
000c04 93ea      	ST   -Y,R30
000c05 81aa      	LDD  R26,Y+2
000c06 ddb8      	RCALL _BacaSensorWarna
000c07 2f1e      	MOV  R17,R30
                 ;      } while(Bit(sensor,7)!=0 && Bit(sensor,6)!=0);
000c08 ff17      	SBRS R17,7
000c09 c002      	RJMP _0x158
000c0a fd16      	SBRC R17,6
000c0b c001      	RJMP _0x159
                 _0x158:
000c0c c001      	RJMP _0x157
                 _0x159:
000c0d cff5      	RJMP _0x156
                 _0x157:
                 ;    StopPWM();
                 _0x20A0005:
000c0e 940e 031c 	CALL _StopPWM
                 ;}
000c10 8118      	LDD  R17,Y+0
                 _0x20A0006:
000c11 9626      	ADIW R28,6
000c12 9508      	RET
                 ;#include "Include/Wall_Follower.c"
                 ;#define EchoKi PINF.7
                 ;#define TrigKi PORTF=0b01000000
                 ;#define EchoDpn PINF.5
                 ;#define TrigDpn PORTF=0b00010000
                 ;#define EchoKa PINF.3
                 ;#define TrigKa PORTF=0b00000100
                 ;
                 ;void ScanDindingKi(int16_t TopSpeed,int16_t SetPoint)
                 ;{
                 _ScanDindingKi:
                 ;    int16_t timeout,Kus,Dus,count;
                 ;
                 ;    int16_t MKi, MKa, Error, dError, u;
                 ;    static int16_t LastErrorDKi;
                 ;    int8_t flagBelok;
                 ;
                 ;    DDRF=0b01010100;
000c13 93ba      	ST   -Y,R27
000c14 93aa      	ST   -Y,R26
000c15 972d      	SBIW R28,13
000c16 940e 2246 	CALL __SAVELOCR6
                 ;	TopSpeed -> Y+21
                 ;	SetPoint -> Y+19
                 ;	timeout -> R16,R17
                 ;	Kus -> R18,R19
                 ;	Dus -> R20,R21
                 ;	count -> Y+17
                 ;	MKi -> Y+15
                 ;	MKa -> Y+13
                 ;	Error -> Y+11
                 ;	dError -> Y+9
                 ;	u -> Y+7
                 ;	flagBelok -> Y+6
000c18 e5e4      	LDI  R30,LOW(84)
000c19 93e0 0061 	STS  97,R30
                 ;
                 ;    //DEPAN
                 ;    PORTF=0x00;delay_us(2);TrigDpn;delay_us(10);PORTF=0x000;
000c1b e0e0      	LDI  R30,LOW(0)
000c1c 93e0 0062 	STS  98,R30
                +
000c1e e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000c1f 958a     +DEC R24
000c20 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
000c21 e1e0      	LDI  R30,LOW(16)
000c22 93e0 0062 	STS  98,R30
                +
000c24 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000c25 958a     +DEC R24
000c26 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
000c27 e0e0      	LDI  R30,LOW(0)
000c28 93e0 0062 	STS  98,R30
                 ;    usCounter=0; while (!EchoDpn&&usCounter<40); //time out 1000uS
000c2a 93e0 0d0e 	STS  _usCounter,R30
000c2c 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x15A:
000c2e 9905      	SBIC 0x0,5
000c2f c006      	RJMP _0x15D
000c30 91a0 0d0e 	LDS  R26,_usCounter
000c32 91b0 0d0f 	LDS  R27,_usCounter+1
000c34 9798      	SBIW R26,40
000c35 f008      	BRLO _0x15E
                 _0x15D:
000c36 c001      	RJMP _0x15C
                 _0x15E:
000c37 cff6      	RJMP _0x15A
                 _0x15C:
                 ;    usCounter=0; while (EchoDpn&&usCounter<1440); //time out 36000uS
000c38 e0e0      	LDI  R30,LOW(0)
000c39 93e0 0d0e 	STS  _usCounter,R30
000c3b 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x15F:
000c3d 9b05      	SBIS 0x0,5
000c3e c008      	RJMP _0x162
000c3f 91a0 0d0e 	LDS  R26,_usCounter
000c41 91b0 0d0f 	LDS  R27,_usCounter+1
000c43 3aa0      	CPI  R26,LOW(0x5A0)
000c44 e0e5      	LDI  R30,HIGH(0x5A0)
000c45 07be      	CPC  R27,R30
000c46 f008      	BRLO _0x163
                 _0x162:
000c47 c001      	RJMP _0x161
                 _0x163:
000c48 cff4      	RJMP _0x15F
                 _0x161:
                 ;    Dus=(usCounter*0.43125);
000c49 91e0 0d0e 	LDS  R30,_usCounter
000c4b 91f0 0d0f 	LDS  R31,_usCounter+1
000c4d 2766      	CLR  R22
000c4e 2777      	CLR  R23
000c4f 940e 1fdf 	CALL __CDF1
                +
000c51 ecad     +LDI R26 , LOW ( 0x3EDCCCCD )
000c52 ecbc     +LDI R27 , HIGH ( 0x3EDCCCCD )
000c53 ed8c     +LDI R24 , BYTE3 ( 0x3EDCCCCD )
000c54 e39e     +LDI R25 , BYTE4 ( 0x3EDCCCCD )
                 	__GETD2N 0x3EDCCCCD
000c55 940e 2064 	CALL __MULF12
000c57 940e 1fa8 	CALL __CFD1
000c59 01af      	MOVW R20,R30
                 ;
                 ;    delay_ms(10);
000c5a e0aa      	LDI  R26,LOW(10)
000c5b e0b0      	LDI  R27,0
000c5c 940e 1f6f 	CALL _delay_ms
                 ;
                 ;    //KIRI
                 ;    PORTF=0x00;delay_us(2);TrigKi;delay_us(10);PORTF=0x000;
000c5e e0e0      	LDI  R30,LOW(0)
000c5f 93e0 0062 	STS  98,R30
                +
000c61 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000c62 958a     +DEC R24
000c63 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
000c64 e4e0      	LDI  R30,LOW(64)
000c65 93e0 0062 	STS  98,R30
                +
000c67 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000c68 958a     +DEC R24
000c69 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
000c6a e0e0      	LDI  R30,LOW(0)
000c6b 93e0 0062 	STS  98,R30
                 ;    usCounter=0; while (!EchoKi&&usCounter<40); //time out 1000uS
000c6d 93e0 0d0e 	STS  _usCounter,R30
000c6f 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x164:
000c71 9907      	SBIC 0x0,7
000c72 c006      	RJMP _0x167
000c73 91a0 0d0e 	LDS  R26,_usCounter
000c75 91b0 0d0f 	LDS  R27,_usCounter+1
000c77 9798      	SBIW R26,40
000c78 f008      	BRLO _0x168
                 _0x167:
000c79 c001      	RJMP _0x166
                 _0x168:
000c7a cff6      	RJMP _0x164
                 _0x166:
                 ;    usCounter=0; while (EchoKi&&usCounter<1440); //time out 36000uS
000c7b e0e0      	LDI  R30,LOW(0)
000c7c 93e0 0d0e 	STS  _usCounter,R30
000c7e 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x169:
000c80 9b07      	SBIS 0x0,7
000c81 c008      	RJMP _0x16C
000c82 91a0 0d0e 	LDS  R26,_usCounter
000c84 91b0 0d0f 	LDS  R27,_usCounter+1
000c86 3aa0      	CPI  R26,LOW(0x5A0)
000c87 e0e5      	LDI  R30,HIGH(0x5A0)
000c88 07be      	CPC  R27,R30
000c89 f008      	BRLO _0x16D
                 _0x16C:
000c8a c001      	RJMP _0x16B
                 _0x16D:
000c8b cff4      	RJMP _0x169
                 _0x16B:
                 ;    Kus=(usCounter*0.43125);
000c8c 91e0 0d0e 	LDS  R30,_usCounter
000c8e 91f0 0d0f 	LDS  R31,_usCounter+1
000c90 2766      	CLR  R22
000c91 2777      	CLR  R23
000c92 940e 1fdf 	CALL __CDF1
                +
000c94 ecad     +LDI R26 , LOW ( 0x3EDCCCCD )
000c95 ecbc     +LDI R27 , HIGH ( 0x3EDCCCCD )
000c96 ed8c     +LDI R24 , BYTE3 ( 0x3EDCCCCD )
000c97 e39e     +LDI R25 , BYTE4 ( 0x3EDCCCCD )
                 	__GETD2N 0x3EDCCCCD
000c98 940e 2064 	CALL __MULF12
000c9a 940e 1fa8 	CALL __CFD1
000c9c 019f      	MOVW R18,R30
                 ;
                 ;    delay_ms(10);
000c9d e0aa      	LDI  R26,LOW(10)
000c9e e0b0      	LDI  R27,0
000c9f 940e 1f6f 	CALL _delay_ms
                 ;
                 ;    LCD_Hapus();
000ca1 940e 047c 	CALL _LCD_Hapus
                 ;    LCD_GotoXY(0,0);    LCD_Angka3(Kus);
000ca3 e0e0      	LDI  R30,LOW(0)
000ca4 93ea      	ST   -Y,R30
000ca5 e0a0      	LDI  R26,LOW(0)
000ca6 940e 0449 	CALL _LCD_GotoXY
000ca8 01d9      	MOVW R26,R18
000ca9 940e 055f 	CALL _LCD_Angka3
                 ;    LCD_GotoXY(8,0);    LCD_Angka3(Dus);
000cab e0e8      	LDI  R30,LOW(8)
000cac 93ea      	ST   -Y,R30
000cad e0a0      	LDI  R26,LOW(0)
000cae 940e 0449 	CALL _LCD_GotoXY
000cb0 01da      	MOVW R26,R20
000cb1 940e 055f 	CALL _LCD_Angka3
                 ;    //================================================//
                 ;
                 ;    if(Dus<=20){SetDataMotorPWM(200,-200);}
                +
000cb3 3145     +CPI R20 , LOW ( 21 )
000cb4 e0e0     +LDI R30 , HIGH ( 21 )
000cb5 075e     +CPC R21 , R30
                 	__CPWRN 20,21,21
000cb6 f43c      	BRGE _0x16E
000cb7 ece8      	LDI  R30,LOW(200)
000cb8 e0f0      	LDI  R31,HIGH(200)
000cb9 93fa      	ST   -Y,R31
000cba 93ea      	ST   -Y,R30
000cbb e3a8      	LDI  R26,LOW(65336)
000cbc efbf      	LDI  R27,HIGH(65336)
000cbd c066      	RJMP _0x27E
                 ;    else if(Kus>SetPoint+10){SetDataMotorPWM(50,200);}
                 _0x16E:
000cbe 89eb      	LDD  R30,Y+19
000cbf 89fc      	LDD  R31,Y+19+1
000cc0 963a      	ADIW R30,10
000cc1 17e2      	CP   R30,R18
000cc2 07f3      	CPC  R31,R19
000cc3 f43c      	BRGE _0x170
000cc4 e3e2      	LDI  R30,LOW(50)
000cc5 e0f0      	LDI  R31,HIGH(50)
000cc6 93fa      	ST   -Y,R31
000cc7 93ea      	ST   -Y,R30
000cc8 eca8      	LDI  R26,LOW(200)
000cc9 e0b0      	LDI  R27,0
000cca c059      	RJMP _0x27E
                 ;    else
                 _0x170:
                 ;    {
                 ;        Error = SetPoint - Kus ;
000ccb 89eb      	LDD  R30,Y+19
000ccc 89fc      	LDD  R31,Y+19+1
000ccd 1be2      	SUB  R30,R18
000cce 0bf3      	SBC  R31,R19
000ccf 87eb      	STD  Y+11,R30
000cd0 87fc      	STD  Y+11+1,R31
                 ;        dError = Error-LastErrorDKi;
000cd1 91a0 0d23 	LDS  R26,_LastErrorDKi_S000004D000
000cd3 91b0 0d24 	LDS  R27,_LastErrorDKi_S000004D000+1
000cd5 1bea      	SUB  R30,R26
000cd6 0bfb      	SBC  R31,R27
000cd7 87e9      	STD  Y+9,R30
000cd8 87fa      	STD  Y+9+1,R31
                 ;        LastErrorDKi = Error;
000cd9 85eb      	LDD  R30,Y+11
000cda 85fc      	LDD  R31,Y+11+1
000cdb 93e0 0d23 	STS  _LastErrorDKi_S000004D000,R30
000cdd 93f0 0d24 	STS  _LastErrorDKi_S000004D000+1,R31
                 ;
                 ;        u = ((SetKP * Error + SetKD*dError)); //Kp ---- Kd
000cdf e0a0      	LDI  R26,LOW(_SetKP)
000ce0 e0b0      	LDI  R27,HIGH(_SetKP)
000ce1 940e 221d 	CALL __EEPROMRDW
000ce3 85ab      	LDD  R26,Y+11
000ce4 85bc      	LDD  R27,Y+11+1
000ce5 940e 2151 	CALL __MULW12U
000ce7 01bf      	MOVW R22,R30
000ce8 e0a2      	LDI  R26,LOW(_SetKD)
000ce9 e0b0      	LDI  R27,HIGH(_SetKD)
000cea 940e 221d 	CALL __EEPROMRDW
000cec 85a9      	LDD  R26,Y+9
000ced 85ba      	LDD  R27,Y+9+1
000cee 940e 2151 	CALL __MULW12U
000cf0 0fe6      	ADD  R30,R22
000cf1 1ff7      	ADC  R31,R23
000cf2 83ef      	STD  Y+7,R30
000cf3 87f8      	STD  Y+7+1,R31
                 ;
                 ;        MKi = TopSpeed + u;
000cf4 89ad      	LDD  R26,Y+21
000cf5 89be      	LDD  R27,Y+21+1
000cf6 0fea      	ADD  R30,R26
000cf7 1ffb      	ADC  R31,R27
000cf8 87ef      	STD  Y+15,R30
000cf9 8bf8      	STD  Y+15+1,R31
                 ;        MKa = TopSpeed - u;
000cfa 81af      	LDD  R26,Y+7
000cfb 85b8      	LDD  R27,Y+7+1
000cfc 89ed      	LDD  R30,Y+21
000cfd 89fe      	LDD  R31,Y+21+1
000cfe 1bea      	SUB  R30,R26
000cff 0bfb      	SBC  R31,R27
000d00 87ed      	STD  Y+13,R30
000d01 87fe      	STD  Y+13+1,R31
                 ;        if (MKi>400) MKi = 400;
000d02 85af      	LDD  R26,Y+15
000d03 89b8      	LDD  R27,Y+15+1
000d04 39a1      	CPI  R26,LOW(0x191)
000d05 e0e1      	LDI  R30,HIGH(0x191)
000d06 07be      	CPC  R27,R30
000d07 f424      	BRGE _0x27F
                 ;        else if (MKi<-400) MKi = 400;
000d08 37a0      	CPI  R26,LOW(0xFE70)
000d09 efee      	LDI  R30,HIGH(0xFE70)
000d0a 07be      	CPC  R27,R30
000d0b f424      	BRGE _0x174
                 _0x27F:
000d0c e9e0      	LDI  R30,LOW(400)
000d0d e0f1      	LDI  R31,HIGH(400)
000d0e 87ef      	STD  Y+15,R30
000d0f 8bf8      	STD  Y+15+1,R31
                 ;        if (MKa>400) MKa = 400;
                 _0x174:
000d10 85ad      	LDD  R26,Y+13
000d11 85be      	LDD  R27,Y+13+1
000d12 39a1      	CPI  R26,LOW(0x191)
000d13 e0e1      	LDI  R30,HIGH(0x191)
000d14 07be      	CPC  R27,R30
000d15 f424      	BRGE _0x280
                 ;        else if (MKa<-400) MKa = 400;
000d16 37a0      	CPI  R26,LOW(0xFE70)
000d17 efee      	LDI  R30,HIGH(0xFE70)
000d18 07be      	CPC  R27,R30
000d19 f424      	BRGE _0x177
                 _0x280:
000d1a e9e0      	LDI  R30,LOW(400)
000d1b e0f1      	LDI  R31,HIGH(400)
000d1c 87ed      	STD  Y+13,R30
000d1d 87fe      	STD  Y+13+1,R31
                 ;        SetDataMotorPWM(MKi,MKa);
                 _0x177:
000d1e 85ef      	LDD  R30,Y+15
000d1f 89f8      	LDD  R31,Y+15+1
000d20 93fa      	ST   -Y,R31
000d21 93ea      	ST   -Y,R30
000d22 85af      	LDD  R26,Y+15
000d23 89b8      	LDD  R27,Y+15+1
                 _0x27E:
000d24 940e 02e7 	CALL _SetDataMotorPWM
                 ;    }
                 ;}
000d26 c123      	RJMP _0x20A0004
                 ;
                 ;void ScanDindingKa(int16_t TopSpeed,int16_t SetPoint)
                 ;{
                 _ScanDindingKa:
                 ;    int16_t timeout,Kus,Dus,count;
                 ;
                 ;    int16_t MKi, MKa, Error, dError, u;
                 ;    static int16_t LastErrorDKa;
                 ;    int8_t flagBelok;
                 ;
                 ;    DDRF=0b01010100;
000d27 93ba      	ST   -Y,R27
000d28 93aa      	ST   -Y,R26
000d29 972d      	SBIW R28,13
000d2a 940e 2246 	CALL __SAVELOCR6
                 ;	TopSpeed -> Y+21
                 ;	SetPoint -> Y+19
                 ;	timeout -> R16,R17
                 ;	Kus -> R18,R19
                 ;	Dus -> R20,R21
                 ;	count -> Y+17
                 ;	MKi -> Y+15
                 ;	MKa -> Y+13
                 ;	Error -> Y+11
                 ;	dError -> Y+9
                 ;	u -> Y+7
                 ;	flagBelok -> Y+6
000d2c e5e4      	LDI  R30,LOW(84)
000d2d 93e0 0061 	STS  97,R30
                 ;
                 ;    //DEPAN
                 ;    PORTF=0x00;delay_us(2);TrigDpn;delay_us(10);PORTF=0x000;
000d2f e0e0      	LDI  R30,LOW(0)
000d30 93e0 0062 	STS  98,R30
                +
000d32 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000d33 958a     +DEC R24
000d34 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
000d35 e1e0      	LDI  R30,LOW(16)
000d36 93e0 0062 	STS  98,R30
                +
000d38 e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000d39 958a     +DEC R24
000d3a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
000d3b e0e0      	LDI  R30,LOW(0)
000d3c 93e0 0062 	STS  98,R30
                 ;    usCounter=0; while (!EchoDpn&&usCounter<40); //time out 1000uS
000d3e 93e0 0d0e 	STS  _usCounter,R30
000d40 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x178:
000d42 9905      	SBIC 0x0,5
000d43 c006      	RJMP _0x17B
000d44 91a0 0d0e 	LDS  R26,_usCounter
000d46 91b0 0d0f 	LDS  R27,_usCounter+1
000d48 9798      	SBIW R26,40
000d49 f008      	BRLO _0x17C
                 _0x17B:
000d4a c001      	RJMP _0x17A
                 _0x17C:
000d4b cff6      	RJMP _0x178
                 _0x17A:
                 ;    usCounter=0; while (EchoDpn&&usCounter<1440); //time out 36000uS
000d4c e0e0      	LDI  R30,LOW(0)
000d4d 93e0 0d0e 	STS  _usCounter,R30
000d4f 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x17D:
000d51 9b05      	SBIS 0x0,5
000d52 c008      	RJMP _0x180
000d53 91a0 0d0e 	LDS  R26,_usCounter
000d55 91b0 0d0f 	LDS  R27,_usCounter+1
000d57 3aa0      	CPI  R26,LOW(0x5A0)
000d58 e0e5      	LDI  R30,HIGH(0x5A0)
000d59 07be      	CPC  R27,R30
000d5a f008      	BRLO _0x181
                 _0x180:
000d5b c001      	RJMP _0x17F
                 _0x181:
000d5c cff4      	RJMP _0x17D
                 _0x17F:
                 ;    Dus=(usCounter*0.43125);
000d5d 91e0 0d0e 	LDS  R30,_usCounter
000d5f 91f0 0d0f 	LDS  R31,_usCounter+1
000d61 2766      	CLR  R22
000d62 2777      	CLR  R23
000d63 940e 1fdf 	CALL __CDF1
                +
000d65 ecad     +LDI R26 , LOW ( 0x3EDCCCCD )
000d66 ecbc     +LDI R27 , HIGH ( 0x3EDCCCCD )
000d67 ed8c     +LDI R24 , BYTE3 ( 0x3EDCCCCD )
000d68 e39e     +LDI R25 , BYTE4 ( 0x3EDCCCCD )
                 	__GETD2N 0x3EDCCCCD
000d69 940e 2064 	CALL __MULF12
000d6b 940e 1fa8 	CALL __CFD1
000d6d 01af      	MOVW R20,R30
                 ;
                 ;    delay_ms(10);
000d6e e0aa      	LDI  R26,LOW(10)
000d6f e0b0      	LDI  R27,0
000d70 940e 1f6f 	CALL _delay_ms
                 ;
                 ;    //JARAK KANAN
                 ;    PORTF=0x00;delay_us(2);TrigKa;delay_us(10);PORTF=0x000;
000d72 e0e0      	LDI  R30,LOW(0)
000d73 93e0 0062 	STS  98,R30
                +
000d75 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000d76 958a     +DEC R24
000d77 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
000d78 e0e4      	LDI  R30,LOW(4)
000d79 93e0 0062 	STS  98,R30
                +
000d7b e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
000d7c 958a     +DEC R24
000d7d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
000d7e e0e0      	LDI  R30,LOW(0)
000d7f 93e0 0062 	STS  98,R30
                 ;    usCounter=0; while (!EchoKa&&usCounter<40); //time out 1000uS
000d81 93e0 0d0e 	STS  _usCounter,R30
000d83 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x182:
000d85 9903      	SBIC 0x0,3
000d86 c006      	RJMP _0x185
000d87 91a0 0d0e 	LDS  R26,_usCounter
000d89 91b0 0d0f 	LDS  R27,_usCounter+1
000d8b 9798      	SBIW R26,40
000d8c f008      	BRLO _0x186
                 _0x185:
000d8d c001      	RJMP _0x184
                 _0x186:
000d8e cff6      	RJMP _0x182
                 _0x184:
                 ;    usCounter=0; while (EchoKa&&usCounter<1440); //time out 36000uS
000d8f e0e0      	LDI  R30,LOW(0)
000d90 93e0 0d0e 	STS  _usCounter,R30
000d92 93e0 0d0f 	STS  _usCounter+1,R30
                 _0x187:
000d94 9b03      	SBIS 0x0,3
000d95 c008      	RJMP _0x18A
000d96 91a0 0d0e 	LDS  R26,_usCounter
000d98 91b0 0d0f 	LDS  R27,_usCounter+1
000d9a 3aa0      	CPI  R26,LOW(0x5A0)
000d9b e0e5      	LDI  R30,HIGH(0x5A0)
000d9c 07be      	CPC  R27,R30
000d9d f008      	BRLO _0x18B
                 _0x18A:
000d9e c001      	RJMP _0x189
                 _0x18B:
000d9f cff4      	RJMP _0x187
                 _0x189:
                 ;    Kus=(usCounter*0.43125);
000da0 91e0 0d0e 	LDS  R30,_usCounter
000da2 91f0 0d0f 	LDS  R31,_usCounter+1
000da4 2766      	CLR  R22
000da5 2777      	CLR  R23
000da6 940e 1fdf 	CALL __CDF1
                +
000da8 ecad     +LDI R26 , LOW ( 0x3EDCCCCD )
000da9 ecbc     +LDI R27 , HIGH ( 0x3EDCCCCD )
000daa ed8c     +LDI R24 , BYTE3 ( 0x3EDCCCCD )
000dab e39e     +LDI R25 , BYTE4 ( 0x3EDCCCCD )
                 	__GETD2N 0x3EDCCCCD
000dac 940e 2064 	CALL __MULF12
000dae 940e 1fa8 	CALL __CFD1
000db0 019f      	MOVW R18,R30
                 ;
                 ;    delay_ms(10);
000db1 e0aa      	LDI  R26,LOW(10)
000db2 e0b0      	LDI  R27,0
000db3 940e 1f6f 	CALL _delay_ms
                 ;
                 ;    LCD_Hapus();
000db5 940e 047c 	CALL _LCD_Hapus
                 ;    LCD_GotoXY(0,0);    LCD_Angka3(Kus);
000db7 e0e0      	LDI  R30,LOW(0)
000db8 93ea      	ST   -Y,R30
000db9 e0a0      	LDI  R26,LOW(0)
000dba 940e 0449 	CALL _LCD_GotoXY
000dbc 01d9      	MOVW R26,R18
000dbd 940e 055f 	CALL _LCD_Angka3
                 ;    LCD_GotoXY(8,0);    LCD_Angka3(Dus);
000dbf e0e8      	LDI  R30,LOW(8)
000dc0 93ea      	ST   -Y,R30
000dc1 e0a0      	LDI  R26,LOW(0)
000dc2 940e 0449 	CALL _LCD_GotoXY
000dc4 01da      	MOVW R26,R20
000dc5 940e 055f 	CALL _LCD_Angka3
                 ;    LCD_GotoXY(8,1);    LCD_Angka3(FlagBelok);
000dc7 e0e8      	LDI  R30,LOW(8)
000dc8 93ea      	ST   -Y,R30
000dc9 e0a1      	LDI  R26,LOW(1)
000dca 940e 0449 	CALL _LCD_GotoXY
000dcc e0e0      	LDI  R30,0
000dcd fc27      	SBRC R2,7
000dce e0e1      	LDI  R30,1
000dcf e0f0      	LDI  R31,0
000dd0 01df      	MOVW R26,R30
000dd1 940e 055f 	CALL _LCD_Angka3
                 ;    //================================================//
                 ;
                 ;    if(Dus<=20){SetDataMotorPWM(-200,200);}
                +
000dd3 3145     +CPI R20 , LOW ( 21 )
000dd4 e0e0     +LDI R30 , HIGH ( 21 )
000dd5 075e     +CPC R21 , R30
                 	__CPWRN 20,21,21
000dd6 f43c      	BRGE _0x18C
000dd7 e3e8      	LDI  R30,LOW(65336)
000dd8 efff      	LDI  R31,HIGH(65336)
000dd9 93fa      	ST   -Y,R31
000dda 93ea      	ST   -Y,R30
000ddb eca8      	LDI  R26,LOW(200)
000ddc e0b0      	LDI  R27,0
000ddd c06a      	RJMP _0x281
                 ;    else if(Kus>SetPoint+10)
                 _0x18C:
000dde 89eb      	LDD  R30,Y+19
000ddf 89fc      	LDD  R31,Y+19+1
000de0 963a      	ADIW R30,10
000de1 17e2      	CP   R30,R18
000de2 07f3      	CPC  R31,R19
000de3 f44c      	BRGE _0x18E
                 ;    {
                 ;        LED1=1;LED2=1;
000de4 9aac      	SBI  0x15,4
000de5 9aad      	SBI  0x15,5
                 ;        SetDataMotorPWM(200,50);
000de6 ece8      	LDI  R30,LOW(200)
000de7 e0f0      	LDI  R31,HIGH(200)
000de8 93fa      	ST   -Y,R31
000de9 93ea      	ST   -Y,R30
000dea e3a2      	LDI  R26,LOW(50)
000deb e0b0      	LDI  R27,0
000dec c05b      	RJMP _0x281
                 ;    }
                 ;    else
                 _0x18E:
                 ;    {
                 ;        Error = SetPoint - Kus ;
000ded 89eb      	LDD  R30,Y+19
000dee 89fc      	LDD  R31,Y+19+1
000def 1be2      	SUB  R30,R18
000df0 0bf3      	SBC  R31,R19
000df1 87eb      	STD  Y+11,R30
000df2 87fc      	STD  Y+11+1,R31
                 ;        dError = Error-LastErrorDKa;
000df3 91a0 0d25 	LDS  R26,_LastErrorDKa_S000004E000
000df5 91b0 0d26 	LDS  R27,_LastErrorDKa_S000004E000+1
000df7 1bea      	SUB  R30,R26
000df8 0bfb      	SBC  R31,R27
000df9 87e9      	STD  Y+9,R30
000dfa 87fa      	STD  Y+9+1,R31
                 ;        LastErrorDKa = Error;
000dfb 85eb      	LDD  R30,Y+11
000dfc 85fc      	LDD  R31,Y+11+1
000dfd 93e0 0d25 	STS  _LastErrorDKa_S000004E000,R30
000dff 93f0 0d26 	STS  _LastErrorDKa_S000004E000+1,R31
                 ;
                 ;        u = ((SetKP * Error + SetKD*dError)); //Kp ---- Kd
000e01 e0a0      	LDI  R26,LOW(_SetKP)
000e02 e0b0      	LDI  R27,HIGH(_SetKP)
000e03 940e 221d 	CALL __EEPROMRDW
000e05 85ab      	LDD  R26,Y+11
000e06 85bc      	LDD  R27,Y+11+1
000e07 940e 2151 	CALL __MULW12U
000e09 01bf      	MOVW R22,R30
000e0a e0a2      	LDI  R26,LOW(_SetKD)
000e0b e0b0      	LDI  R27,HIGH(_SetKD)
000e0c 940e 221d 	CALL __EEPROMRDW
000e0e 85a9      	LDD  R26,Y+9
000e0f 85ba      	LDD  R27,Y+9+1
000e10 940e 2151 	CALL __MULW12U
000e12 0fe6      	ADD  R30,R22
000e13 1ff7      	ADC  R31,R23
000e14 83ef      	STD  Y+7,R30
000e15 87f8      	STD  Y+7+1,R31
                 ;
                 ;        MKi = TopSpeed - u;
000e16 81af      	LDD  R26,Y+7
000e17 85b8      	LDD  R27,Y+7+1
000e18 89ed      	LDD  R30,Y+21
000e19 89fe      	LDD  R31,Y+21+1
000e1a 1bea      	SUB  R30,R26
000e1b 0bfb      	SBC  R31,R27
000e1c 87ef      	STD  Y+15,R30
000e1d 8bf8      	STD  Y+15+1,R31
                 ;        MKa = TopSpeed + u;
000e1e 81ef      	LDD  R30,Y+7
000e1f 85f8      	LDD  R31,Y+7+1
000e20 89ad      	LDD  R26,Y+21
000e21 89be      	LDD  R27,Y+21+1
000e22 0fea      	ADD  R30,R26
000e23 1ffb      	ADC  R31,R27
000e24 87ed      	STD  Y+13,R30
000e25 87fe      	STD  Y+13+1,R31
                 ;        if (MKi>400) MKi = 400;
000e26 85af      	LDD  R26,Y+15
000e27 89b8      	LDD  R27,Y+15+1
000e28 39a1      	CPI  R26,LOW(0x191)
000e29 e0e1      	LDI  R30,HIGH(0x191)
000e2a 07be      	CPC  R27,R30
000e2b f424      	BRGE _0x282
                 ;        else if (MKi<-400) MKi = 400;
000e2c 37a0      	CPI  R26,LOW(0xFE70)
000e2d efee      	LDI  R30,HIGH(0xFE70)
000e2e 07be      	CPC  R27,R30
000e2f f424      	BRGE _0x196
                 _0x282:
000e30 e9e0      	LDI  R30,LOW(400)
000e31 e0f1      	LDI  R31,HIGH(400)
000e32 87ef      	STD  Y+15,R30
000e33 8bf8      	STD  Y+15+1,R31
                 ;        if (MKa>400) MKa = 400;
                 _0x196:
000e34 85ad      	LDD  R26,Y+13
000e35 85be      	LDD  R27,Y+13+1
000e36 39a1      	CPI  R26,LOW(0x191)
000e37 e0e1      	LDI  R30,HIGH(0x191)
000e38 07be      	CPC  R27,R30
000e39 f424      	BRGE _0x283
                 ;        else if (MKa<-400) MKa = 400;
000e3a 37a0      	CPI  R26,LOW(0xFE70)
000e3b efee      	LDI  R30,HIGH(0xFE70)
000e3c 07be      	CPC  R27,R30
000e3d f424      	BRGE _0x199
                 _0x283:
000e3e e9e0      	LDI  R30,LOW(400)
000e3f e0f1      	LDI  R31,HIGH(400)
000e40 87ed      	STD  Y+13,R30
000e41 87fe      	STD  Y+13+1,R31
                 ;        SetDataMotorPWM(MKi,MKa);
                 _0x199:
000e42 85ef      	LDD  R30,Y+15
000e43 89f8      	LDD  R31,Y+15+1
000e44 93fa      	ST   -Y,R31
000e45 93ea      	ST   -Y,R30
000e46 85af      	LDD  R26,Y+15
000e47 89b8      	LDD  R27,Y+15+1
                 _0x281:
000e48 940e 02e7 	CALL _SetDataMotorPWM
                 ;    }
                 ;}
                 _0x20A0004:
000e4a 940e 224d 	CALL __LOADLOCR6
000e4c 9667      	ADIW R28,23
000e4d 9508      	RET
                 ;
                 ;void GarisDindingKi(int16_t TopSpeed,int16_t SetPoint,unsigned char WarnaGaris)
                 ;{
                 _GarisDindingKi:
                 ;    unsigned char sensor;
                 ;    static int LastSpeed=100;
                 
                 	.DSEG
                 
                 	.CSEG
                 ;    unsigned char Counter;
                 ;    if((LastSpeed>TopSpeed) | FlagBelok==1) LastSpeed = 100;
000e4e 93aa      	ST   -Y,R26
000e4f 931a      	ST   -Y,R17
000e50 930a      	ST   -Y,R16
                 ;	TopSpeed -> Y+5
                 ;	SetPoint -> Y+3
                 ;	WarnaGaris -> Y+2
                 ;	sensor -> R17
                 ;	Counter -> R16
000e51 81ed      	LDD  R30,Y+5
000e52 81fe      	LDD  R31,Y+5+1
000e53 91a0 0d27 	LDS  R26,_LastSpeed_S000004F000
000e55 91b0 0d28 	LDS  R27,_LastSpeed_S000004F000+1
000e57 940e 214b 	CALL __GTW12
000e59 2e0e      	MOV  R0,R30
000e5a e0a0      	LDI  R26,0
000e5b fc27      	SBRC R2,7
000e5c e0a1      	LDI  R26,1
000e5d e0e1      	LDI  R30,LOW(1)
000e5e 940e 2146 	CALL __EQB12
000e60 29e0      	OR   R30,R0
000e61 f031      	BREQ _0x19B
000e62 e6e4      	LDI  R30,LOW(100)
000e63 e0f0      	LDI  R31,HIGH(100)
000e64 93e0 0d27 	STS  _LastSpeed_S000004F000,R30
000e66 93f0 0d28 	STS  _LastSpeed_S000004F000+1,R31
                 ;    FlagBelok=0;
                 _0x19B:
000e68 94e8      	CLT
000e69 f827      	BLD  R2,7
                 ;    Counter = 0;
000e6a e000      	LDI  R16,LOW(0)
                 ;    do{  if(Counter<255)Counter++;
                 _0x19D:
000e6b 3f0f      	CPI  R16,255
000e6c f408      	BRSH _0x19F
000e6d 5f0f      	SUBI R16,-1
                 ;         if((LastSpeed<TopSpeed))LastSpeed+=7;
                 _0x19F:
000e6e 81ed      	LDD  R30,Y+5
000e6f 81fe      	LDD  R31,Y+5+1
000e70 91a0 0d27 	LDS  R26,_LastSpeed_S000004F000
000e72 91b0 0d28 	LDS  R27,_LastSpeed_S000004F000+1
000e74 17ae      	CP   R26,R30
000e75 07bf      	CPC  R27,R31
000e76 f44c      	BRGE _0x1A0
000e77 91e0 0d27 	LDS  R30,_LastSpeed_S000004F000
000e79 91f0 0d28 	LDS  R31,_LastSpeed_S000004F000+1
000e7b 9637      	ADIW R30,7
000e7c 93e0 0d27 	STS  _LastSpeed_S000004F000,R30
000e7e 93f0 0d28 	STS  _LastSpeed_S000004F000+1,R31
                 ;         ScanDindingKi(LastSpeed,SetPoint);
                 _0x1A0:
000e80 91e0 0d27 	LDS  R30,_LastSpeed_S000004F000
000e82 91f0 0d28 	LDS  R31,_LastSpeed_S000004F000+1
000e84 93fa      	ST   -Y,R31
000e85 93ea      	ST   -Y,R30
000e86 81ad      	LDD  R26,Y+5
000e87 81be      	LDD  R27,Y+5+1
000e88 dd8a      	RCALL _ScanDindingKi
                 ;         sensor = BacaSensorWarna(0,WarnaGaris);
000e89 e0e0      	LDI  R30,LOW(0)
000e8a 93ea      	ST   -Y,R30
000e8b 81ab      	LDD  R26,Y+3
000e8c db32      	RCALL _BacaSensorWarna
000e8d 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while (sensor==0B11111111); //((sensor|0B11000011)!=0B11000011);
000e8e 3f1f      	CPI  R17,255
000e8f f2d9      	BREQ _0x19D
                 ;    do{  ScanDindingKi(LastSpeed,SetPoint);
                 _0x1A2:
000e90 91e0 0d27 	LDS  R30,_LastSpeed_S000004F000
000e92 91f0 0d28 	LDS  R31,_LastSpeed_S000004F000+1
000e94 93fa      	ST   -Y,R31
000e95 93ea      	ST   -Y,R30
000e96 81ad      	LDD  R26,Y+5
000e97 81be      	LDD  R27,Y+5+1
000e98 dd7a      	RCALL _ScanDindingKi
                 ;         sensor = BacaSensorWarna(0,WarnaGaris);
000e99 e0e0      	LDI  R30,LOW(0)
000e9a 93ea      	ST   -Y,R30
000e9b 81ab      	LDD  R26,Y+3
000e9c db22      	RCALL _BacaSensorWarna
000e9d 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while(sensor!=0B11111111);//((sensor|0B11000011)==0B11000011);
000e9e 3f1f      	CPI  R17,255
000e9f f781      	BRNE _0x1A2
                 ;    StopPWM();
000ea0 940e 031c 	CALL _StopPWM
                 ;    LastSpeed=TopSpeed;
000ea2 81ed      	LDD  R30,Y+5
000ea3 81fe      	LDD  R31,Y+5+1
000ea4 93e0 0d27 	STS  _LastSpeed_S000004F000,R30
000ea6 93f0 0d28 	STS  _LastSpeed_S000004F000+1,R31
                 ;}
000ea8 c05a      	RJMP _0x20A0003
                 ;
                 ;void GarisDindingKa(int16_t TopSpeed,int16_t SetPoint,unsigned char WarnaGaris)
                 ;{
                 _GarisDindingKa:
                 ;    unsigned char sensor;
                 ;    static int LastSpeed=100;
                 
                 	.DSEG
                 
                 	.CSEG
                 ;    unsigned char Counter;
                 ;    if((LastSpeed>TopSpeed) | FlagBelok==1) LastSpeed = 100;
000ea9 93aa      	ST   -Y,R26
000eaa 931a      	ST   -Y,R17
000eab 930a      	ST   -Y,R16
                 ;	TopSpeed -> Y+5
                 ;	SetPoint -> Y+3
                 ;	WarnaGaris -> Y+2
                 ;	sensor -> R17
                 ;	Counter -> R16
000eac 81ed      	LDD  R30,Y+5
000ead 81fe      	LDD  R31,Y+5+1
000eae 91a0 0d29 	LDS  R26,_LastSpeed_S0000050000
000eb0 91b0 0d2a 	LDS  R27,_LastSpeed_S0000050000+1
000eb2 940e 214b 	CALL __GTW12
000eb4 2e0e      	MOV  R0,R30
000eb5 e0a0      	LDI  R26,0
000eb6 fc27      	SBRC R2,7
000eb7 e0a1      	LDI  R26,1
000eb8 e0e1      	LDI  R30,LOW(1)
000eb9 940e 2146 	CALL __EQB12
000ebb 29e0      	OR   R30,R0
000ebc f031      	BREQ _0x1A5
000ebd e6e4      	LDI  R30,LOW(100)
000ebe e0f0      	LDI  R31,HIGH(100)
000ebf 93e0 0d29 	STS  _LastSpeed_S0000050000,R30
000ec1 93f0 0d2a 	STS  _LastSpeed_S0000050000+1,R31
                 ;    FlagBelok=0;
                 _0x1A5:
000ec3 94e8      	CLT
000ec4 f827      	BLD  R2,7
                 ;    Counter = 0;
000ec5 e000      	LDI  R16,LOW(0)
                 ;    do{  if(Counter<255)Counter++;
                 _0x1A7:
000ec6 3f0f      	CPI  R16,255
000ec7 f408      	BRSH _0x1A9
000ec8 5f0f      	SUBI R16,-1
                 ;         if((LastSpeed<TopSpeed))LastSpeed+=7;
                 _0x1A9:
000ec9 81ed      	LDD  R30,Y+5
000eca 81fe      	LDD  R31,Y+5+1
000ecb 91a0 0d29 	LDS  R26,_LastSpeed_S0000050000
000ecd 91b0 0d2a 	LDS  R27,_LastSpeed_S0000050000+1
000ecf 17ae      	CP   R26,R30
000ed0 07bf      	CPC  R27,R31
000ed1 f44c      	BRGE _0x1AA
000ed2 91e0 0d29 	LDS  R30,_LastSpeed_S0000050000
000ed4 91f0 0d2a 	LDS  R31,_LastSpeed_S0000050000+1
000ed6 9637      	ADIW R30,7
000ed7 93e0 0d29 	STS  _LastSpeed_S0000050000,R30
000ed9 93f0 0d2a 	STS  _LastSpeed_S0000050000+1,R31
                 ;         ScanDindingKa(LastSpeed,SetPoint);
                 _0x1AA:
000edb 91e0 0d29 	LDS  R30,_LastSpeed_S0000050000
000edd 91f0 0d2a 	LDS  R31,_LastSpeed_S0000050000+1
000edf 93fa      	ST   -Y,R31
000ee0 93ea      	ST   -Y,R30
000ee1 81ad      	LDD  R26,Y+5
000ee2 81be      	LDD  R27,Y+5+1
000ee3 de43      	RCALL _ScanDindingKa
                 ;         sensor = BacaSensorWarna(0,WarnaGaris);
000ee4 e0e0      	LDI  R30,LOW(0)
000ee5 93ea      	ST   -Y,R30
000ee6 81ab      	LDD  R26,Y+3
000ee7 dad7      	RCALL _BacaSensorWarna
000ee8 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while(sensor==0B11111111); //((sensor|0B11000011)!=0B11000011);
000ee9 3f1f      	CPI  R17,255
000eea f2d9      	BREQ _0x1A7
                 ;    do{  ScanDindingKa(LastSpeed,SetPoint);
                 _0x1AC:
000eeb 91e0 0d29 	LDS  R30,_LastSpeed_S0000050000
000eed 91f0 0d2a 	LDS  R31,_LastSpeed_S0000050000+1
000eef 93fa      	ST   -Y,R31
000ef0 93ea      	ST   -Y,R30
000ef1 81ad      	LDD  R26,Y+5
000ef2 81be      	LDD  R27,Y+5+1
000ef3 de33      	RCALL _ScanDindingKa
                 ;         sensor = BacaSensorWarna(0,WarnaGaris);
000ef4 e0e0      	LDI  R30,LOW(0)
000ef5 93ea      	ST   -Y,R30
000ef6 81ab      	LDD  R26,Y+3
000ef7 dac7      	RCALL _BacaSensorWarna
000ef8 2f1e      	MOV  R17,R30
                 ;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
                 ;    }while(sensor!=0B11111111); //((sensor|0B11000011)==0B11000011);
000ef9 3f1f      	CPI  R17,255
000efa f781      	BRNE _0x1AC
                 ;    StopPWM();
000efb 940e 031c 	CALL _StopPWM
                 ;    LastSpeed=TopSpeed;
000efd 81ed      	LDD  R30,Y+5
000efe 81fe      	LDD  R31,Y+5+1
000eff 93e0 0d29 	STS  _LastSpeed_S0000050000,R30
000f01 93f0 0d2a 	STS  _LastSpeed_S0000050000+1,R31
                 ;}
                 _0x20A0003:
000f03 8119      	LDD  R17,Y+1
000f04 8108      	LDD  R16,Y+0
000f05 9627      	ADIW R28,7
000f06 9508      	RET
                 ;
                 ;void WaktuDindingKi(int16_t TopSpeed,int16_t SetPoint,uint8_t Durasi)
                 ;{
                 _WaktuDindingKi:
                 ;    DTimeTick=0;DTime=0; //Reset Timer WallFollower
000f07 93aa      	ST   -Y,R26
                 ;	TopSpeed -> Y+3
                 ;	SetPoint -> Y+1
                 ;	Durasi -> Y+0
000f08 e0e0      	LDI  R30,LOW(0)
000f09 93e0 0d17 	STS  _DTimeTick,R30
000f0b 93e0 0d15 	STS  _DTime,R30
000f0d 93e0 0d16 	STS  _DTime+1,R30
                 ;
                 ;    while(DTime<= Durasi){ScanDindingKi(TopSpeed,SetPoint);}
                 _0x1AE:
000f0f 81e8      	LD   R30,Y
000f10 91a0 0d15 	LDS  R26,_DTime
000f12 91b0 0d16 	LDS  R27,_DTime+1
000f14 e0f0      	LDI  R31,0
000f15 17ea      	CP   R30,R26
000f16 07fb      	CPC  R31,R27
000f17 f040      	BRLO _0x1B0
000f18 81eb      	LDD  R30,Y+3
000f19 81fc      	LDD  R31,Y+3+1
000f1a 93fa      	ST   -Y,R31
000f1b 93ea      	ST   -Y,R30
000f1c 81ab      	LDD  R26,Y+3
000f1d 81bc      	LDD  R27,Y+3+1
000f1e dcf4      	RCALL _ScanDindingKi
000f1f cfef      	RJMP _0x1AE
                 _0x1B0:
                 ;    StopPWM();
000f20 c019      	RJMP _0x20A0002
                 ;}
                 ;
                 ;void WaktuDindingKa(int16_t TopSpeed,int16_t SetPoint,uint8_t Durasi)
                 ;{
                 _WaktuDindingKa:
                 ;    DTimeTick=0;DTime=0; //Reset Timer WallFollower
000f21 93aa      	ST   -Y,R26
                 ;	TopSpeed -> Y+3
                 ;	SetPoint -> Y+1
                 ;	Durasi -> Y+0
000f22 e0e0      	LDI  R30,LOW(0)
000f23 93e0 0d17 	STS  _DTimeTick,R30
000f25 93e0 0d15 	STS  _DTime,R30
000f27 93e0 0d16 	STS  _DTime+1,R30
                 ;
                 ;    while(DTime<= Durasi){ScanDindingKa(TopSpeed,SetPoint);}
                 _0x1B1:
000f29 81e8      	LD   R30,Y
000f2a 91a0 0d15 	LDS  R26,_DTime
000f2c 91b0 0d16 	LDS  R27,_DTime+1
000f2e e0f0      	LDI  R31,0
000f2f 17ea      	CP   R30,R26
000f30 07fb      	CPC  R31,R27
000f31 f040      	BRLO _0x1B3
000f32 81eb      	LDD  R30,Y+3
000f33 81fc      	LDD  R31,Y+3+1
000f34 93fa      	ST   -Y,R31
000f35 93ea      	ST   -Y,R30
000f36 81ab      	LDD  R26,Y+3
000f37 81bc      	LDD  R27,Y+3+1
000f38 ddee      	RCALL _ScanDindingKa
000f39 cfef      	RJMP _0x1B1
                 _0x1B3:
                 ;    StopPWM();
                 _0x20A0002:
000f3a 940e 031c 	CALL _StopPWM
                 ;}
000f3c 9625      	ADIW R28,5
000f3d 9508      	RET
                 ;
                 ;#define Diameter_Roda   6.4  //Diameter dalam CM
                 ;#define Pulse_PerRotasi 283
                 ;#define Keliling_Roda   (PI*Diameter_Roda)
                 ;#define Pulse_PerCM     Pulse_PerRotasi/Keliling_Roda
                 ;#define CM_PerPulse     Keliling_Roda/Pulse_PerRotasi
                 ;
                 ;#define Jarak_Roda      15.5 //Jarak dalam CM
                 ;
                 ;#define Lengan          SudutServo6
                 ;#define Capit1          SudutServo7
                 ;#define Capit2          SudutServo8
                 ;
                 ;uint8_t notasi_bebas[5],notasi_dinding[5],notasi_buzzer[4],notasi_lcd[17],notasi_gripper[3],notasi_garis[4],notasi_obyek[5],notasi_delay[1],notasi_tes[5];
                 ;uint8_t temp_char[3],xstring[16];
                 ;uint8_t i,j,k;
                 ;uint8_t flag_aksi;
                 ;
                 ;int16_t pwmki,pwmka;
                 ;
                 ;void Greeting()
                 ;{
                 _Greeting:
                 ;    Lengan(160); //turun
000f3e eaa0      	LDI  R26,LOW(160)
000f3f 940e 02cb 	CALL _SudutServo6
                 ;    Capit1(90);
000f41 e5aa      	LDI  R26,LOW(90)
000f42 940e 02d2 	CALL _SudutServo7
                 ;    SudutServo8 (90);
000f44 e5aa      	LDI  R26,LOW(90)
000f45 940e 02d9 	CALL _SudutServo8
                 ;    delay_ms(500);
000f47 efa4      	LDI  R26,LOW(500)
000f48 e0b1      	LDI  R27,HIGH(500)
000f49 940e 1f6f 	CALL _delay_ms
                 ;
                 ;    //==========Nada==========//
                 ;    Lengan(160);
000f4b eaa0      	LDI  R26,LOW(160)
000f4c 940e 02cb 	CALL _SudutServo6
                 ;    Capit1(90);
000f4e e5aa      	LDI  R26,LOW(90)
000f4f 940e 02d2 	CALL _SudutServo7
                 ;    SudutServo8 (160);
000f51 eaa0      	LDI  R26,LOW(160)
000f52 940e 02d9 	CALL _SudutServo8
                 ;    for(i=0;i<3;i++)
000f54 e0e0      	LDI  R30,LOW(0)
000f55 93e0 0d67 	STS  _i,R30
                 _0x1B5:
000f57 91a0 0d67 	LDS  R26,_i
000f59 30a3      	CPI  R26,LOW(0x3)
000f5a f538      	BRSH _0x1B6
                 ;    {
                 ;        Buzzer(Melodi[i],Tempo[i]*13);
000f5b 91e0 0d67 	LDS  R30,_i
000f5d e8ac      	LDI  R26,LOW(_Melodi*2)
000f5e e0b0      	LDI  R27,HIGH(_Melodi*2)
000f5f e080      	LDI  R24,BYTE3(_Melodi*2)
000f60 27ff      	CLR  R31
000f61 2766      	CLR  R22
000f62 2777      	CLR  R23
000f63 940e 2131 	CALL __LSLD1
000f65 940e 211b 	CALL __ADDD12
000f67 940e 21e9 	CALL __GETW1PF
000f69 93fa      	ST   -Y,R31
000f6a 93ea      	ST   -Y,R30
000f6b 91e0 0d67 	LDS  R30,_i
000f6d 27ff      	CLR  R31
000f6e 2766      	CLR  R22
000f6f 2777      	CLR  R23
000f70 5de8      	SUBI R30,LOW(-_Tempo*2)
000f71 4ffe      	SBCI R31,HIGH(-_Tempo*2)
000f72 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
000f73 bf6b     +OUT RAMPZ , R22
000f74 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
000f75 e0ad      	LDI  R26,LOW(13)
000f76 9fea      	MUL  R30,R26
000f77 01f0      	MOVW R30,R0
000f78 e0f0      	LDI  R31,0
000f79 01df      	MOVW R26,R30
000f7a 940e 060c 	CALL _Buzzer
                 ;    }
000f7c 91e0 0d67 	LDS  R30,_i
000f7e 5fef      	SUBI R30,-LOW(1)
000f7f 93e0 0d67 	STS  _i,R30
000f81 cfd5      	RJMP _0x1B5
                 _0x1B6:
                 ;
                 ;    Lengan(160);
000f82 eaa0      	LDI  R26,LOW(160)
000f83 940e 02cb 	CALL _SudutServo6
                 ;    Capit1(20);
000f85 e1a4      	LDI  R26,LOW(20)
000f86 940e 02d2 	CALL _SudutServo7
                 ;    SudutServo8(160);
000f88 eaa0      	LDI  R26,LOW(160)
000f89 940e 02d9 	CALL _SudutServo8
                 ;    for(i=3;i<5;i++)
000f8b e0e3      	LDI  R30,LOW(3)
000f8c 93e0 0d67 	STS  _i,R30
                 _0x1B8:
000f8e 91a0 0d67 	LDS  R26,_i
000f90 30a5      	CPI  R26,LOW(0x5)
000f91 f538      	BRSH _0x1B9
                 ;    {
                 ;        Buzzer(Melodi[i],Tempo[i]*13);
000f92 91e0 0d67 	LDS  R30,_i
000f94 e8ac      	LDI  R26,LOW(_Melodi*2)
000f95 e0b0      	LDI  R27,HIGH(_Melodi*2)
000f96 e080      	LDI  R24,BYTE3(_Melodi*2)
000f97 27ff      	CLR  R31
000f98 2766      	CLR  R22
000f99 2777      	CLR  R23
000f9a 940e 2131 	CALL __LSLD1
000f9c 940e 211b 	CALL __ADDD12
000f9e 940e 21e9 	CALL __GETW1PF
000fa0 93fa      	ST   -Y,R31
000fa1 93ea      	ST   -Y,R30
000fa2 91e0 0d67 	LDS  R30,_i
000fa4 27ff      	CLR  R31
000fa5 2766      	CLR  R22
000fa6 2777      	CLR  R23
000fa7 5de8      	SUBI R30,LOW(-_Tempo*2)
000fa8 4ffe      	SBCI R31,HIGH(-_Tempo*2)
000fa9 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
000faa bf6b     +OUT RAMPZ , R22
000fab 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
000fac e0ad      	LDI  R26,LOW(13)
000fad 9fea      	MUL  R30,R26
000fae 01f0      	MOVW R30,R0
000faf e0f0      	LDI  R31,0
000fb0 01df      	MOVW R26,R30
000fb1 940e 060c 	CALL _Buzzer
                 ;    }
000fb3 91e0 0d67 	LDS  R30,_i
000fb5 5fef      	SUBI R30,-LOW(1)
000fb6 93e0 0d67 	STS  _i,R30
000fb8 cfd5      	RJMP _0x1B8
                 _0x1B9:
                 ;
                 ;    Lengan(70);
000fb9 e4a6      	LDI  R26,LOW(70)
000fba 940e 02cb 	CALL _SudutServo6
                 ;    Capit1(20);
000fbc e1a4      	LDI  R26,LOW(20)
000fbd 940e 02d2 	CALL _SudutServo7
                 ;    SudutServo8(160);
000fbf eaa0      	LDI  R26,LOW(160)
000fc0 940e 02d9 	CALL _SudutServo8
                 ;    for(i=5;i<8;i++)
000fc2 e0e5      	LDI  R30,LOW(5)
000fc3 93e0 0d67 	STS  _i,R30
                 _0x1BB:
000fc5 91a0 0d67 	LDS  R26,_i
000fc7 30a8      	CPI  R26,LOW(0x8)
000fc8 f538      	BRSH _0x1BC
                 ;    {
                 ;        Buzzer(Melodi[i],Tempo[i]*13);
000fc9 91e0 0d67 	LDS  R30,_i
000fcb e8ac      	LDI  R26,LOW(_Melodi*2)
000fcc e0b0      	LDI  R27,HIGH(_Melodi*2)
000fcd e080      	LDI  R24,BYTE3(_Melodi*2)
000fce 27ff      	CLR  R31
000fcf 2766      	CLR  R22
000fd0 2777      	CLR  R23
000fd1 940e 2131 	CALL __LSLD1
000fd3 940e 211b 	CALL __ADDD12
000fd5 940e 21e9 	CALL __GETW1PF
000fd7 93fa      	ST   -Y,R31
000fd8 93ea      	ST   -Y,R30
000fd9 91e0 0d67 	LDS  R30,_i
000fdb 27ff      	CLR  R31
000fdc 2766      	CLR  R22
000fdd 2777      	CLR  R23
000fde 5de8      	SUBI R30,LOW(-_Tempo*2)
000fdf 4ffe      	SBCI R31,HIGH(-_Tempo*2)
000fe0 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
000fe1 bf6b     +OUT RAMPZ , R22
000fe2 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
000fe3 e0ad      	LDI  R26,LOW(13)
000fe4 9fea      	MUL  R30,R26
000fe5 01f0      	MOVW R30,R0
000fe6 e0f0      	LDI  R31,0
000fe7 01df      	MOVW R26,R30
000fe8 940e 060c 	CALL _Buzzer
                 ;    }
000fea 91e0 0d67 	LDS  R30,_i
000fec 5fef      	SUBI R30,-LOW(1)
000fed 93e0 0d67 	STS  _i,R30
000fef cfd5      	RJMP _0x1BB
                 _0x1BC:
                 ;
                 ;    Lengan(70);
000ff0 e4a6      	LDI  R26,LOW(70)
000ff1 940e 02cb 	CALL _SudutServo6
                 ;    Capit1(90);
000ff3 e5aa      	LDI  R26,LOW(90)
000ff4 940e 02d2 	CALL _SudutServo7
                 ;    SudutServo8(90);
000ff6 e5aa      	LDI  R26,LOW(90)
000ff7 940e 02d9 	CALL _SudutServo8
                 ;    for(i=8;i<12;i++)
000ff9 e0e8      	LDI  R30,LOW(8)
000ffa 93e0 0d67 	STS  _i,R30
                 _0x1BE:
000ffc 91a0 0d67 	LDS  R26,_i
000ffe 30ac      	CPI  R26,LOW(0xC)
000fff f538      	BRSH _0x1BF
                 ;    {
                 ;        Buzzer(Melodi[i],Tempo[i]*13);
001000 91e0 0d67 	LDS  R30,_i
001002 e8ac      	LDI  R26,LOW(_Melodi*2)
001003 e0b0      	LDI  R27,HIGH(_Melodi*2)
001004 e080      	LDI  R24,BYTE3(_Melodi*2)
001005 27ff      	CLR  R31
001006 2766      	CLR  R22
001007 2777      	CLR  R23
001008 940e 2131 	CALL __LSLD1
00100a 940e 211b 	CALL __ADDD12
00100c 940e 21e9 	CALL __GETW1PF
00100e 93fa      	ST   -Y,R31
00100f 93ea      	ST   -Y,R30
001010 91e0 0d67 	LDS  R30,_i
001012 27ff      	CLR  R31
001013 2766      	CLR  R22
001014 2777      	CLR  R23
001015 5de8      	SUBI R30,LOW(-_Tempo*2)
001016 4ffe      	SBCI R31,HIGH(-_Tempo*2)
001017 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
001018 bf6b     +OUT RAMPZ , R22
001019 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00101a e0ad      	LDI  R26,LOW(13)
00101b 9fea      	MUL  R30,R26
00101c 01f0      	MOVW R30,R0
00101d e0f0      	LDI  R31,0
00101e 01df      	MOVW R26,R30
00101f 940e 060c 	CALL _Buzzer
                 ;    }
001021 91e0 0d67 	LDS  R30,_i
001023 5fef      	SUBI R30,-LOW(1)
001024 93e0 0d67 	STS  _i,R30
001026 cfd5      	RJMP _0x1BE
                 _0x1BF:
                 ;
                 ;    Lengan(160);
001027 eaa0      	LDI  R26,LOW(160)
001028 940e 02cb 	CALL _SudutServo6
                 ;    Capit1(90);
00102a e5aa      	LDI  R26,LOW(90)
00102b 940e 02d2 	CALL _SudutServo7
                 ;    SudutServo8(90);
00102d e5aa      	LDI  R26,LOW(90)
00102e 940e 02d9 	CALL _SudutServo8
                 ;    for(i=12;i<16;i++)
001030 e0ec      	LDI  R30,LOW(12)
001031 93e0 0d67 	STS  _i,R30
                 _0x1C1:
001033 91a0 0d67 	LDS  R26,_i
001035 31a0      	CPI  R26,LOW(0x10)
001036 f538      	BRSH _0x1C2
                 ;    {
                 ;        Buzzer(Melodi[i],Tempo[i]*13);
001037 91e0 0d67 	LDS  R30,_i
001039 e8ac      	LDI  R26,LOW(_Melodi*2)
00103a e0b0      	LDI  R27,HIGH(_Melodi*2)
00103b e080      	LDI  R24,BYTE3(_Melodi*2)
00103c 27ff      	CLR  R31
00103d 2766      	CLR  R22
00103e 2777      	CLR  R23
00103f 940e 2131 	CALL __LSLD1
001041 940e 211b 	CALL __ADDD12
001043 940e 21e9 	CALL __GETW1PF
001045 93fa      	ST   -Y,R31
001046 93ea      	ST   -Y,R30
001047 91e0 0d67 	LDS  R30,_i
001049 27ff      	CLR  R31
00104a 2766      	CLR  R22
00104b 2777      	CLR  R23
00104c 5de8      	SUBI R30,LOW(-_Tempo*2)
00104d 4ffe      	SBCI R31,HIGH(-_Tempo*2)
00104e 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
00104f bf6b     +OUT RAMPZ , R22
001050 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
001051 e0ad      	LDI  R26,LOW(13)
001052 9fea      	MUL  R30,R26
001053 01f0      	MOVW R30,R0
001054 e0f0      	LDI  R31,0
001055 01df      	MOVW R26,R30
001056 940e 060c 	CALL _Buzzer
                 ;    }
001058 91e0 0d67 	LDS  R30,_i
00105a 5fef      	SUBI R30,-LOW(1)
00105b 93e0 0d67 	STS  _i,R30
00105d cfd5      	RJMP _0x1C1
                 _0x1C2:
                 ;    //========================//
                 ;
                 ;    LCD_Hapus();
00105e 940e 047c 	CALL _LCD_Hapus
                 ;    LCD_GotoXY(0,0);
001060 e0e0      	LDI  R30,LOW(0)
001061 93ea      	ST   -Y,R30
001062 e0a0      	LDI  R26,LOW(0)
001063 940e 0449 	CALL _LCD_GotoXY
                 ;    LCD_TulisTengah(0,"   -=WELCOME=-  ");
001065 e0e0      	LDI  R30,LOW(0)
001066 93ea      	ST   -Y,R30
                +
001067 eaaa     +LDI R26 , LOW ( 2 * _0x0 + ( 238 ) )
001068 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 238 ) )
001069 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 238 ) )
00106a e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 238 ) )
                 	__POINTD2FN _0x0,238
00106b 940e 04de 	CALL _LCD_TulisTengah
                 ;    delay_ms(1000);
00106d eea8      	LDI  R26,LOW(1000)
00106e e0b3      	LDI  R27,HIGH(1000)
00106f 940e 1f6f 	CALL _delay_ms
                 ;    LCD_TulisTengah(0,"                ");
001071 e0e0      	LDI  R30,LOW(0)
001072 93ea      	ST   -Y,R30
                +
001073 ebab     +LDI R26 , LOW ( 2 * _0x0 + ( 255 ) )
001074 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 255 ) )
001075 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 255 ) )
001076 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 255 ) )
                 	__POINTD2FN _0x0,255
001077 940e 04de 	CALL _LCD_TulisTengah
                 ;    LCD_TulisTengah(0,"  -=ROBOVIPER=- ");
001079 e0e0      	LDI  R30,LOW(0)
00107a 93ea      	ST   -Y,R30
                +
00107b ecac     +LDI R26 , LOW ( 2 * _0x0 + ( 272 ) )
00107c e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 272 ) )
00107d e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 272 ) )
00107e e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 272 ) )
                 	__POINTD2FN _0x0,272
00107f 940e 04de 	CALL _LCD_TulisTengah
                 ;    delay_ms(500);
001081 efa4      	LDI  R26,LOW(500)
001082 e0b1      	LDI  R27,HIGH(500)
001083 940e 1f6f 	CALL _delay_ms
                 ;    LCD_TulisKiri(1,"  READY........ ");
001085 e0e1      	LDI  R30,LOW(1)
001086 93ea      	ST   -Y,R30
                +
001087 edad     +LDI R26 , LOW ( 2 * _0x0 + ( 289 ) )
001088 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 289 ) )
001089 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 289 ) )
00108a e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 289 ) )
                 	__POINTD2FN _0x0,289
00108b 940e 049a 	CALL _LCD_TulisKiri
                 ;    delay_ms(1000);
00108d eea8      	LDI  R26,LOW(1000)
00108e e0b3      	LDI  R27,HIGH(1000)
00108f 940e 1f6f 	CALL _delay_ms
                 ;}
001091 9508      	RET
                 ;
                 ;void Bebas()
                 ;{
                 _Bebas:
                 ;    LCD_Hapus();
001092 940e 047c 	CALL _LCD_Hapus
                 ;
                 ;    notasi_bebas[0]=getchar();
001094 940e 0645 	CALL _getchar
001096 93e0 0d2b 	STS  _notasi_bebas,R30
                 ;    notasi_bebas[1]=getchar();
001098 940e 0645 	CALL _getchar
                +
00109a 93e0 0d2c+STS _notasi_bebas + ( 1 ) , R30
                 	__PUTB1MN _notasi_bebas,1
                 ;    notasi_bebas[2]=getchar();
00109c 940e 0645 	CALL _getchar
                +
00109e 93e0 0d2d+STS _notasi_bebas + ( 2 ) , R30
                 	__PUTB1MN _notasi_bebas,2
                 ;    notasi_bebas[3]=getchar();
0010a0 940e 0645 	CALL _getchar
                +
0010a2 93e0 0d2e+STS _notasi_bebas + ( 3 ) , R30
                 	__PUTB1MN _notasi_bebas,3
                 ;
                 ;    /////--Maju--/////
                 ;    if(notasi_bebas[0]==0x00)
0010a4 91e0 0d2b 	LDS  R30,_notasi_bebas
0010a6 30e0      	CPI  R30,0
0010a7 f011      	BREQ PC+3
0010a8 940c 11b6 	JMP _0x1C3
                 ;    {
                 ;        if(notasi_bebas[1]==0x00) //Waktu
                +
0010aa 91e0 0d2c+LDS R30 , _notasi_bebas + ( 1 )
                 	__GETB1MN _notasi_bebas,1
0010ac 30e0      	CPI  R30,0
0010ad f011      	BREQ PC+3
0010ae 940c 110a 	JMP _0x1C4
                 ;        {
                 ;            notasi_bebas[4]=getchar();
0010b0 940e 0645 	CALL _getchar
                +
0010b2 93e0 0d2f+STS _notasi_bebas + ( 4 ) , R30
                 	__PUTB1MN _notasi_bebas,4
                 ;
                 ;            LCD_TulisF(0,"MAJU-WAKTU");
0010b4 e0e0      	LDI  R30,LOW(0)
0010b5 93ea      	ST   -Y,R30
                +
0010b6 eeae     +LDI R26 , LOW ( 2 * _0x0 + ( 306 ) )
0010b7 e0b2     +LDI R27 , HIGH ( 2 * _0x0 + ( 306 ) )
0010b8 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 306 ) )
0010b9 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 306 ) )
                 	__POINTD2FN _0x0,306
0010ba 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
0010bc e5e7      	LDI  R30,LOW(_xstring)
0010bd e0fd      	LDI  R31,HIGH(_xstring)
0010be 93fa      	ST   -Y,R31
0010bf 93ea      	ST   -Y,R30
                +
0010c0 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
0010c1 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
0010c2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
0010c3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
0010c4 940e 2201 	CALL __PUTPARD1
                +
0010c6 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
0010c8 27ff      	CLR  R31
0010c9 2766      	CLR  R22
0010ca 2777      	CLR  R23
0010cb 940e 2201 	CALL __PUTPARD1
                +
0010cd 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
0010cf 27ff      	CLR  R31
0010d0 2766      	CLR  R22
0010d1 2777      	CLR  R23
0010d2 940e 2201 	CALL __PUTPARD1
                +
0010d4 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
0010d6 27ff      	CLR  R31
0010d7 2766      	CLR  R22
0010d8 2777      	CLR  R23
0010d9 940e 2201 	CALL __PUTPARD1
0010db e08c      	LDI  R24,12
0010dc 940e 1f17 	CALL _sprintf
0010de 9662      	ADIW R28,18
                 ;            //LCD_Text(1,xstring);
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
0010df e0e0      	LDI  R30,LOW(0)
0010e0 93ea      	ST   -Y,R30
0010e1 e0a1      	LDI  R26,LOW(1)
0010e2 940e 0449 	CALL _LCD_GotoXY
                +
0010e4 91a0 0d2e+LDS R26 , _notasi_bebas + ( 3 )
                 	__GETB2MN _notasi_bebas,3
0010e6 e0b0      	LDI  R27,0
0010e7 940e 055f 	CALL _LCD_Angka3
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
0010e9 e0e8      	LDI  R30,LOW(8)
0010ea 93ea      	ST   -Y,R30
0010eb e0a1      	LDI  R26,LOW(1)
0010ec 940e 0449 	CALL _LCD_GotoXY
                +
0010ee 91a0 0d2f+LDS R26 , _notasi_bebas + ( 4 )
                 	__GETB2MN _notasi_bebas,4
0010f0 e0b0      	LDI  R27,0
0010f1 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            //SetDataMotorPWM(notasi_bebas[3],notasi_bebas[4]);
                 ;            SetDataMotorPID(notasi_bebas[3],notasi_bebas[4]);
                +
0010f3 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
0010f5 93ea      	ST   -Y,R30
                +
0010f6 91a0 0d2f+LDS R26 , _notasi_bebas + ( 4 )
                 	__GETB2MN _notasi_bebas,4
0010f8 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            delay_ms(notasi_bebas[2]*1000);
                +
0010fa 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
0010fc e0b0      	LDI  R27,0
0010fd eee8      	LDI  R30,LOW(1000)
0010fe e0f3      	LDI  R31,HIGH(1000)
0010ff 940e 2151 	CALL __MULW12U
001101 01df      	MOVW R26,R30
001102 940e 1f6f 	CALL _delay_ms
                 ;
                 ;            //SetDataMotorPWM(0,0); //Menghentikan Motor
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
001104 e0e0      	LDI  R30,LOW(0)
001105 93ea      	ST   -Y,R30
001106 e0a0      	LDI  R26,LOW(0)
001107 940e 0326 	CALL _SetDataMotorPID
                 ;        }
                 ;        else if(notasi_bebas[1]==0x01) //Jarak
001109 c0ab      	RJMP _0x1C5
                 _0x1C4:
                +
00110a 91a0 0d2c+LDS R26 , _notasi_bebas + ( 1 )
                 	__GETB2MN _notasi_bebas,1
00110c 30a1      	CPI  R26,LOW(0x1)
00110d f011      	BREQ PC+3
00110e 940c 11b5 	JMP _0x1C6
                 ;        {
                 ;            int16_t Enkoder_t=0;
                 ;            Enkoder1=0;Enkoder2=0;
001110 9722      	SBIW R28,2
001111 e0e0      	LDI  R30,LOW(0)
001112 83e8      	ST   Y,R30
001113 83e9      	STD  Y+1,R30
                 ;	Enkoder_t -> Y+0
001114 24aa      	CLR  R10
001115 24bb      	CLR  R11
001116 24cc      	CLR  R12
001117 24dd      	CLR  R13
                 ;
                 ;            LCD_TulisF(0,"MAJU-JARAK");
001118 93ea      	ST   -Y,R30
                +
001119 e0a2     +LDI R26 , LOW ( 2 * _0x0 + ( 326 ) )
00111a e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 326 ) )
00111b e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 326 ) )
00111c e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 326 ) )
                 	__POINTD2FN _0x0,326
00111d 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
00111f e5e7      	LDI  R30,LOW(_xstring)
001120 e0fd      	LDI  R31,HIGH(_xstring)
001121 93fa      	ST   -Y,R31
001122 93ea      	ST   -Y,R30
                +
001123 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
001124 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
001125 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
001126 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
001127 940e 2201 	CALL __PUTPARD1
                +
001129 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
00112b 27ff      	CLR  R31
00112c 2766      	CLR  R22
00112d 2777      	CLR  R23
00112e 940e 2201 	CALL __PUTPARD1
                +
001130 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001132 27ff      	CLR  R31
001133 2766      	CLR  R22
001134 2777      	CLR  R23
001135 940e 2201 	CALL __PUTPARD1
                +
001137 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
001139 27ff      	CLR  R31
00113a 2766      	CLR  R22
00113b 2777      	CLR  R23
00113c 940e 2201 	CALL __PUTPARD1
00113e e08c      	LDI  R24,12
00113f 940e 1f17 	CALL _sprintf
001141 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            LCD_GotoXY(13,0);    LCD_Angka3(notasi_bebas[2]);
001142 e0ed      	LDI  R30,LOW(13)
001143 93ea      	ST   -Y,R30
001144 e0a0      	LDI  R26,LOW(0)
001145 940e 0449 	CALL _LCD_GotoXY
                +
001147 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
001149 e0b0      	LDI  R27,0
00114a 940e 055f 	CALL _LCD_Angka3
                 ;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]*Pulse_PerCM);
00114c e0ed      	LDI  R30,LOW(13)
00114d 93ea      	ST   -Y,R30
00114e e0a1      	LDI  R26,LOW(1)
00114f 940e 0449 	CALL _LCD_GotoXY
                +
001151 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
001153 e0b0      	LDI  R27,0
001154 e1eb      	LDI  R30,LOW(283)
001155 e0f1      	LDI  R31,HIGH(283)
001156 940e 2151 	CALL __MULW12U
001158 2766      	CLR  R22
001159 2777      	CLR  R23
00115a 940e 1fdf 	CALL __CDF1
00115c 01df      	MOVW R26,R30
00115d 01cb      	MOVW R24,R22
                +
00115e e7ec     +LDI R30 , LOW ( 0x41A0D97C )
00115f edf9     +LDI R31 , HIGH ( 0x41A0D97C )
001160 ea60     +LDI R22 , BYTE3 ( 0x41A0D97C )
001161 e471     +LDI R23 , BYTE4 ( 0x41A0D97C )
                 	__GETD1N 0x41A0D97C
001162 940e 20b2 	CALL __DIVF21
001164 940e 1fa8 	CALL __CFD1
001166 01df      	MOVW R26,R30
001167 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            //SetDataMotorPWM(notasi_bebas[3],notasi_bebas[3]);
                 ;            SetDataMotorPID(notasi_bebas[3],notasi_bebas[3]);
                +
001169 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
00116b 93ea      	ST   -Y,R30
                +
00116c 91a0 0d2e+LDS R26 , _notasi_bebas + ( 3 )
                 	__GETB2MN _notasi_bebas,3
00116e 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            while(Enkoder_t <= notasi_bebas[2]*Pulse_PerCM)
                 _0x1C7:
                +
001170 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
001172 e0b0      	LDI  R27,0
001173 e1eb      	LDI  R30,LOW(283)
001174 e0f1      	LDI  R31,HIGH(283)
001175 940e 2151 	CALL __MULW12U
001177 2766      	CLR  R22
001178 2777      	CLR  R23
001179 940e 1fdf 	CALL __CDF1
00117b 01df      	MOVW R26,R30
00117c 01cb      	MOVW R24,R22
                +
00117d e7ec     +LDI R30 , LOW ( 0x41A0D97C )
00117e edf9     +LDI R31 , HIGH ( 0x41A0D97C )
00117f ea60     +LDI R22 , BYTE3 ( 0x41A0D97C )
001180 e471     +LDI R23 , BYTE4 ( 0x41A0D97C )
                 	__GETD1N 0x41A0D97C
001181 940e 20b2 	CALL __DIVF21
001183 81a8      	LD   R26,Y
001184 81b9      	LDD  R27,Y+1
001185 940e 2141 	CALL __CWD2
001187 940e 220d 	CALL __CDF2
001189 940e 20f7 	CALL __CMPF12
00118b f019      	BREQ PC+4
00118c f010      	BRCS PC+3
00118d 940c 11af 	JMP  _0x1C9
                 ;            {
                 ;                Enkoder_t = (Enkoder1+Enkoder2)/2;
00118f 01d6      	MOVW R26,R12
001190 0daa      	ADD  R26,R10
001191 1dbb      	ADC  R27,R11
001192 e0e2      	LDI  R30,LOW(2)
001193 e0f0      	LDI  R31,HIGH(2)
001194 940e 2177 	CALL __DIVW21
001196 83e8      	ST   Y,R30
001197 83f9      	STD  Y+1,R31
                 ;                LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
001198 e0e0      	LDI  R30,LOW(0)
001199 93ea      	ST   -Y,R30
00119a e0a1      	LDI  R26,LOW(1)
00119b 940e 0449 	CALL _LCD_GotoXY
00119d 01d5      	MOVW R26,R10
00119e 940e 0520 	CALL _LCD_Angka4
0011a0 e2a0      	LDI  R26,LOW(32)
0011a1 940e 040d 	CALL _LCD_Data
                 ;                LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
0011a3 e0e6      	LDI  R30,LOW(6)
0011a4 93ea      	ST   -Y,R30
0011a5 e0a1      	LDI  R26,LOW(1)
0011a6 940e 0449 	CALL _LCD_GotoXY
0011a8 01d6      	MOVW R26,R12
0011a9 940e 0520 	CALL _LCD_Angka4
0011ab e2a0      	LDI  R26,LOW(32)
0011ac 940e 040d 	CALL _LCD_Data
                 ;            }
0011ae cfc1      	RJMP _0x1C7
                 _0x1C9:
                 ;
                 ;            //SetDataMotorPWM(0,0); //Menghentikan Motor
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
0011af e0e0      	LDI  R30,LOW(0)
0011b0 93ea      	ST   -Y,R30
0011b1 e0a0      	LDI  R26,LOW(0)
0011b2 940e 0326 	CALL _SetDataMotorPID
                 ;        }
0011b4 9622      	ADIW R28,2
                 ;    }
                 _0x1C6:
                 _0x1C5:
                 ;
                 ;    /////--Mundur--/////
                 ;    else if(notasi_bebas[0]==0x01)
0011b5 c3fc      	RJMP _0x1CA
                 _0x1C3:
0011b6 91a0 0d2b 	LDS  R26,_notasi_bebas
0011b8 30a1      	CPI  R26,LOW(0x1)
0011b9 f011      	BREQ PC+3
0011ba 940c 12e8 	JMP _0x1CB
                 ;    {
                 ;        int16_t tempki,tempka;
                 ;        if(notasi_bebas[1]==0x00) //Waktu
0011bc 9724      	SBIW R28,4
                 ;	tempki -> Y+2
                 ;	tempka -> Y+0
                +
0011bd 91e0 0d2c+LDS R30 , _notasi_bebas + ( 1 )
                 	__GETB1MN _notasi_bebas,1
0011bf 30e0      	CPI  R30,0
0011c0 f011      	BREQ PC+3
0011c1 940c 122a 	JMP _0x1CC
                 ;        {
                 ;            notasi_bebas[4]=getchar();
0011c3 940e 0645 	CALL _getchar
                +
0011c5 93e0 0d2f+STS _notasi_bebas + ( 4 ) , R30
                 	__PUTB1MN _notasi_bebas,4
                 ;
                 ;            LCD_TulisF(0,"MUNDUR-WAKTU");
0011c7 e0e0      	LDI  R30,LOW(0)
0011c8 93ea      	ST   -Y,R30
                +
0011c9 e0ad     +LDI R26 , LOW ( 2 * _0x0 + ( 337 ) )
0011ca e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 337 ) )
0011cb e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 337 ) )
0011cc e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 337 ) )
                 	__POINTD2FN _0x0,337
0011cd 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
0011cf e5e7      	LDI  R30,LOW(_xstring)
0011d0 e0fd      	LDI  R31,HIGH(_xstring)
0011d1 93fa      	ST   -Y,R31
0011d2 93ea      	ST   -Y,R30
                +
0011d3 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
0011d4 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
0011d5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
0011d6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
0011d7 940e 2201 	CALL __PUTPARD1
                +
0011d9 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
0011db 27ff      	CLR  R31
0011dc 2766      	CLR  R22
0011dd 2777      	CLR  R23
0011de 940e 2201 	CALL __PUTPARD1
                +
0011e0 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
0011e2 27ff      	CLR  R31
0011e3 2766      	CLR  R22
0011e4 2777      	CLR  R23
0011e5 940e 2201 	CALL __PUTPARD1
                +
0011e7 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
0011e9 27ff      	CLR  R31
0011ea 2766      	CLR  R22
0011eb 2777      	CLR  R23
0011ec 940e 2201 	CALL __PUTPARD1
0011ee e08c      	LDI  R24,12
0011ef 940e 1f17 	CALL _sprintf
0011f1 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
0011f2 e0e0      	LDI  R30,LOW(0)
0011f3 93ea      	ST   -Y,R30
0011f4 e0a1      	LDI  R26,LOW(1)
0011f5 940e 0449 	CALL _LCD_GotoXY
                +
0011f7 91a0 0d2e+LDS R26 , _notasi_bebas + ( 3 )
                 	__GETB2MN _notasi_bebas,3
0011f9 e0b0      	LDI  R27,0
0011fa 940e 055f 	CALL _LCD_Angka3
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
0011fc e0e8      	LDI  R30,LOW(8)
0011fd 93ea      	ST   -Y,R30
0011fe e0a1      	LDI  R26,LOW(1)
0011ff 940e 0449 	CALL _LCD_GotoXY
                +
001201 91a0 0d2f+LDS R26 , _notasi_bebas + ( 4 )
                 	__GETB2MN _notasi_bebas,4
001203 e0b0      	LDI  R27,0
001204 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            tempki=notasi_bebas[3];
                +
001206 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001208 e0f0      	LDI  R31,0
001209 83ea      	STD  Y+2,R30
00120a 83fb      	STD  Y+2+1,R31
                 ;            tempka=notasi_bebas[4];
                +
00120b 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
00120d e0f0      	LDI  R31,0
00120e 83e8      	ST   Y,R30
00120f 83f9      	STD  Y+1,R31
                 ;            //SetDataMotorPWM(tempki*-1,tempka*-1);
                 ;            SetDataMotorPID(tempki*-1,tempka*-1);
001210 81ea      	LDD  R30,Y+2
001211 efaf      	LDI  R26,LOW(255)
001212 02ea      	MULS R30,R26
001213 920a      	ST   -Y,R0
001214 81e9      	LDD  R30,Y+1
001215 02ea      	MULS R30,R26
001216 01f0      	MOVW R30,R0
001217 2fae      	MOV  R26,R30
001218 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            delay_ms(notasi_bebas[2]*1000);
                +
00121a 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
00121c e0b0      	LDI  R27,0
00121d eee8      	LDI  R30,LOW(1000)
00121e e0f3      	LDI  R31,HIGH(1000)
00121f 940e 2151 	CALL __MULW12U
001221 01df      	MOVW R26,R30
001222 940e 1f6f 	CALL _delay_ms
                 ;            //SetDataMotorPWM(0,0); //Menghentikan Motor
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
001224 e0e0      	LDI  R30,LOW(0)
001225 93ea      	ST   -Y,R30
001226 e0a0      	LDI  R26,LOW(0)
001227 940e 0326 	CALL _SetDataMotorPID
                 ;        }
                 ;        else if(notasi_bebas[1]==0x01) //Jarak
001229 c0bc      	RJMP _0x1CD
                 _0x1CC:
                +
00122a 91a0 0d2c+LDS R26 , _notasi_bebas + ( 1 )
                 	__GETB2MN _notasi_bebas,1
00122c 30a1      	CPI  R26,LOW(0x1)
00122d f011      	BREQ PC+3
00122e 940c 12e6 	JMP _0x1CE
                 ;        {
                 ;            int16_t Enkoder_t=0;
                 ;            Enkoder1=0;Enkoder2=0;
001230 9722      	SBIW R28,2
001231 e0e0      	LDI  R30,LOW(0)
001232 83e8      	ST   Y,R30
001233 83e9      	STD  Y+1,R30
                 ;	tempki -> Y+4
                 ;	tempka -> Y+2
                 ;	Enkoder_t -> Y+0
001234 24aa      	CLR  R10
001235 24bb      	CLR  R11
001236 24cc      	CLR  R12
001237 24dd      	CLR  R13
                 ;
                 ;            LCD_TulisF(0,"MUNDUR-JARAK");
001238 93ea      	ST   -Y,R30
                +
001239 e1aa     +LDI R26 , LOW ( 2 * _0x0 + ( 350 ) )
00123a e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 350 ) )
00123b e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 350 ) )
00123c e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 350 ) )
                 	__POINTD2FN _0x0,350
00123d 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
00123f e5e7      	LDI  R30,LOW(_xstring)
001240 e0fd      	LDI  R31,HIGH(_xstring)
001241 93fa      	ST   -Y,R31
001242 93ea      	ST   -Y,R30
                +
001243 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
001244 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
001245 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
001246 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
001247 940e 2201 	CALL __PUTPARD1
                +
001249 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
00124b 27ff      	CLR  R31
00124c 2766      	CLR  R22
00124d 2777      	CLR  R23
00124e 940e 2201 	CALL __PUTPARD1
                +
001250 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001252 27ff      	CLR  R31
001253 2766      	CLR  R22
001254 2777      	CLR  R23
001255 940e 2201 	CALL __PUTPARD1
                +
001257 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
001259 27ff      	CLR  R31
00125a 2766      	CLR  R22
00125b 2777      	CLR  R23
00125c 940e 2201 	CALL __PUTPARD1
00125e e08c      	LDI  R24,12
00125f 940e 1f17 	CALL _sprintf
001261 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            LCD_GotoXY(13,0);    LCD_Angka3(notasi_bebas[2]);
001262 e0ed      	LDI  R30,LOW(13)
001263 93ea      	ST   -Y,R30
001264 e0a0      	LDI  R26,LOW(0)
001265 940e 0449 	CALL _LCD_GotoXY
                +
001267 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
001269 e0b0      	LDI  R27,0
00126a 940e 055f 	CALL _LCD_Angka3
                 ;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]*Pulse_PerCM);
00126c e0ed      	LDI  R30,LOW(13)
00126d 93ea      	ST   -Y,R30
00126e e0a1      	LDI  R26,LOW(1)
00126f 940e 0449 	CALL _LCD_GotoXY
                +
001271 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
001273 e0b0      	LDI  R27,0
001274 e1eb      	LDI  R30,LOW(283)
001275 e0f1      	LDI  R31,HIGH(283)
001276 940e 2151 	CALL __MULW12U
001278 2766      	CLR  R22
001279 2777      	CLR  R23
00127a 940e 1fdf 	CALL __CDF1
00127c 01df      	MOVW R26,R30
00127d 01cb      	MOVW R24,R22
                +
00127e e7ec     +LDI R30 , LOW ( 0x41A0D97C )
00127f edf9     +LDI R31 , HIGH ( 0x41A0D97C )
001280 ea60     +LDI R22 , BYTE3 ( 0x41A0D97C )
001281 e471     +LDI R23 , BYTE4 ( 0x41A0D97C )
                 	__GETD1N 0x41A0D97C
001282 940e 20b2 	CALL __DIVF21
001284 940e 1fa8 	CALL __CFD1
001286 01df      	MOVW R26,R30
001287 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            tempki=notasi_bebas[3];
                +
001289 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
00128b e0f0      	LDI  R31,0
00128c 83ec      	STD  Y+4,R30
00128d 83fd      	STD  Y+4+1,R31
                 ;            tempka=notasi_bebas[3];
                +
00128e 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001290 e0f0      	LDI  R31,0
001291 83ea      	STD  Y+2,R30
001292 83fb      	STD  Y+2+1,R31
                 ;            //SetDataMotorPWM(tempki*-1,tempka*-1);
                 ;            SetDataMotorPID(tempki*-1,tempka*-1);
001293 81ec      	LDD  R30,Y+4
001294 efaf      	LDI  R26,LOW(255)
001295 02ea      	MULS R30,R26
001296 920a      	ST   -Y,R0
001297 81eb      	LDD  R30,Y+3
001298 02ea      	MULS R30,R26
001299 01f0      	MOVW R30,R0
00129a 2fae      	MOV  R26,R30
00129b 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            while(Enkoder_t <= notasi_bebas[2]*Pulse_PerCM)
                 _0x1CF:
                +
00129d 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
00129f e0b0      	LDI  R27,0
0012a0 e1eb      	LDI  R30,LOW(283)
0012a1 e0f1      	LDI  R31,HIGH(283)
0012a2 940e 2151 	CALL __MULW12U
0012a4 2766      	CLR  R22
0012a5 2777      	CLR  R23
0012a6 940e 1fdf 	CALL __CDF1
0012a8 01df      	MOVW R26,R30
0012a9 01cb      	MOVW R24,R22
                +
0012aa e7ec     +LDI R30 , LOW ( 0x41A0D97C )
0012ab edf9     +LDI R31 , HIGH ( 0x41A0D97C )
0012ac ea60     +LDI R22 , BYTE3 ( 0x41A0D97C )
0012ad e471     +LDI R23 , BYTE4 ( 0x41A0D97C )
                 	__GETD1N 0x41A0D97C
0012ae 940e 20b2 	CALL __DIVF21
0012b0 81a8      	LD   R26,Y
0012b1 81b9      	LDD  R27,Y+1
0012b2 940e 2141 	CALL __CWD2
0012b4 940e 220d 	CALL __CDF2
0012b6 940e 20f7 	CALL __CMPF12
0012b8 f019      	BREQ PC+4
0012b9 f010      	BRCS PC+3
0012ba 940c 12e0 	JMP  _0x1D1
                 ;            {
                 ;                Enkoder_t = ((Enkoder1+Enkoder2)/2)*-1;
0012bc 01d6      	MOVW R26,R12
0012bd 0daa      	ADD  R26,R10
0012be 1dbb      	ADC  R27,R11
0012bf e0e2      	LDI  R30,LOW(2)
0012c0 e0f0      	LDI  R31,HIGH(2)
0012c1 940e 2177 	CALL __DIVW21
0012c3 efaf      	LDI  R26,LOW(65535)
0012c4 efbf      	LDI  R27,HIGH(65535)
0012c5 940e 215f 	CALL __MULW12
0012c7 83e8      	ST   Y,R30
0012c8 83f9      	STD  Y+1,R31
                 ;                LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
0012c9 e0e0      	LDI  R30,LOW(0)
0012ca 93ea      	ST   -Y,R30
0012cb e0a1      	LDI  R26,LOW(1)
0012cc 940e 0449 	CALL _LCD_GotoXY
0012ce 01d5      	MOVW R26,R10
0012cf 940e 0520 	CALL _LCD_Angka4
0012d1 e2a0      	LDI  R26,LOW(32)
0012d2 940e 040d 	CALL _LCD_Data
                 ;                LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
0012d4 e0e6      	LDI  R30,LOW(6)
0012d5 93ea      	ST   -Y,R30
0012d6 e0a1      	LDI  R26,LOW(1)
0012d7 940e 0449 	CALL _LCD_GotoXY
0012d9 01d6      	MOVW R26,R12
0012da 940e 0520 	CALL _LCD_Angka4
0012dc e2a0      	LDI  R26,LOW(32)
0012dd 940e 040d 	CALL _LCD_Data
                 ;            }
0012df cfbd      	RJMP _0x1CF
                 _0x1D1:
                 ;
                 ;            //SetDataMotorPWM(0,0); //Menghentikan Motor
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
0012e0 e0e0      	LDI  R30,LOW(0)
0012e1 93ea      	ST   -Y,R30
0012e2 e0a0      	LDI  R26,LOW(0)
0012e3 940e 0326 	CALL _SetDataMotorPID
                 ;        }
0012e5 9622      	ADIW R28,2
                 ;    }
                 _0x1CE:
                 _0x1CD:
0012e6 9624      	ADIW R28,4
                 ;
                 ;    /////--Kanan--/////
                 ;    else if(notasi_bebas[0]==0x02)
0012e7 c2ca      	RJMP _0x1D2
                 _0x1CB:
0012e8 91a0 0d2b 	LDS  R26,_notasi_bebas
0012ea 30a2      	CPI  R26,LOW(0x2)
0012eb f011      	BREQ PC+3
0012ec 940c 144c 	JMP _0x1D3
                 ;    {
                 ;        int16_t tempka;
                 ;        if(notasi_bebas[1]==0x00) //Waktu
0012ee 9722      	SBIW R28,2
                 ;	tempka -> Y+0
                +
0012ef 91e0 0d2c+LDS R30 , _notasi_bebas + ( 1 )
                 	__GETB1MN _notasi_bebas,1
0012f1 30e0      	CPI  R30,0
0012f2 f011      	BREQ PC+3
0012f3 940c 1357 	JMP _0x1D4
                 ;        {
                 ;            notasi_bebas[4]=getchar();
0012f5 940e 0645 	CALL _getchar
                +
0012f7 93e0 0d2f+STS _notasi_bebas + ( 4 ) , R30
                 	__PUTB1MN _notasi_bebas,4
                 ;
                 ;            LCD_TulisF(0,"KANAN-WAKTU");
0012f9 e0e0      	LDI  R30,LOW(0)
0012fa 93ea      	ST   -Y,R30
                +
0012fb e2a7     +LDI R26 , LOW ( 2 * _0x0 + ( 363 ) )
0012fc e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 363 ) )
0012fd e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 363 ) )
0012fe e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 363 ) )
                 	__POINTD2FN _0x0,363
0012ff 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
001301 e5e7      	LDI  R30,LOW(_xstring)
001302 e0fd      	LDI  R31,HIGH(_xstring)
001303 93fa      	ST   -Y,R31
001304 93ea      	ST   -Y,R30
                +
001305 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
001306 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
001307 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
001308 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
001309 940e 2201 	CALL __PUTPARD1
                +
00130b 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
00130d 27ff      	CLR  R31
00130e 2766      	CLR  R22
00130f 2777      	CLR  R23
001310 940e 2201 	CALL __PUTPARD1
                +
001312 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001314 27ff      	CLR  R31
001315 2766      	CLR  R22
001316 2777      	CLR  R23
001317 940e 2201 	CALL __PUTPARD1
                +
001319 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
00131b 27ff      	CLR  R31
00131c 2766      	CLR  R22
00131d 2777      	CLR  R23
00131e 940e 2201 	CALL __PUTPARD1
001320 e08c      	LDI  R24,12
001321 940e 1f17 	CALL _sprintf
001323 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            tempka=notasi_bebas[4];
                +
001324 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
001326 e0f0      	LDI  R31,0
001327 83e8      	ST   Y,R30
001328 83f9      	STD  Y+1,R31
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
001329 e0e0      	LDI  R30,LOW(0)
00132a 93ea      	ST   -Y,R30
00132b e0a1      	LDI  R26,LOW(1)
00132c 940e 0449 	CALL _LCD_GotoXY
                +
00132e 91a0 0d2e+LDS R26 , _notasi_bebas + ( 3 )
                 	__GETB2MN _notasi_bebas,3
001330 e0b0      	LDI  R27,0
001331 940e 055f 	CALL _LCD_Angka3
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
001333 e0e8      	LDI  R30,LOW(8)
001334 93ea      	ST   -Y,R30
001335 e0a1      	LDI  R26,LOW(1)
001336 940e 0449 	CALL _LCD_GotoXY
                +
001338 91a0 0d2f+LDS R26 , _notasi_bebas + ( 4 )
                 	__GETB2MN _notasi_bebas,4
00133a e0b0      	LDI  R27,0
00133b 940e 055f 	CALL _LCD_Angka3
                 ;            //SetDataMotorPWM(notasi_bebas[3],(tempka*-1));
                 ;            SetDataMotorPID(notasi_bebas[3],(tempka*-1));
                +
00133d 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
00133f 93ea      	ST   -Y,R30
001340 81e9      	LDD  R30,Y+1
001341 efaf      	LDI  R26,LOW(255)
001342 02ea      	MULS R30,R26
001343 01f0      	MOVW R30,R0
001344 2fae      	MOV  R26,R30
001345 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            delay_ms(notasi_bebas[2]*1000);
                +
001347 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
001349 e0b0      	LDI  R27,0
00134a eee8      	LDI  R30,LOW(1000)
00134b e0f3      	LDI  R31,HIGH(1000)
00134c 940e 2151 	CALL __MULW12U
00134e 01df      	MOVW R26,R30
00134f 940e 1f6f 	CALL _delay_ms
                 ;            //SetDataMotorPWM(0,0); //Menghentikan Motor
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
001351 e0e0      	LDI  R30,LOW(0)
001352 93ea      	ST   -Y,R30
001353 e0a0      	LDI  R26,LOW(0)
001354 940e 0326 	CALL _SetDataMotorPID
                 ;        }
                 ;        else if(notasi_bebas[1]==0x01) //Sudut
001356 c0f4      	RJMP _0x1D5
                 _0x1D4:
                +
001357 91a0 0d2c+LDS R26 , _notasi_bebas + ( 1 )
                 	__GETB2MN _notasi_bebas,1
001359 30a1      	CPI  R26,LOW(0x1)
00135a f011      	BREQ PC+3
00135b 940c 144b 	JMP _0x1D6
                 ;        {
                 ;            int16_t Enkoder_t=0;
                 ;            float wL,wR,heading=0,teta=0;
                 ;            Enkoder1=0;Enkoder2=0;
00135d 9762      	SBIW R28,18
00135e e182      	LDI  R24,18
00135f e0a0      	LDI  R26,LOW(0)
001360 e0b0      	LDI  R27,HIGH(0)
001361 e9e4      	LDI  R30,LOW(_0x1D7*2)
001362 e0f1      	LDI  R31,HIGH(_0x1D7*2)
001363 e060      	LDI  R22,BYTE3(_0x1D7*2)
001364 940e 2254 	CALL __INITLOCB
                 ;	tempka -> Y+18
                 ;	Enkoder_t -> Y+16
                 ;	wL -> Y+12
                 ;	wR -> Y+8
                 ;	heading -> Y+4
                 ;	teta -> Y+0
001366 24aa      	CLR  R10
001367 24bb      	CLR  R11
001368 24cc      	CLR  R12
001369 24dd      	CLR  R13
                 ;
                 ;            LCD_TulisF(0,"KANAN-DERAJAT");
00136a e0e0      	LDI  R30,LOW(0)
00136b 93ea      	ST   -Y,R30
                +
00136c e3a3     +LDI R26 , LOW ( 2 * _0x0 + ( 375 ) )
00136d e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 375 ) )
00136e e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 375 ) )
00136f e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 375 ) )
                 	__POINTD2FN _0x0,375
001370 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
001372 e5e7      	LDI  R30,LOW(_xstring)
001373 e0fd      	LDI  R31,HIGH(_xstring)
001374 93fa      	ST   -Y,R31
001375 93ea      	ST   -Y,R30
                +
001376 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
001377 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
001378 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
001379 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
00137a 940e 2201 	CALL __PUTPARD1
                +
00137c 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
00137e 27ff      	CLR  R31
00137f 2766      	CLR  R22
001380 2777      	CLR  R23
001381 940e 2201 	CALL __PUTPARD1
                +
001383 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001385 27ff      	CLR  R31
001386 2766      	CLR  R22
001387 2777      	CLR  R23
001388 940e 2201 	CALL __PUTPARD1
                +
00138a 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
00138c 27ff      	CLR  R31
00138d 2766      	CLR  R22
00138e 2777      	CLR  R23
00138f 940e 2201 	CALL __PUTPARD1
001391 e08c      	LDI  R24,12
001392 940e 1f17 	CALL _sprintf
001394 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]);
001395 e0ed      	LDI  R30,LOW(13)
001396 93ea      	ST   -Y,R30
001397 e0a1      	LDI  R26,LOW(1)
001398 940e 0449 	CALL _LCD_GotoXY
                +
00139a 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
00139c e0b0      	LDI  R27,0
00139d 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            tempka=notasi_bebas[3];
                +
00139f 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
0013a1 e0f0      	LDI  R31,0
0013a2 8bea      	STD  Y+18,R30
0013a3 8bfb      	STD  Y+18+1,R31
                 ;
                 ;            SetDataMotorPID(0,0); //Stop Sejenak untuk Akurasi Perhitungan
0013a4 e0e0      	LDI  R30,LOW(0)
0013a5 93ea      	ST   -Y,R30
0013a6 e0a0      	LDI  R26,LOW(0)
0013a7 940e 0326 	CALL _SetDataMotorPID
                 ;            delay_ms(500);
0013a9 efa4      	LDI  R26,LOW(500)
0013aa e0b1      	LDI  R27,HIGH(500)
0013ab 940e 1f6f 	CALL _delay_ms
                 ;
                 ;            //SetDataMotorPWM(notasi_bebas[3],(tempka*-1));
                 ;            SetDataMotorPID(notasi_bebas[3],(tempka*-1));
                +
0013ad 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
0013af 93ea      	ST   -Y,R30
0013b0 89eb      	LDD  R30,Y+19
0013b1 efaf      	LDI  R26,LOW(255)
0013b2 02ea      	MULS R30,R26
0013b3 01f0      	MOVW R30,R0
0013b4 2fae      	MOV  R26,R30
0013b5 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            while(heading <= notasi_bebas[2])
                 _0x1D8:
                +
0013b7 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
                +
0013b9 81ac     +LDD R26 , Y + 4
0013ba 81bd     +LDD R27 , Y + 4 + 1
0013bb 818e     +LDD R24 , Y + 4 + 2
0013bc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0013bd 27ff      	CLR  R31
0013be 2766      	CLR  R22
0013bf 2777      	CLR  R23
0013c0 940e 1fdf 	CALL __CDF1
0013c2 940e 20f7 	CALL __CMPF12
0013c4 f019      	BREQ PC+4
0013c5 f010      	BRCS PC+3
0013c6 940c 1445 	JMP  _0x1DA
                 ;            {
                 ;                Enkoder_t = ((Enkoder1+(Enkoder2*-1))/2);
0013c8 01f6      	MOVW R30,R12
0013c9 efaf      	LDI  R26,LOW(65535)
0013ca efbf      	LDI  R27,HIGH(65535)
0013cb 940e 215f 	CALL __MULW12
0013cd 0dea      	ADD  R30,R10
0013ce 1dfb      	ADC  R31,R11
0013cf 01df      	MOVW R26,R30
0013d0 e0e2      	LDI  R30,LOW(2)
0013d1 e0f0      	LDI  R31,HIGH(2)
0013d2 940e 2177 	CALL __DIVW21
0013d4 8be8      	STD  Y+16,R30
0013d5 8bf9      	STD  Y+16+1,R31
                 ;                //LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);      LCD_Data(' ');
                 ;                //LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2*-1);   LCD_Data(' ');
                 ;
                 ;                wL=Enkoder1*CM_PerPulse;
0013d6 01f5      	MOVW R30,R10
0013d7 940e 213c 	CALL __CWD1
0013d9 940e 1fdf 	CALL __CDF1
                +
0013db e7ac     +LDI R26 , LOW ( 0x41A0D97C )
0013dc edb9     +LDI R27 , HIGH ( 0x41A0D97C )
0013dd ea80     +LDI R24 , BYTE3 ( 0x41A0D97C )
0013de e491     +LDI R25 , BYTE4 ( 0x41A0D97C )
                 	__GETD2N 0x41A0D97C
0013df 940e 2064 	CALL __MULF12
0013e1 01df      	MOVW R26,R30
0013e2 01cb      	MOVW R24,R22
                +
0013e3 e0e0     +LDI R30 , LOW ( 0x438D8000 )
0013e4 e8f0     +LDI R31 , HIGH ( 0x438D8000 )
0013e5 e86d     +LDI R22 , BYTE3 ( 0x438D8000 )
0013e6 e473     +LDI R23 , BYTE4 ( 0x438D8000 )
                 	__GETD1N 0x438D8000
0013e7 940e 20b2 	CALL __DIVF21
                +
0013e9 87ec     +STD Y + 12 , R30
0013ea 87fd     +STD Y + 12 + 1 , R31
0013eb 876e     +STD Y + 12 + 2 , R22
0013ec 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ;                wR=Enkoder2*CM_PerPulse;
0013ed 01f6      	MOVW R30,R12
0013ee 940e 213c 	CALL __CWD1
0013f0 940e 1fdf 	CALL __CDF1
                +
0013f2 e7ac     +LDI R26 , LOW ( 0x41A0D97C )
0013f3 edb9     +LDI R27 , HIGH ( 0x41A0D97C )
0013f4 ea80     +LDI R24 , BYTE3 ( 0x41A0D97C )
0013f5 e491     +LDI R25 , BYTE4 ( 0x41A0D97C )
                 	__GETD2N 0x41A0D97C
0013f6 940e 2064 	CALL __MULF12
0013f8 01df      	MOVW R26,R30
0013f9 01cb      	MOVW R24,R22
                +
0013fa e0e0     +LDI R30 , LOW ( 0x438D8000 )
0013fb e8f0     +LDI R31 , HIGH ( 0x438D8000 )
0013fc e86d     +LDI R22 , BYTE3 ( 0x438D8000 )
0013fd e473     +LDI R23 , BYTE4 ( 0x438D8000 )
                 	__GETD1N 0x438D8000
0013fe 940e 20b2 	CALL __DIVF21
                +
001400 87e8     +STD Y + 8 , R30
001401 87f9     +STD Y + 8 + 1 , R31
001402 876a     +STD Y + 8 + 2 , R22
001403 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ;
                 ;                teta=(wL-wR)/Jarak_Roda;
                +
001404 85a8     +LDD R26 , Y + 8
001405 85b9     +LDD R27 , Y + 8 + 1
001406 858a     +LDD R24 , Y + 8 + 2
001407 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
001408 85ec     +LDD R30 , Y + 12
001409 85fd     +LDD R31 , Y + 12 + 1
00140a 856e     +LDD R22 , Y + 12 + 2
00140b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00140c 940e 2012 	CALL __SUBF12
00140e 01df      	MOVW R26,R30
00140f 01cb      	MOVW R24,R22
                +
001410 e0e0     +LDI R30 , LOW ( 0x41780000 )
001411 e0f0     +LDI R31 , HIGH ( 0x41780000 )
001412 e768     +LDI R22 , BYTE3 ( 0x41780000 )
001413 e471     +LDI R23 , BYTE4 ( 0x41780000 )
                 	__GETD1N 0x41780000
001414 940e 20b2 	CALL __DIVF21
001416 940e 21fc 	CALL __PUTD1S0
                 ;                heading=teta*RAD2DEG;
001418 940e 21f7 	CALL __GETD2S0
                +
00141a eee1     +LDI R30 , LOW ( 0x42652EE1 )
00141b e2fe     +LDI R31 , HIGH ( 0x42652EE1 )
00141c e665     +LDI R22 , BYTE3 ( 0x42652EE1 )
00141d e472     +LDI R23 , BYTE4 ( 0x42652EE1 )
                 	__GETD1N 0x42652EE1
00141e 940e 2064 	CALL __MULF12
                +
001420 83ec     +STD Y + 4 , R30
001421 83fd     +STD Y + 4 + 1 , R31
001422 836e     +STD Y + 4 + 2 , R22
001423 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 ;
                 ;                LCD_GotoXY(0,1);    LCD_Angka4(teta);      LCD_Data(' ');
001424 e0e0      	LDI  R30,LOW(0)
001425 93ea      	ST   -Y,R30
001426 e0a1      	LDI  R26,LOW(1)
001427 940e 0449 	CALL _LCD_GotoXY
001429 940e 21f2 	CALL __GETD1S0
00142b 940e 1fa8 	CALL __CFD1
00142d 01df      	MOVW R26,R30
00142e 940e 0520 	CALL _LCD_Angka4
001430 e2a0      	LDI  R26,LOW(32)
001431 940e 040d 	CALL _LCD_Data
                 ;                LCD_GotoXY(6,1);    LCD_Angka4(heading);   LCD_Data(' ');
001433 e0e6      	LDI  R30,LOW(6)
001434 93ea      	ST   -Y,R30
001435 e0a1      	LDI  R26,LOW(1)
001436 940e 0449 	CALL _LCD_GotoXY
                +
001438 81ec     +LDD R30 , Y + 4
001439 81fd     +LDD R31 , Y + 4 + 1
00143a 816e     +LDD R22 , Y + 4 + 2
00143b 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00143c 940e 1fa8 	CALL __CFD1
00143e 01df      	MOVW R26,R30
00143f 940e 0520 	CALL _LCD_Angka4
001441 e2a0      	LDI  R26,LOW(32)
001442 940e 040d 	CALL _LCD_Data
                 ;            }
001444 cf72      	RJMP _0x1D8
                 _0x1DA:
                 ;
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
001445 e0e0      	LDI  R30,LOW(0)
001446 93ea      	ST   -Y,R30
001447 e0a0      	LDI  R26,LOW(0)
001448 940e 0326 	CALL _SetDataMotorPID
                 ;        }
00144a 9662      	ADIW R28,18
                 ;    }
                 _0x1D6:
                 _0x1D5:
00144b c165      	RJMP _0x284
                 ;
                 ;    /////--Kiri--/////
                 ;    else if(notasi_bebas[0]==0x03)
                 _0x1D3:
00144c 91a0 0d2b 	LDS  R26,_notasi_bebas
00144e 30a3      	CPI  R26,LOW(0x3)
00144f f011      	BREQ PC+3
001450 940c 15b2 	JMP _0x1DC
                 ;    {
                 ;        int16_t tempki;
                 ;        if(notasi_bebas[1]==0x00) //Waktu
001452 9722      	SBIW R28,2
                 ;	tempki -> Y+0
                +
001453 91e0 0d2c+LDS R30 , _notasi_bebas + ( 1 )
                 	__GETB1MN _notasi_bebas,1
001455 30e0      	CPI  R30,0
001456 f011      	BREQ PC+3
001457 940c 14b9 	JMP _0x1DD
                 ;        {
                 ;            notasi_bebas[4]=getchar();
001459 940e 0645 	CALL _getchar
                +
00145b 93e0 0d2f+STS _notasi_bebas + ( 4 ) , R30
                 	__PUTB1MN _notasi_bebas,4
                 ;
                 ;            LCD_TulisF(0,"KIRI-WAKTU");
00145d e0e0      	LDI  R30,LOW(0)
00145e 93ea      	ST   -Y,R30
                +
00145f e4a1     +LDI R26 , LOW ( 2 * _0x0 + ( 389 ) )
001460 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 389 ) )
001461 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 389 ) )
001462 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 389 ) )
                 	__POINTD2FN _0x0,389
001463 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
001465 e5e7      	LDI  R30,LOW(_xstring)
001466 e0fd      	LDI  R31,HIGH(_xstring)
001467 93fa      	ST   -Y,R31
001468 93ea      	ST   -Y,R30
                +
001469 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
00146a e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
00146b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
00146c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
00146d 940e 2201 	CALL __PUTPARD1
                +
00146f 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
001471 27ff      	CLR  R31
001472 2766      	CLR  R22
001473 2777      	CLR  R23
001474 940e 2201 	CALL __PUTPARD1
                +
001476 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
001478 27ff      	CLR  R31
001479 2766      	CLR  R22
00147a 2777      	CLR  R23
00147b 940e 2201 	CALL __PUTPARD1
                +
00147d 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
00147f 27ff      	CLR  R31
001480 2766      	CLR  R22
001481 2777      	CLR  R23
001482 940e 2201 	CALL __PUTPARD1
001484 e08c      	LDI  R24,12
001485 940e 1f17 	CALL _sprintf
001487 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            tempki=notasi_bebas[3];
                +
001488 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
00148a e0f0      	LDI  R31,0
00148b 83e8      	ST   Y,R30
00148c 83f9      	STD  Y+1,R31
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
00148d e0e0      	LDI  R30,LOW(0)
00148e 93ea      	ST   -Y,R30
00148f e0a1      	LDI  R26,LOW(1)
001490 940e 0449 	CALL _LCD_GotoXY
                +
001492 91a0 0d2e+LDS R26 , _notasi_bebas + ( 3 )
                 	__GETB2MN _notasi_bebas,3
001494 e0b0      	LDI  R27,0
001495 940e 055f 	CALL _LCD_Angka3
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
001497 e0e8      	LDI  R30,LOW(8)
001498 93ea      	ST   -Y,R30
001499 e0a1      	LDI  R26,LOW(1)
00149a 940e 0449 	CALL _LCD_GotoXY
                +
00149c 91a0 0d2f+LDS R26 , _notasi_bebas + ( 4 )
                 	__GETB2MN _notasi_bebas,4
00149e e0b0      	LDI  R27,0
00149f 940e 055f 	CALL _LCD_Angka3
                 ;            //SetDataMotorPWM((tempki*-1),notasi_bebas[4]);
                 ;            SetDataMotorPID((tempki*-1),notasi_bebas[4]);
0014a1 81e8      	LD   R30,Y
0014a2 efaf      	LDI  R26,LOW(255)
0014a3 02ea      	MULS R30,R26
0014a4 920a      	ST   -Y,R0
                +
0014a5 91a0 0d2f+LDS R26 , _notasi_bebas + ( 4 )
                 	__GETB2MN _notasi_bebas,4
0014a7 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            delay_ms(notasi_bebas[2]*1000);
                +
0014a9 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
0014ab e0b0      	LDI  R27,0
0014ac eee8      	LDI  R30,LOW(1000)
0014ad e0f3      	LDI  R31,HIGH(1000)
0014ae 940e 2151 	CALL __MULW12U
0014b0 01df      	MOVW R26,R30
0014b1 940e 1f6f 	CALL _delay_ms
                 ;            //SetDataMotorPWM(0,0); //Menghentikan Motor
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
0014b3 e0e0      	LDI  R30,LOW(0)
0014b4 93ea      	ST   -Y,R30
0014b5 e0a0      	LDI  R26,LOW(0)
0014b6 940e 0326 	CALL _SetDataMotorPID
                 ;        }
                 ;
                 ;        else if(notasi_bebas[1]==0x01) // Sudut
0014b8 c0f8      	RJMP _0x1DE
                 _0x1DD:
                +
0014b9 91a0 0d2c+LDS R26 , _notasi_bebas + ( 1 )
                 	__GETB2MN _notasi_bebas,1
0014bb 30a1      	CPI  R26,LOW(0x1)
0014bc f011      	BREQ PC+3
0014bd 940c 15b1 	JMP _0x1DF
                 ;        {
                 ;            int16_t Enkoder_t=0;
                 ;            float wL,wR,heading=0,teta=0;
                 ;            Enkoder1=0;Enkoder2=0;
0014bf 9762      	SBIW R28,18
0014c0 e182      	LDI  R24,18
0014c1 e0a0      	LDI  R26,LOW(0)
0014c2 e0b0      	LDI  R27,HIGH(0)
0014c3 eae6      	LDI  R30,LOW(_0x1E0*2)
0014c4 e0f1      	LDI  R31,HIGH(_0x1E0*2)
0014c5 e060      	LDI  R22,BYTE3(_0x1E0*2)
0014c6 940e 2254 	CALL __INITLOCB
                 ;	tempki -> Y+18
                 ;	Enkoder_t -> Y+16
                 ;	wL -> Y+12
                 ;	wR -> Y+8
                 ;	heading -> Y+4
                 ;	teta -> Y+0
0014c8 24aa      	CLR  R10
0014c9 24bb      	CLR  R11
0014ca 24cc      	CLR  R12
0014cb 24dd      	CLR  R13
                 ;
                 ;            LCD_TulisF(0,"KIRI-DERAJAT");
0014cc e0e0      	LDI  R30,LOW(0)
0014cd 93ea      	ST   -Y,R30
                +
0014ce e4ac     +LDI R26 , LOW ( 2 * _0x0 + ( 400 ) )
0014cf e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 400 ) )
0014d0 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 400 ) )
0014d1 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 400 ) )
                 	__POINTD2FN _0x0,400
0014d2 940e 0471 	CALL _LCD_TulisF
                 ;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
0014d4 e5e7      	LDI  R30,LOW(_xstring)
0014d5 e0fd      	LDI  R31,HIGH(_xstring)
0014d6 93fa      	ST   -Y,R31
0014d7 93ea      	ST   -Y,R30
                +
0014d8 efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 317 ) )
0014d9 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 317 ) )
0014da e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 317 ) )
0014db e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 317 ) )
                 	__POINTD1FN _0x0,317
0014dc 940e 2201 	CALL __PUTPARD1
                +
0014de 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
0014e0 27ff      	CLR  R31
0014e1 2766      	CLR  R22
0014e2 2777      	CLR  R23
0014e3 940e 2201 	CALL __PUTPARD1
                +
0014e5 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
0014e7 27ff      	CLR  R31
0014e8 2766      	CLR  R22
0014e9 2777      	CLR  R23
0014ea 940e 2201 	CALL __PUTPARD1
                +
0014ec 91e0 0d2f+LDS R30 , _notasi_bebas + ( 4 )
                 	__GETB1MN _notasi_bebas,4
0014ee 27ff      	CLR  R31
0014ef 2766      	CLR  R22
0014f0 2777      	CLR  R23
0014f1 940e 2201 	CALL __PUTPARD1
0014f3 e08c      	LDI  R24,12
0014f4 940e 1f17 	CALL _sprintf
0014f6 9662      	ADIW R28,18
                 ;            //LCD_TulisF(1,xstring);
                 ;
                 ;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]);
0014f7 e0ed      	LDI  R30,LOW(13)
0014f8 93ea      	ST   -Y,R30
0014f9 e0a1      	LDI  R26,LOW(1)
0014fa 940e 0449 	CALL _LCD_GotoXY
                +
0014fc 91a0 0d2d+LDS R26 , _notasi_bebas + ( 2 )
                 	__GETB2MN _notasi_bebas,2
0014fe e0b0      	LDI  R27,0
0014ff 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SetDataMotorPID(0,0); //Stop Sejenak untuk Akurasi Perhitungan
001501 e0e0      	LDI  R30,LOW(0)
001502 93ea      	ST   -Y,R30
001503 e0a0      	LDI  R26,LOW(0)
001504 940e 0326 	CALL _SetDataMotorPID
                 ;            delay_ms(500);
001506 efa4      	LDI  R26,LOW(500)
001507 e0b1      	LDI  R27,HIGH(500)
001508 940e 1f6f 	CALL _delay_ms
                 ;
                 ;            tempki=notasi_bebas[3];
                +
00150a 91e0 0d2e+LDS R30 , _notasi_bebas + ( 3 )
                 	__GETB1MN _notasi_bebas,3
00150c e0f0      	LDI  R31,0
00150d 8bea      	STD  Y+18,R30
00150e 8bfb      	STD  Y+18+1,R31
                 ;            //SetDataMotorPWM((tempki*-1),notasi_bebas[3]);
                 ;            SetDataMotorPID((tempki*-1),notasi_bebas[3]);
00150f 89ea      	LDD  R30,Y+18
001510 efaf      	LDI  R26,LOW(255)
001511 02ea      	MULS R30,R26
001512 920a      	ST   -Y,R0
                +
001513 91a0 0d2e+LDS R26 , _notasi_bebas + ( 3 )
                 	__GETB2MN _notasi_bebas,3
001515 940e 0326 	CALL _SetDataMotorPID
                 ;
                 ;            while(heading <= notasi_bebas[2])
                 _0x1E1:
                +
001517 91e0 0d2d+LDS R30 , _notasi_bebas + ( 2 )
                 	__GETB1MN _notasi_bebas,2
                +
001519 81ac     +LDD R26 , Y + 4
00151a 81bd     +LDD R27 , Y + 4 + 1
00151b 818e     +LDD R24 , Y + 4 + 2
00151c 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00151d 27ff      	CLR  R31
00151e 2766      	CLR  R22
00151f 2777      	CLR  R23
001520 940e 1fdf 	CALL __CDF1
001522 940e 20f7 	CALL __CMPF12
001524 f019      	BREQ PC+4
001525 f010      	BRCS PC+3
001526 940c 15ab 	JMP  _0x1E3
                 ;            {
                 ;                Enkoder_t = ((Enkoder1+(Enkoder2*-1))/2);
001528 01f6      	MOVW R30,R12
001529 efaf      	LDI  R26,LOW(65535)
00152a efbf      	LDI  R27,HIGH(65535)
00152b 940e 215f 	CALL __MULW12
00152d 0dea      	ADD  R30,R10
00152e 1dfb      	ADC  R31,R11
00152f 01df      	MOVW R26,R30
001530 e0e2      	LDI  R30,LOW(2)
001531 e0f0      	LDI  R31,HIGH(2)
001532 940e 2177 	CALL __DIVW21
001534 8be8      	STD  Y+16,R30
001535 8bf9      	STD  Y+16+1,R31
                 ;                //LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);      LCD_Data(' ');
                 ;                //LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2*-1);   LCD_Data(' ');
                 ;
                 ;                wL=Enkoder1*CM_PerPulse;
001536 01f5      	MOVW R30,R10
001537 940e 213c 	CALL __CWD1
001539 940e 1fdf 	CALL __CDF1
                +
00153b e7ac     +LDI R26 , LOW ( 0x41A0D97C )
00153c edb9     +LDI R27 , HIGH ( 0x41A0D97C )
00153d ea80     +LDI R24 , BYTE3 ( 0x41A0D97C )
00153e e491     +LDI R25 , BYTE4 ( 0x41A0D97C )
                 	__GETD2N 0x41A0D97C
00153f 940e 2064 	CALL __MULF12
001541 01df      	MOVW R26,R30
001542 01cb      	MOVW R24,R22
                +
001543 e0e0     +LDI R30 , LOW ( 0x438D8000 )
001544 e8f0     +LDI R31 , HIGH ( 0x438D8000 )
001545 e86d     +LDI R22 , BYTE3 ( 0x438D8000 )
001546 e473     +LDI R23 , BYTE4 ( 0x438D8000 )
                 	__GETD1N 0x438D8000
001547 940e 20b2 	CALL __DIVF21
                +
001549 87ec     +STD Y + 12 , R30
00154a 87fd     +STD Y + 12 + 1 , R31
00154b 876e     +STD Y + 12 + 2 , R22
00154c 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ;                wR=Enkoder2*CM_PerPulse;
00154d 01f6      	MOVW R30,R12
00154e 940e 213c 	CALL __CWD1
001550 940e 1fdf 	CALL __CDF1
                +
001552 e7ac     +LDI R26 , LOW ( 0x41A0D97C )
001553 edb9     +LDI R27 , HIGH ( 0x41A0D97C )
001554 ea80     +LDI R24 , BYTE3 ( 0x41A0D97C )
001555 e491     +LDI R25 , BYTE4 ( 0x41A0D97C )
                 	__GETD2N 0x41A0D97C
001556 940e 2064 	CALL __MULF12
001558 01df      	MOVW R26,R30
001559 01cb      	MOVW R24,R22
                +
00155a e0e0     +LDI R30 , LOW ( 0x438D8000 )
00155b e8f0     +LDI R31 , HIGH ( 0x438D8000 )
00155c e86d     +LDI R22 , BYTE3 ( 0x438D8000 )
00155d e473     +LDI R23 , BYTE4 ( 0x438D8000 )
                 	__GETD1N 0x438D8000
00155e 940e 20b2 	CALL __DIVF21
                +
001560 87e8     +STD Y + 8 , R30
001561 87f9     +STD Y + 8 + 1 , R31
001562 876a     +STD Y + 8 + 2 , R22
001563 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 ;
                 ;                teta=((wL-wR)/Jarak_Roda)*-1;
                +
001564 85a8     +LDD R26 , Y + 8
001565 85b9     +LDD R27 , Y + 8 + 1
001566 858a     +LDD R24 , Y + 8 + 2
001567 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
001568 85ec     +LDD R30 , Y + 12
001569 85fd     +LDD R31 , Y + 12 + 1
00156a 856e     +LDD R22 , Y + 12 + 2
00156b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00156c 940e 2012 	CALL __SUBF12
00156e 01df      	MOVW R26,R30
00156f 01cb      	MOVW R24,R22
                +
001570 e0e0     +LDI R30 , LOW ( 0x41780000 )
001571 e0f0     +LDI R31 , HIGH ( 0x41780000 )
001572 e768     +LDI R22 , BYTE3 ( 0x41780000 )
001573 e471     +LDI R23 , BYTE4 ( 0x41780000 )
                 	__GETD1N 0x41780000
001574 940e 20b2 	CALL __DIVF21
                +
001576 e0a0     +LDI R26 , LOW ( 0xBF800000 )
001577 e0b0     +LDI R27 , HIGH ( 0xBF800000 )
001578 e880     +LDI R24 , BYTE3 ( 0xBF800000 )
001579 eb9f     +LDI R25 , BYTE4 ( 0xBF800000 )
                 	__GETD2N 0xBF800000
00157a 940e 2064 	CALL __MULF12
00157c 940e 21fc 	CALL __PUTD1S0
                 ;                heading=teta*RAD2DEG;
00157e 940e 21f7 	CALL __GETD2S0
                +
001580 eee1     +LDI R30 , LOW ( 0x42652EE1 )
001581 e2fe     +LDI R31 , HIGH ( 0x42652EE1 )
001582 e665     +LDI R22 , BYTE3 ( 0x42652EE1 )
001583 e472     +LDI R23 , BYTE4 ( 0x42652EE1 )
                 	__GETD1N 0x42652EE1
001584 940e 2064 	CALL __MULF12
                +
001586 83ec     +STD Y + 4 , R30
001587 83fd     +STD Y + 4 + 1 , R31
001588 836e     +STD Y + 4 + 2 , R22
001589 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 ;
                 ;                LCD_GotoXY(0,1);    LCD_Angka4(teta);      LCD_Data(' ');
00158a e0e0      	LDI  R30,LOW(0)
00158b 93ea      	ST   -Y,R30
00158c e0a1      	LDI  R26,LOW(1)
00158d 940e 0449 	CALL _LCD_GotoXY
00158f 940e 21f2 	CALL __GETD1S0
001591 940e 1fa8 	CALL __CFD1
001593 01df      	MOVW R26,R30
001594 940e 0520 	CALL _LCD_Angka4
001596 e2a0      	LDI  R26,LOW(32)
001597 940e 040d 	CALL _LCD_Data
                 ;                LCD_GotoXY(6,1);    LCD_Angka4(heading);   LCD_Data(' ');
001599 e0e6      	LDI  R30,LOW(6)
00159a 93ea      	ST   -Y,R30
00159b e0a1      	LDI  R26,LOW(1)
00159c 940e 0449 	CALL _LCD_GotoXY
                +
00159e 81ec     +LDD R30 , Y + 4
00159f 81fd     +LDD R31 , Y + 4 + 1
0015a0 816e     +LDD R22 , Y + 4 + 2
0015a1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0015a2 940e 1fa8 	CALL __CFD1
0015a4 01df      	MOVW R26,R30
0015a5 940e 0520 	CALL _LCD_Angka4
0015a7 e2a0      	LDI  R26,LOW(32)
0015a8 940e 040d 	CALL _LCD_Data
                 ;            }
0015aa cf6c      	RJMP _0x1E1
                 _0x1E3:
                 ;
                 ;            SetDataMotorPID(0,0); //Menghentikan Motor
0015ab e0e0      	LDI  R30,LOW(0)
0015ac 93ea      	ST   -Y,R30
0015ad e0a0      	LDI  R26,LOW(0)
0015ae 940e 0326 	CALL _SetDataMotorPID
                 ;        }
0015b0 9662      	ADIW R28,18
                 ;    }
                 _0x1DF:
                 _0x1DE:
                 _0x284:
0015b1 9622      	ADIW R28,2
                 ;}
                 _0x1DC:
                 _0x1D2:
                 _0x1CA:
0015b2 9508      	RET
                 ;
                 ;void Dinding()
                 ;{
                 _Dinding:
                 ;    LCD_Hapus();
0015b3 940e 047c 	CALL _LCD_Hapus
                 ;
                 ;    notasi_dinding[0]=getchar(); //Acuan Kiri/Kanan
0015b5 940e 0645 	CALL _getchar
0015b7 93e0 0d30 	STS  _notasi_dinding,R30
                 ;    notasi_dinding[1]=getchar(); //Garis   //  Waktu
0015b9 940e 0645 	CALL _getchar
                +
0015bb 93e0 0d31+STS _notasi_dinding + ( 1 ) , R30
                 	__PUTB1MN _notasi_dinding,1
                 ;    notasi_dinding[2]=getchar(); //nGaris  //  Waktu Tempuh
0015bd 940e 0645 	CALL _getchar
                +
0015bf 93e0 0d32+STS _notasi_dinding + ( 2 ) , R30
                 	__PUTB1MN _notasi_dinding,2
                 ;    notasi_dinding[3]=getchar(); //   Jarak Dinding
0015c1 940e 0645 	CALL _getchar
                +
0015c3 93e0 0d33+STS _notasi_dinding + ( 3 ) , R30
                 	__PUTB1MN _notasi_dinding,3
                 ;    notasi_dinding[4]=getchar(); //     Kecepatan
0015c5 940e 0645 	CALL _getchar
                +
0015c7 93e0 0d34+STS _notasi_dinding + ( 4 ) , R30
                 	__PUTB1MN _notasi_dinding,4
                 ;
                 ;    /////--Kiri--/////
                 ;    if(notasi_dinding[0]==0x00)
0015c9 91e0 0d30 	LDS  R30,_notasi_dinding
0015cb 30e0      	CPI  R30,0
0015cc f011      	BREQ PC+3
0015cd 940c 162b 	JMP _0x1E4
                 ;    {
                 ;        int16_t SpeedWall = notasi_dinding[4]*4;
                 ;
                 ;        if(notasi_dinding[1]==0x00) //Garis
0015cf 9722      	SBIW R28,2
                 ;	SpeedWall -> Y+0
                +
0015d0 91e0 0d34+LDS R30 , _notasi_dinding + ( 4 )
                 	__GETB1MN _notasi_dinding,4
0015d2 0fee      	LSL  R30
0015d3 0fee      	LSL  R30
0015d4 e0f0      	LDI  R31,0
0015d5 83e8      	ST   Y,R30
0015d6 83f9      	STD  Y+1,R31
                +
0015d7 91e0 0d31+LDS R30 , _notasi_dinding + ( 1 )
                 	__GETB1MN _notasi_dinding,1
0015d9 30e0      	CPI  R30,0
0015da f569      	BRNE _0x1E5
                 ;        {
                 ;            LCD_Hapus();
0015db 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"GARIS-KIRI");
0015dd e0e0      	LDI  R30,LOW(0)
0015de 93ea      	ST   -Y,R30
                +
0015df e5a9     +LDI R26 , LOW ( 2 * _0x0 + ( 413 ) )
0015e0 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 413 ) )
0015e1 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 413 ) )
0015e2 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 413 ) )
                 	__POINTD2FN _0x0,413
0015e3 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            for(i=notasi_dinding[2];i>0;i--)
                +
0015e5 91e0 0d32+LDS R30 , _notasi_dinding + ( 2 )
                 	__GETB1MN _notasi_dinding,2
0015e7 93e0 0d67 	STS  _i,R30
                 _0x1E7:
0015e9 91a0 0d67 	LDS  R26,_i
0015eb 30a1      	CPI  R26,LOW(0x1)
0015ec f0d0      	BRLO _0x1E8
                 ;            {
                 ;                GarisDindingKi(SpeedWall,notasi_dinding[3],pBacaSensorR);
0015ed 81e8      	LD   R30,Y
0015ee 81f9      	LDD  R31,Y+1
0015ef 93fa      	ST   -Y,R31
0015f0 93ea      	ST   -Y,R30
                +
0015f1 91e0 0d33+LDS R30 , _notasi_dinding + ( 3 )
                 	__GETB1MN _notasi_dinding,3
0015f3 e0f0      	LDI  R31,0
0015f4 93fa      	ST   -Y,R31
0015f5 93ea      	ST   -Y,R30
0015f6 e4a0      	LDI  R26,LOW(64)
0015f7 940e 0e4e 	CALL _GarisDindingKi
                 ;                Buzzer(C6,20);
0015f9 e1e6      	LDI  R30,LOW(1046)
0015fa e0f4      	LDI  R31,HIGH(1046)
0015fb 93fa      	ST   -Y,R31
0015fc 93ea      	ST   -Y,R30
0015fd e1a4      	LDI  R26,LOW(20)
0015fe e0b0      	LDI  R27,0
0015ff 940e 060c 	CALL _Buzzer
                 ;            }
001601 91e0 0d67 	LDS  R30,_i
001603 50e1      	SUBI R30,LOW(1)
001604 93e0 0d67 	STS  _i,R30
001606 cfe2      	RJMP _0x1E7
                 _0x1E8:
                 ;        }
                 ;        else if(notasi_dinding[1]==0x01) //Waktu
001607 c022      	RJMP _0x1E9
                 _0x1E5:
                +
001608 91a0 0d31+LDS R26 , _notasi_dinding + ( 1 )
                 	__GETB2MN _notasi_dinding,1
00160a 30a1      	CPI  R26,LOW(0x1)
00160b f4f1      	BRNE _0x1EA
                 ;        {
                 ;            LCD_Hapus();
00160c 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"WAKTU-KIRI");
00160e e0e0      	LDI  R30,LOW(0)
00160f 93ea      	ST   -Y,R30
                +
001610 e6a4     +LDI R26 , LOW ( 2 * _0x0 + ( 424 ) )
001611 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 424 ) )
001612 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 424 ) )
001613 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 424 ) )
                 	__POINTD2FN _0x0,424
001614 940e 0471 	CALL _LCD_TulisF
                 ;            WaktuDindingKi(SpeedWall,notasi_dinding[3],notasi_dinding[2]);
001616 81e8      	LD   R30,Y
001617 81f9      	LDD  R31,Y+1
001618 93fa      	ST   -Y,R31
001619 93ea      	ST   -Y,R30
                +
00161a 91e0 0d33+LDS R30 , _notasi_dinding + ( 3 )
                 	__GETB1MN _notasi_dinding,3
00161c e0f0      	LDI  R31,0
00161d 93fa      	ST   -Y,R31
00161e 93ea      	ST   -Y,R30
                +
00161f 91a0 0d32+LDS R26 , _notasi_dinding + ( 2 )
                 	__GETB2MN _notasi_dinding,2
001621 d8e5      	RCALL _WaktuDindingKi
                 ;            Buzzer(C6,20);
001622 e1e6      	LDI  R30,LOW(1046)
001623 e0f4      	LDI  R31,HIGH(1046)
001624 93fa      	ST   -Y,R31
001625 93ea      	ST   -Y,R30
001626 e1a4      	LDI  R26,LOW(20)
001627 e0b0      	LDI  R27,0
001628 940e 060c 	CALL _Buzzer
                 ;        }
                 ;    }
                 _0x1EA:
                 _0x1E9:
00162a c061      	RJMP _0x285
                 ;
                 ;    /////--Kanan--/////
                 ;    else if(notasi_dinding[0]==0x01)
                 _0x1E4:
00162b 91a0 0d30 	LDS  R26,_notasi_dinding
00162d 30a1      	CPI  R26,LOW(0x1)
00162e f011      	BREQ PC+3
00162f 940c 168d 	JMP _0x1EC
                 ;    {
                 ;        int16_t SpeedWall = notasi_dinding[4]*4;
                 ;
                 ;        if(notasi_dinding[1]==0x00) //Garis
001631 9722      	SBIW R28,2
                 ;	SpeedWall -> Y+0
                +
001632 91e0 0d34+LDS R30 , _notasi_dinding + ( 4 )
                 	__GETB1MN _notasi_dinding,4
001634 0fee      	LSL  R30
001635 0fee      	LSL  R30
001636 e0f0      	LDI  R31,0
001637 83e8      	ST   Y,R30
001638 83f9      	STD  Y+1,R31
                +
001639 91e0 0d31+LDS R30 , _notasi_dinding + ( 1 )
                 	__GETB1MN _notasi_dinding,1
00163b 30e0      	CPI  R30,0
00163c f569      	BRNE _0x1ED
                 ;        {
                 ;            LCD_Hapus();
00163d 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"GARIS-KANAN");
00163f e0e0      	LDI  R30,LOW(0)
001640 93ea      	ST   -Y,R30
                +
001641 e6af     +LDI R26 , LOW ( 2 * _0x0 + ( 435 ) )
001642 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 435 ) )
001643 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 435 ) )
001644 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 435 ) )
                 	__POINTD2FN _0x0,435
001645 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            for(i=notasi_dinding[2];i>0;i--)
                +
001647 91e0 0d32+LDS R30 , _notasi_dinding + ( 2 )
                 	__GETB1MN _notasi_dinding,2
001649 93e0 0d67 	STS  _i,R30
                 _0x1EF:
00164b 91a0 0d67 	LDS  R26,_i
00164d 30a1      	CPI  R26,LOW(0x1)
00164e f0d0      	BRLO _0x1F0
                 ;            {
                 ;                GarisDindingKa(SpeedWall,notasi_dinding[3],pBacaSensorR);
00164f 81e8      	LD   R30,Y
001650 81f9      	LDD  R31,Y+1
001651 93fa      	ST   -Y,R31
001652 93ea      	ST   -Y,R30
                +
001653 91e0 0d33+LDS R30 , _notasi_dinding + ( 3 )
                 	__GETB1MN _notasi_dinding,3
001655 e0f0      	LDI  R31,0
001656 93fa      	ST   -Y,R31
001657 93ea      	ST   -Y,R30
001658 e4a0      	LDI  R26,LOW(64)
001659 940e 0ea9 	CALL _GarisDindingKa
                 ;                Buzzer(C6,20);
00165b e1e6      	LDI  R30,LOW(1046)
00165c e0f4      	LDI  R31,HIGH(1046)
00165d 93fa      	ST   -Y,R31
00165e 93ea      	ST   -Y,R30
00165f e1a4      	LDI  R26,LOW(20)
001660 e0b0      	LDI  R27,0
001661 940e 060c 	CALL _Buzzer
                 ;            }
001663 91e0 0d67 	LDS  R30,_i
001665 50e1      	SUBI R30,LOW(1)
001666 93e0 0d67 	STS  _i,R30
001668 cfe2      	RJMP _0x1EF
                 _0x1F0:
                 ;        }
                 ;        else if(notasi_dinding[1]==0x01) //Waktu
001669 c022      	RJMP _0x1F1
                 _0x1ED:
                +
00166a 91a0 0d31+LDS R26 , _notasi_dinding + ( 1 )
                 	__GETB2MN _notasi_dinding,1
00166c 30a1      	CPI  R26,LOW(0x1)
00166d f4f1      	BRNE _0x1F2
                 ;        {
                 ;            LCD_Hapus();
00166e 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"WAKTU-KANAN");
001670 e0e0      	LDI  R30,LOW(0)
001671 93ea      	ST   -Y,R30
                +
001672 e7ab     +LDI R26 , LOW ( 2 * _0x0 + ( 447 ) )
001673 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 447 ) )
001674 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 447 ) )
001675 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 447 ) )
                 	__POINTD2FN _0x0,447
001676 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            WaktuDindingKa(SpeedWall,notasi_dinding[3],notasi_dinding[2]);
001678 81e8      	LD   R30,Y
001679 81f9      	LDD  R31,Y+1
00167a 93fa      	ST   -Y,R31
00167b 93ea      	ST   -Y,R30
                +
00167c 91e0 0d33+LDS R30 , _notasi_dinding + ( 3 )
                 	__GETB1MN _notasi_dinding,3
00167e e0f0      	LDI  R31,0
00167f 93fa      	ST   -Y,R31
001680 93ea      	ST   -Y,R30
                +
001681 91a0 0d32+LDS R26 , _notasi_dinding + ( 2 )
                 	__GETB2MN _notasi_dinding,2
001683 d89d      	RCALL _WaktuDindingKa
                 ;            Buzzer(C6,20);
001684 e1e6      	LDI  R30,LOW(1046)
001685 e0f4      	LDI  R31,HIGH(1046)
001686 93fa      	ST   -Y,R31
001687 93ea      	ST   -Y,R30
001688 e1a4      	LDI  R26,LOW(20)
001689 e0b0      	LDI  R27,0
00168a 940e 060c 	CALL _Buzzer
                 ;        }
                 ;    }
                 _0x1F2:
                 _0x1F1:
                 _0x285:
00168c 9622      	ADIW R28,2
                 ;}
                 _0x1EC:
00168d 9508      	RET
                 ;
                 ;void Garis()
                 ;{
                 _Garis:
                 ;    LCD_Hapus();
00168e 940e 047c 	CALL _LCD_Hapus
                 ;
                 ;    notasi_garis[0]=getchar();
001690 940e 0645 	CALL _getchar
001692 93e0 0d4d 	STS  _notasi_garis,R30
                 ;    notasi_garis[1]=getchar();
001694 940e 0645 	CALL _getchar
                +
001696 93e0 0d4e+STS _notasi_garis + ( 1 ) , R30
                 	__PUTB1MN _notasi_garis,1
                 ;    notasi_garis[2]=getchar();
001698 940e 0645 	CALL _getchar
                +
00169a 93e0 0d4f+STS _notasi_garis + ( 2 ) , R30
                 	__PUTB1MN _notasi_garis,2
                 ;
                 ;    /////--Pertigaan Kanan--/////
                 ;    if(notasi_garis[0]==0x00)
00169c 91e0 0d4d 	LDS  R30,_notasi_garis
00169e 30e0      	CPI  R30,0
00169f f011      	BREQ PC+3
0016a0 940c 172c 	JMP _0x1F3
                 ;    {
                 ;        if(notasi_garis[1]==0x00) //KANAN
                +
0016a2 91e0 0d4e+LDS R30 , _notasi_garis + ( 1 )
                 	__GETB1MN _notasi_garis,1
0016a4 30e0      	CPI  R30,0
0016a5 f011      	BREQ PC+3
0016a6 940c 16f0 	JMP _0x1F4
                 ;        {
                 ;            int16_t SpeedGaris;
                 ;            LCD_Hapus();
0016a8 9722      	SBIW R28,2
                 ;	SpeedGaris -> Y+0
0016a9 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"3KANAN-KANAN");
0016ab e0e0      	LDI  R30,LOW(0)
0016ac 93ea      	ST   -Y,R30
                +
0016ad e8a7     +LDI R26 , LOW ( 2 * _0x0 + ( 459 ) )
0016ae e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 459 ) )
0016af e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 459 ) )
0016b0 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 459 ) )
                 	__POINTD2FN _0x0,459
0016b1 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
0016b3 e0e0      	LDI  R30,LOW(0)
0016b4 93ea      	ST   -Y,R30
0016b5 e0a1      	LDI  R26,LOW(1)
0016b6 940e 0449 	CALL _LCD_GotoXY
                +
0016b8 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
0016ba e0b0      	LDI  R27,0
0016bb 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
0016bd 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
0016bf 0fee      	LSL  R30
0016c0 0fee      	LSL  R30
0016c1 e0f0      	LDI  R31,0
0016c2 83e8      	ST   Y,R30
0016c3 83f9      	STD  Y+1,R31
                 ;
                 ;            Scan3Kanan(SpeedGaris,pBacaSensorR,pBacaSensorR);
0016c4 93fa      	ST   -Y,R31
0016c5 93ea      	ST   -Y,R30
0016c6 e4e0      	LDI  R30,LOW(64)
0016c7 93ea      	ST   -Y,R30
0016c8 e4a0      	LDI  R26,LOW(64)
0016c9 940e 0b01 	CALL _Scan3Kanan
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(1);
0016cb e0e8      	LDI  R30,LOW(8)
0016cc 93ea      	ST   -Y,R30
0016cd e0a1      	LDI  R26,LOW(1)
0016ce 940e 0449 	CALL _LCD_GotoXY
0016d0 e0a1      	LDI  R26,LOW(1)
0016d1 e0b0      	LDI  R27,0
0016d2 940e 055f 	CALL _LCD_Angka3
                 ;            Buzzer(C6,20);
0016d4 e1e6      	LDI  R30,LOW(1046)
0016d5 e0f4      	LDI  R31,HIGH(1046)
0016d6 93fa      	ST   -Y,R31
0016d7 93ea      	ST   -Y,R30
0016d8 e1a4      	LDI  R26,LOW(20)
0016d9 e0b0      	LDI  R27,0
0016da 940e 060c 	CALL _Buzzer
                 ;            //Scan3Kanan(notasi_garis[2],pBacaSensorR,pBacaSensorR);
                 ;            //LCD_GotoXY(8,1);    LCD_Angka3(2);
                 ;            //Buzzer(C6,20);
                 ;            BelKaPWM(SpeedGaris,-SpeedGaris,pBacaSensorR);
0016dc 81e8      	LD   R30,Y
0016dd 81f9      	LDD  R31,Y+1
0016de 93fa      	ST   -Y,R31
0016df 93ea      	ST   -Y,R30
0016e0 81ea      	LDD  R30,Y+2
0016e1 81fb      	LDD  R31,Y+2+1
0016e2 940e 2125 	CALL __ANEGW1
0016e4 93fa      	ST   -Y,R31
0016e5 93ea      	ST   -Y,R30
0016e6 e4a0      	LDI  R26,LOW(64)
0016e7 940e 0bbb 	CALL _BelKaPWM
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(2);
0016e9 e0e8      	LDI  R30,LOW(8)
0016ea 93ea      	ST   -Y,R30
0016eb e0a1      	LDI  R26,LOW(1)
0016ec 940e 0449 	CALL _LCD_GotoXY
0016ee e0a2      	LDI  R26,LOW(2)
0016ef c02f      	RJMP _0x286
                 ;            Buzzer(C6,20);
                 ;        }
                 ;        else if(notasi_garis[1]==0x01) // LURUS
                 _0x1F4:
                +
0016f0 91a0 0d4e+LDS R26 , _notasi_garis + ( 1 )
                 	__GETB2MN _notasi_garis,1
0016f2 30a1      	CPI  R26,LOW(0x1)
0016f3 f011      	BREQ PC+3
0016f4 940c 172b 	JMP _0x1F6
                 ;        {
                 ;            int16_t SpeedGaris;
                 ;            LCD_Hapus();
0016f6 9722      	SBIW R28,2
                 ;	SpeedGaris -> Y+0
0016f7 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"3KANAN-LURUS");
0016f9 e0e0      	LDI  R30,LOW(0)
0016fa 93ea      	ST   -Y,R30
                +
0016fb e9a4     +LDI R26 , LOW ( 2 * _0x0 + ( 472 ) )
0016fc e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 472 ) )
0016fd e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 472 ) )
0016fe e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 472 ) )
                 	__POINTD2FN _0x0,472
0016ff 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
001701 e0e0      	LDI  R30,LOW(0)
001702 93ea      	ST   -Y,R30
001703 e0a1      	LDI  R26,LOW(1)
001704 940e 0449 	CALL _LCD_GotoXY
                +
001706 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
001708 e0b0      	LDI  R27,0
001709 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
00170b 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
00170d 0fee      	LSL  R30
00170e 0fee      	LSL  R30
00170f e0f0      	LDI  R31,0
001710 83e8      	ST   Y,R30
001711 83f9      	STD  Y+1,R31
                 ;
                 ;            Scan3Kanan(SpeedGaris,pBacaSensorR,pBacaSensorR);
001712 93fa      	ST   -Y,R31
001713 93ea      	ST   -Y,R30
001714 e4e0      	LDI  R30,LOW(64)
001715 93ea      	ST   -Y,R30
001716 e4a0      	LDI  R26,LOW(64)
001717 940e 0b01 	CALL _Scan3Kanan
                 ;            LCD_GotoXY(8,1);    LCD_Angka3(1);
001719 e0e8      	LDI  R30,LOW(8)
00171a 93ea      	ST   -Y,R30
00171b e0a1      	LDI  R26,LOW(1)
00171c 940e 0449 	CALL _LCD_GotoXY
00171e e0a1      	LDI  R26,LOW(1)
                 _0x286:
00171f e0b0      	LDI  R27,0
001720 940e 055f 	CALL _LCD_Angka3
                 ;            //Scan3Kanan(notasi_garis[2],pBacaSensorR,pBacaSensorR);
                 ;            //LCD_GotoXY(8,1);    LCD_Angka3(2);
                 ;            Buzzer(C6,20);
001722 e1e6      	LDI  R30,LOW(1046)
001723 e0f4      	LDI  R31,HIGH(1046)
001724 93fa      	ST   -Y,R31
001725 93ea      	ST   -Y,R30
001726 e1a4      	LDI  R26,LOW(20)
001727 e0b0      	LDI  R27,0
001728 940e 060c 	CALL _Buzzer
                 ;        }
00172a 9622      	ADIW R28,2
                 ;    }
                 _0x1F6:
                 ;
                 ;    /////--Pertigaan Kiri--/////
                 ;    else if(notasi_garis[0]==0x01)
00172b c1eb      	RJMP _0x1F7
                 _0x1F3:
00172c 91a0 0d4d 	LDS  R26,_notasi_garis
00172e 30a1      	CPI  R26,LOW(0x1)
00172f f011      	BREQ PC+3
001730 940c 17a4 	JMP _0x1F8
                 ;    {
                 ;        if(notasi_garis[1]==0x00) //KIRI
                +
001732 91e0 0d4e+LDS R30 , _notasi_garis + ( 1 )
                 	__GETB1MN _notasi_garis,1
001734 30e0      	CPI  R30,0
001735 f011      	BREQ PC+3
001736 940c 1773 	JMP _0x1F9
                 ;        {
                 ;            int16_t SpeedGaris;
                 ;            LCD_Hapus();
001738 9722      	SBIW R28,2
                 ;	SpeedGaris -> Y+0
001739 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"3KIRI-KIRI");
00173b e0e0      	LDI  R30,LOW(0)
00173c 93ea      	ST   -Y,R30
                +
00173d eaa1     +LDI R26 , LOW ( 2 * _0x0 + ( 485 ) )
00173e e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 485 ) )
00173f e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 485 ) )
001740 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 485 ) )
                 	__POINTD2FN _0x0,485
001741 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
001743 e0e0      	LDI  R30,LOW(0)
001744 93ea      	ST   -Y,R30
001745 e0a1      	LDI  R26,LOW(1)
001746 940e 0449 	CALL _LCD_GotoXY
                +
001748 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
00174a e0b0      	LDI  R27,0
00174b 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
00174d 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
00174f 0fee      	LSL  R30
001750 0fee      	LSL  R30
001751 e0f0      	LDI  R31,0
001752 83e8      	ST   Y,R30
001753 83f9      	STD  Y+1,R31
                 ;            Buzzer(C6,20);
001754 e1e6      	LDI  R30,LOW(1046)
001755 e0f4      	LDI  R31,HIGH(1046)
001756 93fa      	ST   -Y,R31
001757 93ea      	ST   -Y,R30
001758 e1a4      	LDI  R26,LOW(20)
001759 e0b0      	LDI  R27,0
00175a 940e 060c 	CALL _Buzzer
                 ;
                 ;            Scan3Kiri(SpeedGaris,pBacaSensorR,pBacaSensorR);
00175c 81e8      	LD   R30,Y
00175d 81f9      	LDD  R31,Y+1
00175e 93fa      	ST   -Y,R31
00175f 93ea      	ST   -Y,R30
001760 e4e0      	LDI  R30,LOW(64)
001761 93ea      	ST   -Y,R30
001762 e4a0      	LDI  R26,LOW(64)
001763 940e 0b5e 	CALL _Scan3Kiri
                 ;            BelKiPWM(-SpeedGaris,SpeedGaris,pBacaSensorR);
001765 81e8      	LD   R30,Y
001766 81f9      	LDD  R31,Y+1
001767 940e 2125 	CALL __ANEGW1
001769 93fa      	ST   -Y,R31
00176a 93ea      	ST   -Y,R30
00176b 81ea      	LDD  R30,Y+2
00176c 81fb      	LDD  R31,Y+2+1
00176d 93fa      	ST   -Y,R31
00176e 93ea      	ST   -Y,R30
00176f e4a0      	LDI  R26,LOW(64)
001770 940e 0be5 	CALL _BelKiPWM
                 ;            Buzzer(C6,20);
001772 c027      	RJMP _0x287
                 ;        }
                 ;        else if(notasi_garis[1]==0x01) // LURUS
                 _0x1F9:
                +
001773 91a0 0d4e+LDS R26 , _notasi_garis + ( 1 )
                 	__GETB2MN _notasi_garis,1
001775 30a1      	CPI  R26,LOW(0x1)
001776 f561      	BRNE _0x1FB
                 ;        {
                 ;            int16_t SpeedGaris;
                 ;            LCD_Hapus();
001777 9722      	SBIW R28,2
                 ;	SpeedGaris -> Y+0
001778 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"3KIRI-LURUS");
00177a e0e0      	LDI  R30,LOW(0)
00177b 93ea      	ST   -Y,R30
                +
00177c eaac     +LDI R26 , LOW ( 2 * _0x0 + ( 496 ) )
00177d e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 496 ) )
00177e e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 496 ) )
00177f e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 496 ) )
                 	__POINTD2FN _0x0,496
001780 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
001782 e0e0      	LDI  R30,LOW(0)
001783 93ea      	ST   -Y,R30
001784 e0a1      	LDI  R26,LOW(1)
001785 940e 0449 	CALL _LCD_GotoXY
                +
001787 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
001789 e0b0      	LDI  R27,0
00178a 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
00178c 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
00178e 0fee      	LSL  R30
00178f 0fee      	LSL  R30
001790 e0f0      	LDI  R31,0
001791 83e8      	ST   Y,R30
001792 83f9      	STD  Y+1,R31
                 ;
                 ;            Scan3Kiri(SpeedGaris,pBacaSensorR,pBacaSensorR);
001793 93fa      	ST   -Y,R31
001794 93ea      	ST   -Y,R30
001795 e4e0      	LDI  R30,LOW(64)
001796 93ea      	ST   -Y,R30
001797 e4a0      	LDI  R26,LOW(64)
001798 940e 0b5e 	CALL _Scan3Kiri
                 ;            Buzzer(C6,20);
                 _0x287:
00179a e1e6      	LDI  R30,LOW(1046)
00179b e0f4      	LDI  R31,HIGH(1046)
00179c 93fa      	ST   -Y,R31
00179d 93ea      	ST   -Y,R30
00179e e1a4      	LDI  R26,LOW(20)
00179f e0b0      	LDI  R27,0
0017a0 940e 060c 	CALL _Buzzer
                 ;        }
0017a2 9622      	ADIW R28,2
                 ;    }
                 _0x1FB:
                 ;
                 ;    /////--Perempatan--/////
                 ;    else if(notasi_garis[0]==0x02)
0017a3 c173      	RJMP _0x1FC
                 _0x1F8:
0017a4 91a0 0d4d 	LDS  R26,_notasi_garis
0017a6 30a2      	CPI  R26,LOW(0x2)
0017a7 f011      	BREQ PC+3
0017a8 940c 18c4 	JMP _0x1FD
                 ;    {
                 ;        if(notasi_garis[1]==0x00) //KANAN
                +
0017aa 91e0 0d4e+LDS R30 , _notasi_garis + ( 1 )
                 	__GETB1MN _notasi_garis,1
0017ac 30e0      	CPI  R30,0
0017ad f011      	BREQ PC+3
0017ae 940c 17f4 	JMP _0x1FE
                 ;        {
                 ;            int16_t SpeedGaris;
                 ;            LCD_Hapus();
0017b0 9722      	SBIW R28,2
                 ;	SpeedGaris -> Y+0
0017b1 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"PEREMPATAN-KANAN");
0017b3 e0e0      	LDI  R30,LOW(0)
0017b4 93ea      	ST   -Y,R30
                +
0017b5 eba8     +LDI R26 , LOW ( 2 * _0x0 + ( 508 ) )
0017b6 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 508 ) )
0017b7 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 508 ) )
0017b8 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 508 ) )
                 	__POINTD2FN _0x0,508
0017b9 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
0017bb e0e0      	LDI  R30,LOW(0)
0017bc 93ea      	ST   -Y,R30
0017bd e0a1      	LDI  R26,LOW(1)
0017be 940e 0449 	CALL _LCD_GotoXY
                +
0017c0 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
0017c2 e0b0      	LDI  R27,0
0017c3 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
0017c5 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
0017c7 0fee      	LSL  R30
0017c8 0fee      	LSL  R30
0017c9 e0f0      	LDI  R31,0
0017ca 83e8      	ST   Y,R30
0017cb 83f9      	STD  Y+1,R31
                 ;            Buzzer(C6,20);
0017cc e1e6      	LDI  R30,LOW(1046)
0017cd e0f4      	LDI  R31,HIGH(1046)
0017ce 93fa      	ST   -Y,R31
0017cf 93ea      	ST   -Y,R30
0017d0 e1a4      	LDI  R26,LOW(20)
0017d1 e0b0      	LDI  R27,0
0017d2 940e 060c 	CALL _Buzzer
                 ;
                 ;            ScanPerempatan(SpeedGaris,pBacaSensorR,pBacaSensorR);
0017d4 81e8      	LD   R30,Y
0017d5 81f9      	LDD  R31,Y+1
0017d6 93fa      	ST   -Y,R31
0017d7 93ea      	ST   -Y,R30
0017d8 e4e0      	LDI  R30,LOW(64)
0017d9 93ea      	ST   -Y,R30
0017da e4a0      	LDI  R26,LOW(64)
0017db 940e 0aa2 	CALL _ScanPerempatan
                 ;            BelKaPWM(SpeedGaris,-SpeedGaris,pBacaSensorR);
0017dd 81e8      	LD   R30,Y
0017de 81f9      	LDD  R31,Y+1
0017df 93fa      	ST   -Y,R31
0017e0 93ea      	ST   -Y,R30
0017e1 81ea      	LDD  R30,Y+2
0017e2 81fb      	LDD  R31,Y+2+1
0017e3 940e 2125 	CALL __ANEGW1
0017e5 93fa      	ST   -Y,R31
0017e6 93ea      	ST   -Y,R30
0017e7 e4a0      	LDI  R26,LOW(64)
0017e8 940e 0bbb 	CALL _BelKaPWM
                 ;            Buzzer(C6,20);
0017ea e1e6      	LDI  R30,LOW(1046)
0017eb e0f4      	LDI  R31,HIGH(1046)
0017ec 93fa      	ST   -Y,R31
0017ed 93ea      	ST   -Y,R30
0017ee e1a4      	LDI  R26,LOW(20)
0017ef e0b0      	LDI  R27,0
0017f0 940e 060c 	CALL _Buzzer
                 ;        }
0017f2 9622      	ADIW R28,2
                 ;        else if(notasi_garis[1]==0x01) //KIRI
0017f3 c0cf      	RJMP _0x1FF
                 _0x1FE:
                +
0017f4 91a0 0d4e+LDS R26 , _notasi_garis + ( 1 )
                 	__GETB2MN _notasi_garis,1
0017f6 30a1      	CPI  R26,LOW(0x1)
0017f7 f011      	BREQ PC+3
0017f8 940c 183e 	JMP _0x200
                 ;        {
                 ;            int16_t SpeedGaris;
                 ;            LCD_Hapus();
0017fa 9722      	SBIW R28,2
                 ;	SpeedGaris -> Y+0
0017fb 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"PEREMPATAN-KIRI");
0017fd e0e0      	LDI  R30,LOW(0)
0017fe 93ea      	ST   -Y,R30
                +
0017ff eca9     +LDI R26 , LOW ( 2 * _0x0 + ( 525 ) )
001800 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 525 ) )
001801 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 525 ) )
001802 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 525 ) )
                 	__POINTD2FN _0x0,525
001803 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
001805 e0e0      	LDI  R30,LOW(0)
001806 93ea      	ST   -Y,R30
001807 e0a1      	LDI  R26,LOW(1)
001808 940e 0449 	CALL _LCD_GotoXY
                +
00180a 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
00180c e0b0      	LDI  R27,0
00180d 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
00180f 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
001811 0fee      	LSL  R30
001812 0fee      	LSL  R30
001813 e0f0      	LDI  R31,0
001814 83e8      	ST   Y,R30
001815 83f9      	STD  Y+1,R31
                 ;            Buzzer(C6,20);
001816 e1e6      	LDI  R30,LOW(1046)
001817 e0f4      	LDI  R31,HIGH(1046)
001818 93fa      	ST   -Y,R31
001819 93ea      	ST   -Y,R30
00181a e1a4      	LDI  R26,LOW(20)
00181b e0b0      	LDI  R27,0
00181c 940e 060c 	CALL _Buzzer
                 ;
                 ;            ScanPerempatan(SpeedGaris,pBacaSensorR,pBacaSensorR);
00181e 81e8      	LD   R30,Y
00181f 81f9      	LDD  R31,Y+1
001820 93fa      	ST   -Y,R31
001821 93ea      	ST   -Y,R30
001822 e4e0      	LDI  R30,LOW(64)
001823 93ea      	ST   -Y,R30
001824 e4a0      	LDI  R26,LOW(64)
001825 940e 0aa2 	CALL _ScanPerempatan
                 ;            BelKiPWM(-SpeedGaris,SpeedGaris,pBacaSensorR);
001827 81e8      	LD   R30,Y
001828 81f9      	LDD  R31,Y+1
001829 940e 2125 	CALL __ANEGW1
00182b 93fa      	ST   -Y,R31
00182c 93ea      	ST   -Y,R30
00182d 81ea      	LDD  R30,Y+2
00182e 81fb      	LDD  R31,Y+2+1
00182f 93fa      	ST   -Y,R31
001830 93ea      	ST   -Y,R30
001831 e4a0      	LDI  R26,LOW(64)
001832 940e 0be5 	CALL _BelKiPWM
                 ;            Buzzer(C6,20);
001834 e1e6      	LDI  R30,LOW(1046)
001835 e0f4      	LDI  R31,HIGH(1046)
001836 93fa      	ST   -Y,R31
001837 93ea      	ST   -Y,R30
001838 e1a4      	LDI  R26,LOW(20)
001839 e0b0      	LDI  R27,0
00183a 940e 060c 	CALL _Buzzer
                 ;        }
00183c 9622      	ADIW R28,2
                 ;        else if(notasi_garis[1]==0x02) // LURUS
00183d c085      	RJMP _0x201
                 _0x200:
                +
00183e 91a0 0d4e+LDS R26 , _notasi_garis + ( 1 )
                 	__GETB2MN _notasi_garis,1
001840 30a2      	CPI  R26,LOW(0x2)
001841 f011      	BREQ PC+3
001842 940c 18c3 	JMP _0x202
                 ;        {
                 ;            int16_t SpeedGaris,Enkoder_t=0;
                 ;            Enkoder1=0;Enkoder2=0;
001844 9724      	SBIW R28,4
001845 e0e0      	LDI  R30,LOW(0)
001846 83e8      	ST   Y,R30
001847 83e9      	STD  Y+1,R30
                 ;	SpeedGaris -> Y+2
                 ;	Enkoder_t -> Y+0
001848 24aa      	CLR  R10
001849 24bb      	CLR  R11
00184a 24cc      	CLR  R12
00184b 24dd      	CLR  R13
                 ;
                 ;            LCD_Hapus();
00184c 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"PEREMPATAN-LURUS");
00184e e0e0      	LDI  R30,LOW(0)
00184f 93ea      	ST   -Y,R30
                +
001850 eda9     +LDI R26 , LOW ( 2 * _0x0 + ( 541 ) )
001851 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 541 ) )
001852 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 541 ) )
001853 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 541 ) )
                 	__POINTD2FN _0x0,541
001854 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
001856 e0e0      	LDI  R30,LOW(0)
001857 93ea      	ST   -Y,R30
001858 e0a1      	LDI  R26,LOW(1)
001859 940e 0449 	CALL _LCD_GotoXY
                +
00185b 91a0 0d4f+LDS R26 , _notasi_garis + ( 2 )
                 	__GETB2MN _notasi_garis,2
00185d e0b0      	LDI  R27,0
00185e 940e 055f 	CALL _LCD_Angka3
                 ;
                 ;            SpeedGaris = notasi_garis[2]*4;
                +
001860 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
001862 0fee      	LSL  R30
001863 0fee      	LSL  R30
001864 e0f0      	LDI  R31,0
001865 83ea      	STD  Y+2,R30
001866 83fb      	STD  Y+2+1,R31
                 ;            Buzzer(C6,20);
001867 e1e6      	LDI  R30,LOW(1046)
001868 e0f4      	LDI  R31,HIGH(1046)
001869 93fa      	ST   -Y,R31
00186a 93ea      	ST   -Y,R30
00186b e1a4      	LDI  R26,LOW(20)
00186c e0b0      	LDI  R27,0
00186d 940e 060c 	CALL _Buzzer
                 ;
                 ;            ScanPerempatan(SpeedGaris,pBacaSensorR,pBacaSensorR);
00186f 81ea      	LDD  R30,Y+2
001870 81fb      	LDD  R31,Y+2+1
001871 93fa      	ST   -Y,R31
001872 93ea      	ST   -Y,R30
001873 e4e0      	LDI  R30,LOW(64)
001874 93ea      	ST   -Y,R30
001875 e4a0      	LDI  R26,LOW(64)
001876 940e 0aa2 	CALL _ScanPerempatan
                 ;            SetDataMotorPWM(SpeedGaris,SpeedGaris);
001878 81ea      	LDD  R30,Y+2
001879 81fb      	LDD  R31,Y+2+1
00187a 93fa      	ST   -Y,R31
00187b 93ea      	ST   -Y,R30
00187c 81ac      	LDD  R26,Y+4
00187d 81bd      	LDD  R27,Y+4+1
00187e 940e 02e7 	CALL _SetDataMotorPWM
                 ;            while(Enkoder_t <= 2*Pulse_PerCM)
                 _0x203:
001880 81e8      	LD   R30,Y
001881 81f9      	LDD  R31,Y+1
001882 940e 213c 	CALL __CWD1
001884 940e 1fdf 	CALL __CDF1
001886 01df      	MOVW R26,R30
001887 01cb      	MOVW R24,R22
                +
001888 e4e9     +LDI R30 , LOW ( 0x41E13449 )
001889 e3f4     +LDI R31 , HIGH ( 0x41E13449 )
00188a ee61     +LDI R22 , BYTE3 ( 0x41E13449 )
00188b e471     +LDI R23 , BYTE4 ( 0x41E13449 )
                 	__GETD1N 0x41E13449
00188c 940e 20f7 	CALL __CMPF12
00188e f019      	BREQ PC+4
00188f f010      	BRCS PC+3
001890 940c 18b2 	JMP  _0x205
                 ;            {
                 ;                Enkoder_t = (Enkoder1+Enkoder2)/2;
001892 01d6      	MOVW R26,R12
001893 0daa      	ADD  R26,R10
001894 1dbb      	ADC  R27,R11
001895 e0e2      	LDI  R30,LOW(2)
001896 e0f0      	LDI  R31,HIGH(2)
001897 940e 2177 	CALL __DIVW21
001899 83e8      	ST   Y,R30
00189a 83f9      	STD  Y+1,R31
                 ;                LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
00189b e0e0      	LDI  R30,LOW(0)
00189c 93ea      	ST   -Y,R30
00189d e0a1      	LDI  R26,LOW(1)
00189e 940e 0449 	CALL _LCD_GotoXY
0018a0 01d5      	MOVW R26,R10
0018a1 940e 0520 	CALL _LCD_Angka4
0018a3 e2a0      	LDI  R26,LOW(32)
0018a4 940e 040d 	CALL _LCD_Data
                 ;                LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
0018a6 e0e6      	LDI  R30,LOW(6)
0018a7 93ea      	ST   -Y,R30
0018a8 e0a1      	LDI  R26,LOW(1)
0018a9 940e 0449 	CALL _LCD_GotoXY
0018ab 01d6      	MOVW R26,R12
0018ac 940e 0520 	CALL _LCD_Angka4
0018ae e2a0      	LDI  R26,LOW(32)
0018af 940e 040d 	CALL _LCD_Data
                 ;            }
0018b1 cfce      	RJMP _0x203
                 _0x205:
                 ;            SetDataMotorPWM(0,0);
0018b2 e0e0      	LDI  R30,LOW(0)
0018b3 e0f0      	LDI  R31,HIGH(0)
0018b4 93fa      	ST   -Y,R31
0018b5 93ea      	ST   -Y,R30
0018b6 e0a0      	LDI  R26,LOW(0)
0018b7 e0b0      	LDI  R27,0
0018b8 940e 02e7 	CALL _SetDataMotorPWM
                 ;
                 ;            Buzzer(C6,20);
0018ba e1e6      	LDI  R30,LOW(1046)
0018bb e0f4      	LDI  R31,HIGH(1046)
0018bc 93fa      	ST   -Y,R31
0018bd 93ea      	ST   -Y,R30
0018be e1a4      	LDI  R26,LOW(20)
0018bf e0b0      	LDI  R27,0
0018c0 940e 060c 	CALL _Buzzer
                 ;        }
0018c2 9624      	ADIW R28,4
                 ;    }
                 _0x202:
                 _0x201:
                 _0x1FF:
                 ;
                 ;    /////--Jalan Bebas--/////
                 ;    else if(notasi_garis[0]==0x03)
0018c3 c053      	RJMP _0x206
                 _0x1FD:
0018c4 91a0 0d4d 	LDS  R26,_notasi_garis
0018c6 30a3      	CPI  R26,LOW(0x3)
0018c7 f011      	BREQ PC+3
0018c8 940c 1917 	JMP _0x207
                 ;    {
                 ;        uint16_t i,TimeJalanBebas,SpeedGaris;
                 ;        LCD_Hapus();
0018ca 9726      	SBIW R28,6
                 ;	i -> Y+4
                 ;	TimeJalanBebas -> Y+2
                 ;	SpeedGaris -> Y+0
0018cb 940e 047c 	CALL _LCD_Hapus
                 ;        LCD_TulisF(0,"JALAN BEBAS");
0018cd e0e0      	LDI  R30,LOW(0)
0018ce 93ea      	ST   -Y,R30
                +
0018cf eeaa     +LDI R26 , LOW ( 2 * _0x0 + ( 558 ) )
0018d0 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 558 ) )
0018d1 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 558 ) )
0018d2 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 558 ) )
                 	__POINTD2FN _0x0,558
0018d3 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;        TimeJalanBebas=notasi_garis[1];
                +
0018d5 91e0 0d4e+LDS R30 , _notasi_garis + ( 1 )
                 	__GETB1MN _notasi_garis,1
0018d7 e0f0      	LDI  R31,0
0018d8 83ea      	STD  Y+2,R30
0018d9 83fb      	STD  Y+2+1,R31
                 ;        SpeedGaris = notasi_garis[2]*4;
                +
0018da 91e0 0d4f+LDS R30 , _notasi_garis + ( 2 )
                 	__GETB1MN _notasi_garis,2
0018dc 0fee      	LSL  R30
0018dd 0fee      	LSL  R30
0018de e0f0      	LDI  R31,0
0018df 83e8      	ST   Y,R30
0018e0 83f9      	STD  Y+1,R31
                 ;
                 ;        for(i=0;i<TimeJalanBebas;i++)
0018e1 e0e0      	LDI  R30,LOW(0)
0018e2 83ec      	STD  Y+4,R30
0018e3 83ed      	STD  Y+4+1,R30
                 _0x209:
0018e4 81ea      	LDD  R30,Y+2
0018e5 81fb      	LDD  R31,Y+2+1
0018e6 81ac      	LDD  R26,Y+4
0018e7 81bd      	LDD  R27,Y+4+1
0018e8 17ae      	CP   R26,R30
0018e9 07bf      	CPC  R27,R31
0018ea f4d8      	BRSH _0x20A
                 ;        {
                 ;            usCounter=0;
0018eb e0e0      	LDI  R30,LOW(0)
0018ec 93e0 0d0e 	STS  _usCounter,R30
0018ee 93e0 0d0f 	STS  _usCounter+1,R30
                 ;            while(usCounter<=40000) //1000uS/25uS=40 -> proses selama 1ms
                 _0x20B:
0018f0 91a0 0d0e 	LDS  R26,_usCounter
0018f2 91b0 0d0f 	LDS  R27,_usCounter+1
0018f4 34a1      	CPI  R26,LOW(0x9C41)
0018f5 e9ec      	LDI  R30,HIGH(0x9C41)
0018f6 07be      	CPC  R27,R30
0018f7 f440      	BRSH _0x20D
                 ;            {
                 ;                ScanGaris(SpeedGaris,pBacaSensorR);
0018f8 81e8      	LD   R30,Y
0018f9 81f9      	LDD  R31,Y+1
0018fa 93fa      	ST   -Y,R31
0018fb 93ea      	ST   -Y,R30
0018fc e4a0      	LDI  R26,LOW(64)
0018fd 940e 09d5 	CALL _ScanGaris
                 ;            }
0018ff cff0      	RJMP _0x20B
                 _0x20D:
                 ;        }
001900 81ec      	LDD  R30,Y+4
001901 81fd      	LDD  R31,Y+4+1
001902 9631      	ADIW R30,1
001903 83ec      	STD  Y+4,R30
001904 83fd      	STD  Y+4+1,R31
001905 cfde      	RJMP _0x209
                 _0x20A:
                 ;
                 ;        SetDataMotorPWM(0,0);
001906 e0e0      	LDI  R30,LOW(0)
001907 e0f0      	LDI  R31,HIGH(0)
001908 93fa      	ST   -Y,R31
001909 93ea      	ST   -Y,R30
00190a e0a0      	LDI  R26,LOW(0)
00190b e0b0      	LDI  R27,0
00190c 940e 02e7 	CALL _SetDataMotorPWM
                 ;        Buzzer(C6,20);
00190e e1e6      	LDI  R30,LOW(1046)
00190f e0f4      	LDI  R31,HIGH(1046)
001910 93fa      	ST   -Y,R31
001911 93ea      	ST   -Y,R30
001912 e1a4      	LDI  R26,LOW(20)
001913 e0b0      	LDI  R27,0
001914 940e 060c 	CALL _Buzzer
                 ;    }
001916 9626      	ADIW R28,6
                 ;}
                 _0x207:
                 _0x206:
                 _0x1FC:
                 _0x1F7:
001917 9508      	RET
                 ;
                 ;void Alarm()
                 ;{
                 _Alarm:
                 ;    uint16_t Freq_Alarm = C6;
                 ;
                 ;    LCD_Hapus();
001918 931a      	ST   -Y,R17
001919 930a      	ST   -Y,R16
                 ;	Freq_Alarm -> R16,R17
                +
00191a e106     +LDI R16 , LOW ( 1046 )
00191b e014     +LDI R17 , HIGH ( 1046 )
                 	__GETWRN 16,17,1046
00191c 940e 047c 	CALL _LCD_Hapus
                 ;    notasi_buzzer[0]=getchar();
00191e 940e 0645 	CALL _getchar
001920 93e0 0d35 	STS  _notasi_buzzer,R30
                 ;
                 ;    /////--Monostable--/////
                 ;    if(notasi_buzzer[0]==0)
001922 30e0      	CPI  R30,0
001923 f591      	BRNE _0x20E
                 ;    {
                 ;        notasi_buzzer[1]=getchar();
001924 940e 0645 	CALL _getchar
                +
001926 93e0 0d36+STS _notasi_buzzer + ( 1 ) , R30
                 	__PUTB1MN _notasi_buzzer,1
                 ;        LCD_TulisF(0,"Buzzer Status:");
001928 e0e0      	LDI  R30,LOW(0)
001929 93ea      	ST   -Y,R30
                +
00192a efa6     +LDI R26 , LOW ( 2 * _0x0 + ( 570 ) )
00192b e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 570 ) )
00192c e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 570 ) )
00192d e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 570 ) )
                 	__POINTD2FN _0x0,570
00192e 940e 0471 	CALL _LCD_TulisF
                 ;        LCD_TulisF(1,"ON");
001930 e0e1      	LDI  R30,LOW(1)
001931 93ea      	ST   -Y,R30
                +
001932 e0a5     +LDI R26 , LOW ( 2 * _0x0 + ( 585 ) )
001933 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 585 ) )
001934 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 585 ) )
001935 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 585 ) )
                 	__POINTD2FN _0x0,585
001936 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;        Buzzer(Freq_Alarm,notasi_buzzer[1]*1000);
001938 931a      	ST   -Y,R17
001939 930a      	ST   -Y,R16
                +
00193a 91a0 0d36+LDS R26 , _notasi_buzzer + ( 1 )
                 	__GETB2MN _notasi_buzzer,1
00193c e0b0      	LDI  R27,0
00193d eee8      	LDI  R30,LOW(1000)
00193e e0f3      	LDI  R31,HIGH(1000)
00193f 940e 2151 	CALL __MULW12U
001941 01df      	MOVW R26,R30
001942 940e 060c 	CALL _Buzzer
                 ;
                 ;        LCD_Hapus();
001944 940e 047c 	CALL _LCD_Hapus
                 ;        LCD_TulisF(0,"Buzzer Status:");
001946 e0e0      	LDI  R30,LOW(0)
001947 93ea      	ST   -Y,R30
                +
001948 efa6     +LDI R26 , LOW ( 2 * _0x0 + ( 570 ) )
001949 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 570 ) )
00194a e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 570 ) )
00194b e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 570 ) )
                 	__POINTD2FN _0x0,570
00194c 940e 0471 	CALL _LCD_TulisF
                 ;        LCD_TulisF(1,"OFF");
00194e e0e1      	LDI  R30,LOW(1)
00194f 93ea      	ST   -Y,R30
                +
001950 e0a8     +LDI R26 , LOW ( 2 * _0x0 + ( 588 ) )
001951 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 588 ) )
001952 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 588 ) )
001953 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 588 ) )
                 	__POINTD2FN _0x0,588
001954 940e 0471 	CALL _LCD_TulisF
                 ;    }
                 ;
                 ;    /////--Astable--/////
                 ;    if(notasi_buzzer[0]==1)
                 _0x20E:
001956 91a0 0d35 	LDS  R26,_notasi_buzzer
001958 30a1      	CPI  R26,LOW(0x1)
001959 f011      	BREQ PC+3
00195a 940c 19c7 	JMP _0x20F
                 ;    {
                 ;        notasi_buzzer[1]=getchar();
00195c 940e 0645 	CALL _getchar
                +
00195e 93e0 0d36+STS _notasi_buzzer + ( 1 ) , R30
                 	__PUTB1MN _notasi_buzzer,1
                 ;        notasi_buzzer[2]=getchar();
001960 940e 0645 	CALL _getchar
                +
001962 93e0 0d37+STS _notasi_buzzer + ( 2 ) , R30
                 	__PUTB1MN _notasi_buzzer,2
                 ;        notasi_buzzer[3]=getchar();
001964 940e 0645 	CALL _getchar
                +
001966 93e0 0d38+STS _notasi_buzzer + ( 3 ) , R30
                 	__PUTB1MN _notasi_buzzer,3
                 ;
                 ;        for(i=0;i<notasi_buzzer[3];i++)
001968 e0e0      	LDI  R30,LOW(0)
001969 93e0 0d67 	STS  _i,R30
                 _0x211:
                +
00196b 91e0 0d38+LDS R30 , _notasi_buzzer + ( 3 )
                 	__GETB1MN _notasi_buzzer,3
00196d 91a0 0d67 	LDS  R26,_i
00196f 17ae      	CP   R26,R30
001970 f010      	BRLO PC+3
001971 940c 19c7 	JMP _0x212
                 ;        {
                 ;            LCD_Hapus();
001973 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"Buzzer Status:");
001975 e0e0      	LDI  R30,LOW(0)
001976 93ea      	ST   -Y,R30
                +
001977 efa6     +LDI R26 , LOW ( 2 * _0x0 + ( 570 ) )
001978 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 570 ) )
001979 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 570 ) )
00197a e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 570 ) )
                 	__POINTD2FN _0x0,570
00197b 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"ON");
00197d e0e1      	LDI  R30,LOW(1)
00197e 93ea      	ST   -Y,R30
                +
00197f e0a5     +LDI R26 , LOW ( 2 * _0x0 + ( 585 ) )
001980 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 585 ) )
001981 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 585 ) )
001982 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 585 ) )
                 	__POINTD2FN _0x0,585
001983 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_GotoXY(14,1);
001985 e0ee      	LDI  R30,LOW(14)
001986 93ea      	ST   -Y,R30
001987 e0a1      	LDI  R26,LOW(1)
001988 940e 0449 	CALL _LCD_GotoXY
                 ;            LCD_Data(i+48);
00198a 91a0 0d67 	LDS  R26,_i
00198c 5da0      	SUBI R26,-LOW(48)
00198d 940e 040d 	CALL _LCD_Data
                 ;
                 ;            Buzzer(Freq_Alarm,notasi_buzzer[1]*1000);
00198f 931a      	ST   -Y,R17
001990 930a      	ST   -Y,R16
                +
001991 91a0 0d36+LDS R26 , _notasi_buzzer + ( 1 )
                 	__GETB2MN _notasi_buzzer,1
001993 e0b0      	LDI  R27,0
001994 eee8      	LDI  R30,LOW(1000)
001995 e0f3      	LDI  R31,HIGH(1000)
001996 940e 2151 	CALL __MULW12U
001998 01df      	MOVW R26,R30
001999 940e 060c 	CALL _Buzzer
                 ;
                 ;            LCD_Hapus();
00199b 940e 047c 	CALL _LCD_Hapus
                 ;            LCD_TulisF(0,"Buzzer Status:");
00199d e0e0      	LDI  R30,LOW(0)
00199e 93ea      	ST   -Y,R30
                +
00199f efa6     +LDI R26 , LOW ( 2 * _0x0 + ( 570 ) )
0019a0 e0b3     +LDI R27 , HIGH ( 2 * _0x0 + ( 570 ) )
0019a1 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 570 ) )
0019a2 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 570 ) )
                 	__POINTD2FN _0x0,570
0019a3 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"OFF");
0019a5 e0e1      	LDI  R30,LOW(1)
0019a6 93ea      	ST   -Y,R30
                +
0019a7 e0a8     +LDI R26 , LOW ( 2 * _0x0 + ( 588 ) )
0019a8 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 588 ) )
0019a9 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 588 ) )
0019aa e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 588 ) )
                 	__POINTD2FN _0x0,588
0019ab 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_GotoXY(14,1);
0019ad e0ee      	LDI  R30,LOW(14)
0019ae 93ea      	ST   -Y,R30
0019af e0a1      	LDI  R26,LOW(1)
0019b0 940e 0449 	CALL _LCD_GotoXY
                 ;            LCD_Data(i+49);
0019b2 91a0 0d67 	LDS  R26,_i
0019b4 5caf      	SUBI R26,-LOW(49)
0019b5 940e 040d 	CALL _LCD_Data
                 ;
                 ;            delay_ms(notasi_buzzer[2]*1000);
                +
0019b7 91a0 0d37+LDS R26 , _notasi_buzzer + ( 2 )
                 	__GETB2MN _notasi_buzzer,2
0019b9 e0b0      	LDI  R27,0
0019ba eee8      	LDI  R30,LOW(1000)
0019bb e0f3      	LDI  R31,HIGH(1000)
0019bc 940e 2151 	CALL __MULW12U
0019be 01df      	MOVW R26,R30
0019bf 940e 1f6f 	CALL _delay_ms
                 ;        }
0019c1 91e0 0d67 	LDS  R30,_i
0019c3 5fef      	SUBI R30,-LOW(1)
0019c4 93e0 0d67 	STS  _i,R30
0019c6 cfa4      	RJMP _0x211
                 _0x212:
                 ;    }
                 ;
                 ;    /////--Lagu--/////
                 ;    if(notasi_buzzer[0]==2)
                 _0x20F:
0019c7 91a0 0d35 	LDS  R26,_notasi_buzzer
0019c9 30a2      	CPI  R26,LOW(0x2)
0019ca f5c1      	BRNE _0x213
                 ;    {
                 ;        LCD_Hapus();
0019cb 940e 047c 	CALL _LCD_Hapus
                 ;        LCD_TulisF(0," -=Buzzer Nada=-");
0019cd e0e0      	LDI  R30,LOW(0)
0019ce 93ea      	ST   -Y,R30
                +
0019cf e0ac     +LDI R26 , LOW ( 2 * _0x0 + ( 592 ) )
0019d0 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 592 ) )
0019d1 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 592 ) )
0019d2 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 592 ) )
                 	__POINTD2FN _0x0,592
0019d3 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;        for(i=0;i<78;i++)
0019d5 e0e0      	LDI  R30,LOW(0)
0019d6 93e0 0d67 	STS  _i,R30
                 _0x215:
0019d8 91a0 0d67 	LDS  R26,_i
0019da 34ae      	CPI  R26,LOW(0x4E)
0019db f538      	BRSH _0x216
                 ;        {
                 ;            Buzzer(Melodi[i],Tempo[i]*13);
0019dc 91e0 0d67 	LDS  R30,_i
0019de e8ac      	LDI  R26,LOW(_Melodi*2)
0019df e0b0      	LDI  R27,HIGH(_Melodi*2)
0019e0 e080      	LDI  R24,BYTE3(_Melodi*2)
0019e1 27ff      	CLR  R31
0019e2 2766      	CLR  R22
0019e3 2777      	CLR  R23
0019e4 940e 2131 	CALL __LSLD1
0019e6 940e 211b 	CALL __ADDD12
0019e8 940e 21e9 	CALL __GETW1PF
0019ea 93fa      	ST   -Y,R31
0019eb 93ea      	ST   -Y,R30
0019ec 91e0 0d67 	LDS  R30,_i
0019ee 27ff      	CLR  R31
0019ef 2766      	CLR  R22
0019f0 2777      	CLR  R23
0019f1 5de8      	SUBI R30,LOW(-_Tempo*2)
0019f2 4ffe      	SBCI R31,HIGH(-_Tempo*2)
0019f3 4f6f      	SBCI R22,BYTE3(-_Tempo*2)
                +
0019f4 bf6b     +OUT RAMPZ , R22
0019f5 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
0019f6 e0ad      	LDI  R26,LOW(13)
0019f7 9fea      	MUL  R30,R26
0019f8 01f0      	MOVW R30,R0
0019f9 e0f0      	LDI  R31,0
0019fa 01df      	MOVW R26,R30
0019fb 940e 060c 	CALL _Buzzer
                 ;        }
0019fd 91e0 0d67 	LDS  R30,_i
0019ff 5fef      	SUBI R30,-LOW(1)
001a00 93e0 0d67 	STS  _i,R30
001a02 cfd5      	RJMP _0x215
                 _0x216:
                 ;    }
                 ;}
                 _0x213:
001a03 9109      	LD   R16,Y+
001a04 9119      	LD   R17,Y+
001a05 9508      	RET
                 ;
                 ;void Lcd()
                 ;{
                 _Lcd:
                 ;    if(flag_aksi==0x08)
001a06 91a0 0d68 	LDS  R26,_flag_aksi
001a08 30a8      	CPI  R26,LOW(0x8)
001a09 f5b9      	BRNE _0x217
                 ;    {
                 ;        LCD_Hapus();
001a0a 940e 047c 	CALL _LCD_Hapus
                 ;        LCD_TulisF(0,"PESAN :");
001a0c e0e0      	LDI  R30,LOW(0)
001a0d 93ea      	ST   -Y,R30
                +
001a0e e1ad     +LDI R26 , LOW ( 2 * _0x0 + ( 609 ) )
001a0f e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 609 ) )
001a10 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 609 ) )
001a11 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 609 ) )
                 	__POINTD2FN _0x0,609
001a12 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;        notasi_lcd[0]=getchar();
001a14 940e 0645 	CALL _getchar
001a16 93e0 0d39 	STS  _notasi_lcd,R30
                 ;        for(i=0;i<notasi_lcd[0];i++)
001a18 e0e0      	LDI  R30,LOW(0)
001a19 93e0 0d67 	STS  _i,R30
                 _0x219:
001a1b 91e0 0d39 	LDS  R30,_notasi_lcd
001a1d 91a0 0d67 	LDS  R26,_i
001a1f 17ae      	CP   R26,R30
001a20 f500      	BRSH _0x21A
                 ;        {
                 ;            notasi_lcd[i+1]=getchar();
001a21 91e0 0d67 	LDS  R30,_i
001a23 e0f0      	LDI  R31,0
                +
001a24 5ce6     +SUBI R30 , LOW ( - _notasi_lcd - ( 1 ) )
001a25 4ff2     +SBCI R31 , HIGH ( - _notasi_lcd - ( 1 ) )
                 	__ADDW1MN _notasi_lcd,1
001a26 93ff      	PUSH R31
001a27 93ef      	PUSH R30
001a28 940e 0645 	CALL _getchar
001a2a 91af      	POP  R26
001a2b 91bf      	POP  R27
001a2c 93ec      	ST   X,R30
                 ;            LCD_GotoXY(i,1);
001a2d 91e0 0d67 	LDS  R30,_i
001a2f 93ea      	ST   -Y,R30
001a30 e0a1      	LDI  R26,LOW(1)
001a31 940e 0449 	CALL _LCD_GotoXY
                 ;            LCD_Data(notasi_lcd[i+1]);
001a33 91e0 0d67 	LDS  R30,_i
001a35 e0f0      	LDI  R31,0
                +
001a36 5ce6     +SUBI R30 , LOW ( - _notasi_lcd - ( 1 ) )
001a37 4ff2     +SBCI R31 , HIGH ( - _notasi_lcd - ( 1 ) )
                 	__ADDW1MN _notasi_lcd,1
001a38 81a0      	LD   R26,Z
001a39 940e 040d 	CALL _LCD_Data
                 ;        }
001a3b 91e0 0d67 	LDS  R30,_i
001a3d 5fef      	SUBI R30,-LOW(1)
001a3e 93e0 0d67 	STS  _i,R30
001a40 cfda      	RJMP _0x219
                 _0x21A:
                 ;    }
                 ;}
                 _0x217:
001a41 9508      	RET
                 ;
                 ;void Tunda()
                 ;{
                 _Tunda:
                 ;    LCD_Hapus();
001a42 940e 047c 	CALL _LCD_Hapus
                 ;    LCD_TulisF(0,"DELAY");
001a44 e0e0      	LDI  R30,LOW(0)
001a45 93ea      	ST   -Y,R30
                +
001a46 e2a5     +LDI R26 , LOW ( 2 * _0x0 + ( 617 ) )
001a47 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 617 ) )
001a48 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 617 ) )
001a49 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 617 ) )
                 	__POINTD2FN _0x0,617
001a4a 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;    notasi_delay[0]=getchar();
001a4c 940e 0645 	CALL _getchar
001a4e 93e0 0d51 	STS  _notasi_delay,R30
                 ;    for(i=notasi_delay[0];i>0;i--)
001a50 93e0 0d67 	STS  _i,R30
                 _0x21C:
001a52 91a0 0d67 	LDS  R26,_i
001a54 30a1      	CPI  R26,LOW(0x1)
001a55 f0b0      	BRLO _0x21D
                 ;    {
                 ;        LCD_GotoXY(0,1);
001a56 e0e0      	LDI  R30,LOW(0)
001a57 93ea      	ST   -Y,R30
001a58 e0a1      	LDI  R26,LOW(1)
001a59 940e 0449 	CALL _LCD_GotoXY
                 ;        LCD_Angka3(i-1);
001a5b 91e0 0d67 	LDS  R30,_i
001a5d 50e1      	SUBI R30,LOW(1)
001a5e e0f0      	LDI  R31,0
001a5f 01df      	MOVW R26,R30
001a60 940e 055f 	CALL _LCD_Angka3
                 ;        delay_ms(1000);
001a62 eea8      	LDI  R26,LOW(1000)
001a63 e0b3      	LDI  R27,HIGH(1000)
001a64 940e 1f6f 	CALL _delay_ms
                 ;    }
001a66 91e0 0d67 	LDS  R30,_i
001a68 50e1      	SUBI R30,LOW(1)
001a69 93e0 0d67 	STS  _i,R30
001a6b cfe6      	RJMP _0x21C
                 _0x21D:
                 ;
                 ;}
001a6c 9508      	RET
                 ;
                 ;void Gripper()
                 ;{
                 _Gripper:
                 ;    LCD_Hapus();
001a6d 940e 047c 	CALL _LCD_Hapus
                 ;
                 ;    notasi_gripper[0]=getchar();
001a6f 940e 0645 	CALL _getchar
001a71 93e0 0d4a 	STS  _notasi_gripper,R30
                 ;    notasi_gripper[1]=getchar();
001a73 940e 0645 	CALL _getchar
                +
001a75 93e0 0d4b+STS _notasi_gripper + ( 1 ) , R30
                 	__PUTB1MN _notasi_gripper,1
                 ;
                 ;    /////--CAPIT--/////
                 ;    if(notasi_gripper[0]==0)
001a77 91e0 0d4a 	LDS  R30,_notasi_gripper
001a79 30e0      	CPI  R30,0
001a7a f011      	BREQ PC+3
001a7b 940c 1ad4 	JMP _0x21E
                 ;    {
                 ;        if(notasi_gripper[1]==0)
                +
001a7d 91e0 0d4b+LDS R30 , _notasi_gripper + ( 1 )
                 	__GETB1MN _notasi_gripper,1
001a7f 30e0      	CPI  R30,0
001a80 f4b9      	BRNE _0x21F
                 ;        {
                 ;            LCD_TulisF(0,"GRIPPER:");
001a81 e0e0      	LDI  R30,LOW(0)
001a82 93ea      	ST   -Y,R30
                +
001a83 e2ab     +LDI R26 , LOW ( 2 * _0x0 + ( 623 ) )
001a84 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 623 ) )
001a85 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 623 ) )
001a86 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 623 ) )
                 	__POINTD2FN _0x0,623
001a87 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"BUKA ");
001a89 e0e1      	LDI  R30,LOW(1)
001a8a 93ea      	ST   -Y,R30
                +
001a8b e3a4     +LDI R26 , LOW ( 2 * _0x0 + ( 632 ) )
001a8c e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 632 ) )
001a8d e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 632 ) )
001a8e e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 632 ) )
                 	__POINTD2FN _0x0,632
001a8f 940e 0471 	CALL _LCD_TulisF
                 ;            Capit1(60);
001a91 e3ac      	LDI  R26,LOW(60)
001a92 940e 02d2 	CALL _SudutServo7
                 ;            Capit2(120);
001a94 e7a8      	LDI  R26,LOW(120)
001a95 940e 02d9 	CALL _SudutServo8
                 ;        }
                 ;        else if(notasi_gripper[1]==1)
001a97 c03c      	RJMP _0x220
                 _0x21F:
                +
001a98 91a0 0d4b+LDS R26 , _notasi_gripper + ( 1 )
                 	__GETB2MN _notasi_gripper,1
001a9a 30a1      	CPI  R26,LOW(0x1)
001a9b f4b9      	BRNE _0x221
                 ;        {
                 ;            LCD_TulisF(0,"GRIPPER:");
001a9c e0e0      	LDI  R30,LOW(0)
001a9d 93ea      	ST   -Y,R30
                +
001a9e e2ab     +LDI R26 , LOW ( 2 * _0x0 + ( 623 ) )
001a9f e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 623 ) )
001aa0 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 623 ) )
001aa1 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 623 ) )
                 	__POINTD2FN _0x0,623
001aa2 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"TUTUP");
001aa4 e0e1      	LDI  R30,LOW(1)
001aa5 93ea      	ST   -Y,R30
                +
001aa6 e3aa     +LDI R26 , LOW ( 2 * _0x0 + ( 638 ) )
001aa7 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 638 ) )
001aa8 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 638 ) )
001aa9 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 638 ) )
                 	__POINTD2FN _0x0,638
001aaa 940e 0471 	CALL _LCD_TulisF
                 ;            Capit1(120);
001aac e7a8      	LDI  R26,LOW(120)
001aad 940e 02d2 	CALL _SudutServo7
                 ;            Capit2(60);
001aaf e3ac      	LDI  R26,LOW(60)
001ab0 940e 02d9 	CALL _SudutServo8
                 ;        }
                 ;        else if(notasi_gripper[1]==2)
001ab2 c021      	RJMP _0x222
                 _0x221:
                +
001ab3 91a0 0d4b+LDS R26 , _notasi_gripper + ( 1 )
                 	__GETB2MN _notasi_gripper,1
001ab5 30a2      	CPI  R26,LOW(0x2)
001ab6 f4e9      	BRNE _0x223
                 ;        {
                 ;            notasi_gripper[2]=getchar();
001ab7 940e 0645 	CALL _getchar
                +
001ab9 93e0 0d4c+STS _notasi_gripper + ( 2 ) , R30
                 	__PUTB1MN _notasi_gripper,2
                 ;
                 ;            LCD_TulisF(0,"GRIPPER:");
001abb e0e0      	LDI  R30,LOW(0)
001abc 93ea      	ST   -Y,R30
                +
001abd e2ab     +LDI R26 , LOW ( 2 * _0x0 + ( 623 ) )
001abe e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 623 ) )
001abf e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 623 ) )
001ac0 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 623 ) )
                 	__POINTD2FN _0x0,623
001ac1 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"VARIATIF : ");
001ac3 e0e1      	LDI  R30,LOW(1)
001ac4 93ea      	ST   -Y,R30
                +
001ac5 e4a0     +LDI R26 , LOW ( 2 * _0x0 + ( 644 ) )
001ac6 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 644 ) )
001ac7 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 644 ) )
001ac8 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 644 ) )
                 	__POINTD2FN _0x0,644
001ac9 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_Angka3(notasi_gripper[2]);
                +
001acb 91a0 0d4c+LDS R26 , _notasi_gripper + ( 2 )
                 	__GETB2MN _notasi_gripper,2
001acd e0b0      	LDI  R27,0
001ace 940e 055f 	CALL _LCD_Angka3
                 ;            Capit1(notasi_gripper[2]);
                +
001ad0 91a0 0d4c+LDS R26 , _notasi_gripper + ( 2 )
                 	__GETB2MN _notasi_gripper,2
001ad2 940e 02d2 	CALL _SudutServo7
                 ;        }
                 ;    }
                 _0x223:
                 _0x222:
                 _0x220:
                 ;
                 ;    /////--LENGAN--/////
                 ;    if(notasi_gripper[0]==1)
                 _0x21E:
001ad4 91a0 0d4a 	LDS  R26,_notasi_gripper
001ad6 30a1      	CPI  R26,LOW(0x1)
001ad7 f011      	BREQ PC+3
001ad8 940c 1b27 	JMP _0x224
                 ;    {
                 ;        if(notasi_gripper[1]==0)
                +
001ada 91e0 0d4b+LDS R30 , _notasi_gripper + ( 1 )
                 	__GETB1MN _notasi_gripper,1
001adc 30e0      	CPI  R30,0
001add f491      	BRNE _0x225
                 ;        {
                 ;            LCD_TulisF(0,"LENGAN:");
001ade e0e0      	LDI  R30,LOW(0)
001adf 93ea      	ST   -Y,R30
                +
001ae0 e4ac     +LDI R26 , LOW ( 2 * _0x0 + ( 656 ) )
001ae1 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 656 ) )
001ae2 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 656 ) )
001ae3 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 656 ) )
                 	__POINTD2FN _0x0,656
001ae4 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"NAIK");
001ae6 e0e1      	LDI  R30,LOW(1)
001ae7 93ea      	ST   -Y,R30
                +
001ae8 e5a4     +LDI R26 , LOW ( 2 * _0x0 + ( 664 ) )
001ae9 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 664 ) )
001aea e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 664 ) )
001aeb e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 664 ) )
                 	__POINTD2FN _0x0,664
001aec 940e 0471 	CALL _LCD_TulisF
                 ;            Lengan(70);
001aee e4a6      	LDI  R26,LOW(70)
001aef c035      	RJMP _0x288
                 ;        }
                 ;        else if(notasi_gripper[1]==1)
                 _0x225:
                +
001af0 91a0 0d4b+LDS R26 , _notasi_gripper + ( 1 )
                 	__GETB2MN _notasi_gripper,1
001af2 30a1      	CPI  R26,LOW(0x1)
001af3 f491      	BRNE _0x227
                 ;        {
                 ;            LCD_TulisF(0,"LENGAN:");
001af4 e0e0      	LDI  R30,LOW(0)
001af5 93ea      	ST   -Y,R30
                +
001af6 e4ac     +LDI R26 , LOW ( 2 * _0x0 + ( 656 ) )
001af7 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 656 ) )
001af8 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 656 ) )
001af9 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 656 ) )
                 	__POINTD2FN _0x0,656
001afa 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"TURUN");
001afc e0e1      	LDI  R30,LOW(1)
001afd 93ea      	ST   -Y,R30
                +
001afe e5a9     +LDI R26 , LOW ( 2 * _0x0 + ( 669 ) )
001aff e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 669 ) )
001b00 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 669 ) )
001b01 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 669 ) )
                 	__POINTD2FN _0x0,669
001b02 940e 0471 	CALL _LCD_TulisF
                 ;            Lengan(160);
001b04 eaa0      	LDI  R26,LOW(160)
001b05 c01f      	RJMP _0x288
                 ;        }
                 ;        else if(notasi_gripper[1]==2)
                 _0x227:
                +
001b06 91a0 0d4b+LDS R26 , _notasi_gripper + ( 1 )
                 	__GETB2MN _notasi_gripper,1
001b08 30a2      	CPI  R26,LOW(0x2)
001b09 f4e9      	BRNE _0x229
                 ;        {
                 ;            notasi_gripper[2]=getchar();
001b0a 940e 0645 	CALL _getchar
                +
001b0c 93e0 0d4c+STS _notasi_gripper + ( 2 ) , R30
                 	__PUTB1MN _notasi_gripper,2
                 ;
                 ;            LCD_TulisF(0,"LENGAN:");
001b0e e0e0      	LDI  R30,LOW(0)
001b0f 93ea      	ST   -Y,R30
                +
001b10 e4ac     +LDI R26 , LOW ( 2 * _0x0 + ( 656 ) )
001b11 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 656 ) )
001b12 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 656 ) )
001b13 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 656 ) )
                 	__POINTD2FN _0x0,656
001b14 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"SUDUT : ");
001b16 e0e1      	LDI  R30,LOW(1)
001b17 93ea      	ST   -Y,R30
                +
001b18 e5af     +LDI R26 , LOW ( 2 * _0x0 + ( 675 ) )
001b19 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 675 ) )
001b1a e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 675 ) )
001b1b e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 675 ) )
                 	__POINTD2FN _0x0,675
001b1c 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_Angka3(notasi_gripper[2]);
                +
001b1e 91a0 0d4c+LDS R26 , _notasi_gripper + ( 2 )
                 	__GETB2MN _notasi_gripper,2
001b20 e0b0      	LDI  R27,0
001b21 940e 055f 	CALL _LCD_Angka3
                 ;            Lengan(notasi_gripper[2]);
                +
001b23 91a0 0d4c+LDS R26 , _notasi_gripper + ( 2 )
                 	__GETB2MN _notasi_gripper,2
                 _0x288:
001b25 940e 02cb 	CALL _SudutServo6
                 ;        }
                 ;    }
                 _0x229:
                 ;
                 ;    /////--POLA--/////
                 ;    if(notasi_gripper[0]==2)
                 _0x224:
001b27 91a0 0d4a 	LDS  R26,_notasi_gripper
001b29 30a2      	CPI  R26,LOW(0x2)
001b2a f011      	BREQ PC+3
001b2b 940c 1bcf 	JMP _0x22A
                 ;    {
                 ;        if(notasi_gripper[1]==0)
                +
001b2d 91e0 0d4b+LDS R30 , _notasi_gripper + ( 1 )
                 	__GETB1MN _notasi_gripper,1
001b2f 30e0      	CPI  R30,0
001b30 f011      	BREQ PC+3
001b31 940c 1b80 	JMP _0x22B
                 ;        {
                 ;            LCD_TulisF(0,"POLA:");
001b33 e0e0      	LDI  R30,LOW(0)
001b34 93ea      	ST   -Y,R30
                +
001b35 e6a8     +LDI R26 , LOW ( 2 * _0x0 + ( 684 ) )
001b36 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 684 ) )
001b37 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 684 ) )
001b38 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 684 ) )
                 	__POINTD2FN _0x0,684
001b39 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"ANGKAT");
001b3b e0e1      	LDI  R30,LOW(1)
001b3c 93ea      	ST   -Y,R30
                +
001b3d e6ae     +LDI R26 , LOW ( 2 * _0x0 + ( 690 ) )
001b3e e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 690 ) )
001b3f e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 690 ) )
001b40 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 690 ) )
                 	__POINTD2FN _0x0,690
001b41 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            delay_ms(1000);
001b43 eea8      	LDI  R26,LOW(1000)
001b44 e0b3      	LDI  R27,HIGH(1000)
001b45 940e 1f6f 	CALL _delay_ms
                 ;
                 ;            Lengan(160);         //1. Lengan Turun
001b47 eaa0      	LDI  R26,LOW(160)
001b48 940e 02cb 	CALL _SudutServo6
                 ;            Capit1(20);        //2. Buka Capit
001b4a e1a4      	LDI  R26,LOW(20)
001b4b 940e 02d2 	CALL _SudutServo7
                 ;            Capit2(160);
001b4d eaa0      	LDI  R26,LOW(160)
001b4e 940e 02d9 	CALL _SudutServo8
                 ;
                 ;            delay_ms(500);
001b50 efa4      	LDI  R26,LOW(500)
001b51 e0b1      	LDI  R27,HIGH(500)
001b52 940e 1f6f 	CALL _delay_ms
                 ;            SetDataMotorPID(1,1);delay_ms(500);SetDataMotorPID(0,0); //3. Maju
001b54 e0e1      	LDI  R30,LOW(1)
001b55 93ea      	ST   -Y,R30
001b56 e0a1      	LDI  R26,LOW(1)
001b57 940e 0326 	CALL _SetDataMotorPID
001b59 efa4      	LDI  R26,LOW(500)
001b5a e0b1      	LDI  R27,HIGH(500)
001b5b 940e 1f6f 	CALL _delay_ms
001b5d e0e0      	LDI  R30,LOW(0)
001b5e 93ea      	ST   -Y,R30
001b5f e0a0      	LDI  R26,LOW(0)
001b60 940e 0326 	CALL _SetDataMotorPID
                 ;            Capit1(120);        //4. Tutup Capit
001b62 e7a8      	LDI  R26,LOW(120)
001b63 940e 02d2 	CALL _SudutServo7
                 ;            Capit2(60);
001b65 e3ac      	LDI  R26,LOW(60)
001b66 940e 02d9 	CALL _SudutServo8
                 ;            delay_ms(500);
001b68 efa4      	LDI  R26,LOW(500)
001b69 e0b1      	LDI  R27,HIGH(500)
001b6a 940e 1f6f 	CALL _delay_ms
                 ;
                 ;            for(i=160;i>70;i--)
001b6c eae0      	LDI  R30,LOW(160)
001b6d 93e0 0d67 	STS  _i,R30
                 _0x22D:
001b6f 91a0 0d67 	LDS  R26,_i
001b71 34a7      	CPI  R26,LOW(0x47)
001b72 f060      	BRLO _0x22E
                 ;            {
                 ;                Lengan(i);
001b73 940e 02cb 	CALL _SudutServo6
                 ;                delay_ms(15);
001b75 e0af      	LDI  R26,LOW(15)
001b76 e0b0      	LDI  R27,0
001b77 940e 1f6f 	CALL _delay_ms
                 ;            }
001b79 91e0 0d67 	LDS  R30,_i
001b7b 50e1      	SUBI R30,LOW(1)
001b7c 93e0 0d67 	STS  _i,R30
001b7e cff0      	RJMP _0x22D
                 _0x22E:
                 ;            //Lengan(70);         //5. Lengan Angkat
                 ;            delay_ms(500);
001b7f c04b      	RJMP _0x289
                 ;        }
                 ;        else if(notasi_gripper[1]==1)
                 _0x22B:
                +
001b80 91a0 0d4b+LDS R26 , _notasi_gripper + ( 1 )
                 	__GETB2MN _notasi_gripper,1
001b82 30a1      	CPI  R26,LOW(0x1)
001b83 f011      	BREQ PC+3
001b84 940c 1bcf 	JMP _0x230
                 ;        {
                 ;            LCD_TulisF(0,"POLA:");
001b86 e0e0      	LDI  R30,LOW(0)
001b87 93ea      	ST   -Y,R30
                +
001b88 e6a8     +LDI R26 , LOW ( 2 * _0x0 + ( 684 ) )
001b89 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 684 ) )
001b8a e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 684 ) )
001b8b e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 684 ) )
                 	__POINTD2FN _0x0,684
001b8c 940e 0471 	CALL _LCD_TulisF
                 ;            LCD_TulisF(1,"TARUH");
001b8e e0e1      	LDI  R30,LOW(1)
001b8f 93ea      	ST   -Y,R30
                +
001b90 e7a5     +LDI R26 , LOW ( 2 * _0x0 + ( 697 ) )
001b91 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 697 ) )
001b92 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 697 ) )
001b93 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 697 ) )
                 	__POINTD2FN _0x0,697
001b94 940e 0471 	CALL _LCD_TulisF
                 ;
                 ;            //Lengan(2);         //1. Lengan Turun
                 ;            for(i=70;i<160;i++)
001b96 e4e6      	LDI  R30,LOW(70)
001b97 93e0 0d67 	STS  _i,R30
                 _0x232:
001b99 91a0 0d67 	LDS  R26,_i
001b9b 3aa0      	CPI  R26,LOW(0xA0)
001b9c f460      	BRSH _0x233
                 ;            {
                 ;                Lengan(i);
001b9d 940e 02cb 	CALL _SudutServo6
                 ;                delay_ms(15);
001b9f e0af      	LDI  R26,LOW(15)
001ba0 e0b0      	LDI  R27,0
001ba1 940e 1f6f 	CALL _delay_ms
                 ;            }
001ba3 91e0 0d67 	LDS  R30,_i
001ba5 5fef      	SUBI R30,-LOW(1)
001ba6 93e0 0d67 	STS  _i,R30
001ba8 cff0      	RJMP _0x232
                 _0x233:
                 ;            delay_ms(500);
001ba9 efa4      	LDI  R26,LOW(500)
001baa e0b1      	LDI  R27,HIGH(500)
001bab 940e 1f6f 	CALL _delay_ms
                 ;            Capit1(20);        //2. Buka Capit
001bad e1a4      	LDI  R26,LOW(20)
001bae 940e 02d2 	CALL _SudutServo7
                 ;            Capit2(160);
001bb0 eaa0      	LDI  R26,LOW(160)
001bb1 940e 02d9 	CALL _SudutServo8
                 ;            delay_ms(500);
001bb3 efa4      	LDI  R26,LOW(500)
001bb4 e0b1      	LDI  R27,HIGH(500)
001bb5 940e 1f6f 	CALL _delay_ms
                 ;            SetDataMotorPID(-1,-1);delay_ms(500);SetDataMotorPID(0,0); //3. Mundur
001bb7 efef      	LDI  R30,LOW(255)
001bb8 93ea      	ST   -Y,R30
001bb9 efaf      	LDI  R26,LOW(255)
001bba 940e 0326 	CALL _SetDataMotorPID
001bbc efa4      	LDI  R26,LOW(500)
001bbd e0b1      	LDI  R27,HIGH(500)
001bbe 940e 1f6f 	CALL _delay_ms
001bc0 e0e0      	LDI  R30,LOW(0)
001bc1 93ea      	ST   -Y,R30
001bc2 e0a0      	LDI  R26,LOW(0)
001bc3 940e 0326 	CALL _SetDataMotorPID
                 ;            Capit1(120);        //4. Tutup Capit
001bc5 e7a8      	LDI  R26,LOW(120)
001bc6 940e 02d2 	CALL _SudutServo7
                 ;            Capit2(60);
001bc8 e3ac      	LDI  R26,LOW(60)
001bc9 940e 02d9 	CALL _SudutServo8
                 ;            delay_ms(500);
                 _0x289:
001bcb efa4      	LDI  R26,LOW(500)
001bcc e0b1      	LDI  R27,HIGH(500)
001bcd 940e 1f6f 	CALL _delay_ms
                 ;        }
                 ;    }
                 _0x230:
                 ;}
                 _0x22A:
001bcf 9508      	RET
                 ;
                 ;//  --------------  DEKLARASI VARIABEL GLOBAL --------------------------
                 ;
                 ;void main(void)
                 ; 0000 0019 {
                 _main:
                 ; 0000 001A     delay_ms(1000);
001bd0 eea8      	LDI  R26,LOW(1000)
001bd1 e0b3      	LDI  R27,HIGH(1000)
001bd2 940e 1f6f 	CALL _delay_ms
                 ; 0000 001B 
                 ; 0000 001C     SystemInit();
001bd4 940e 0920 	CALL _SystemInit
                 ; 0000 001D     SetDataMotorPID(0,0);
001bd6 e0e0      	LDI  R30,LOW(0)
001bd7 93ea      	ST   -Y,R30
001bd8 e0a0      	LDI  R26,LOW(0)
001bd9 940e 0326 	CALL _SetDataMotorPID
                 ; 0000 001E 
                 ; 0000 001F     Greeting();
001bdb 940e 0f3e 	CALL _Greeting
                 ; 0000 0020 
                 ; 0000 0021     while(1)
                 _0x234:
                 ; 0000 0022     {
                 ; 0000 0023         LCD_Hapus();
001bdd 940e 047c 	CALL _LCD_Hapus
                 ; 0000 0024         LCD_TulisF(0,"StandBy..........");
001bdf e0e0      	LDI  R30,LOW(0)
001be0 93ea      	ST   -Y,R30
                +
001be1 e7ab     +LDI R26 , LOW ( 2 * _0x0 + ( 703 ) )
001be2 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 703 ) )
001be3 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 703 ) )
001be4 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 703 ) )
                 	__POINTD2FN _0x0,703
001be5 940e 0471 	CALL _LCD_TulisF
                 ; 0000 0025         delay_ms(500);
001be7 efa4      	LDI  R26,LOW(500)
001be8 e0b1      	LDI  R27,HIGH(500)
001be9 940e 1f6f 	CALL _delay_ms
                 ; 0000 0026 
                 ; 0000 0027         while(!PB1)
001beb 999b      	SBIC 0x13,3
001bec c099      	RJMP _0x239
                 ; 0000 0028         {
                 ; 0000 0029             delay_ms(100);
001bed e6a4      	LDI  R26,LOW(100)
001bee e0b0      	LDI  R27,0
001bef 940e 1f6f 	CALL _delay_ms
                 ; 0000 002A             while(!PB1){}
                 _0x23A:
001bf1 9b9b      	SBIS 0x13,3
001bf2 cffe      	RJMP _0x23A
                 ; 0000 002B 
                 ; 0000 002C             while(1)
                 _0x23D:
                 ; 0000 002D             {
                 ; 0000 002E                 LCD_Hapus();
001bf3 940e 047c 	CALL _LCD_Hapus
                 ; 0000 002F                 LCD_TulisF(0,"GOOOOOO.........");
001bf5 e0e0      	LDI  R30,LOW(0)
001bf6 93ea      	ST   -Y,R30
                +
001bf7 e8ad     +LDI R26 , LOW ( 2 * _0x0 + ( 721 ) )
001bf8 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 721 ) )
001bf9 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 721 ) )
001bfa e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 721 ) )
                 	__POINTD2FN _0x0,721
001bfb 940e 0471 	CALL _LCD_TulisF
                 ; 0000 0030 
                 ; 0000 0031                 while(getchar()==0xFF)
                 _0x240:
001bfd 940e 0645 	CALL _getchar
001bff 3fef      	CPI  R30,LOW(0xFF)
001c00 f011      	BREQ PC+3
001c01 940c 1c85 	JMP _0x242
                 ; 0000 0032                 {
                 ; 0000 0033                     flag_aksi=getchar();
001c03 940e 0645 	CALL _getchar
001c05 93e0 0d68 	STS  _flag_aksi,R30
                 ; 0000 0034                     Buzzer(C6,20);
001c07 e1e6      	LDI  R30,LOW(1046)
001c08 e0f4      	LDI  R31,HIGH(1046)
001c09 93fa      	ST   -Y,R31
001c0a 93ea      	ST   -Y,R30
001c0b e1a4      	LDI  R26,LOW(20)
001c0c e0b0      	LDI  R27,0
001c0d 940e 060c 	CALL _Buzzer
                 ; 0000 0035 
                 ; 0000 0036                     ///////////==BEBAS==///////////
                 ; 0000 0037                     if(flag_aksi==0x00)
001c0f 91e0 0d68 	LDS  R30,_flag_aksi
001c11 30e0      	CPI  R30,0
001c12 f411      	BRNE _0x243
                 ; 0000 0038                     {
                 ; 0000 0039                         Bebas();
001c13 940e 1092 	CALL _Bebas
                 ; 0000 003A                     }
                 ; 0000 003B 
                 ; 0000 003C                     ///////////==TES GARIS==///////////
                 ; 0000 003D                     if(flag_aksi==0x01)
                 _0x243:
001c15 91a0 0d68 	LDS  R26,_flag_aksi
001c17 30a1      	CPI  R26,LOW(0x1)
001c18 f011      	BREQ PC+3
001c19 940c 1c66 	JMP _0x244
                 ; 0000 003E                     {
                 ; 0000 003F                         notasi_tes[0]=getchar();
001c1b 940e 0645 	CALL _getchar
001c1d 93e0 0d52 	STS  _notasi_tes,R30
                 ; 0000 0040                         if(notasi_tes[0]==0x00)
001c1f 30e0      	CPI  R30,0
001c20 f451      	BRNE _0x245
                 ; 0000 0041                         {
                 ; 0000 0042                             ScanPerempatan(150,pBacaSensorR,pBacaSensorR);
001c21 e9e6      	LDI  R30,LOW(150)
001c22 e0f0      	LDI  R31,HIGH(150)
001c23 93fa      	ST   -Y,R31
001c24 93ea      	ST   -Y,R30
001c25 e4e0      	LDI  R30,LOW(64)
001c26 93ea      	ST   -Y,R30
001c27 e4a0      	LDI  R26,LOW(64)
001c28 940e 0aa2 	CALL _ScanPerempatan
                 ; 0000 0043                         }
                 ; 0000 0044                         else if(notasi_tes[0]==0x01)
001c2a c03b      	RJMP _0x246
                 _0x245:
001c2b 91a0 0d52 	LDS  R26,_notasi_tes
001c2d 30a1      	CPI  R26,LOW(0x1)
001c2e f451      	BRNE _0x247
                 ; 0000 0045                         {
                 ; 0000 0046                             Scan3Kanan(150,pBacaSensorR,pBacaSensorR);
001c2f e9e6      	LDI  R30,LOW(150)
001c30 e0f0      	LDI  R31,HIGH(150)
001c31 93fa      	ST   -Y,R31
001c32 93ea      	ST   -Y,R30
001c33 e4e0      	LDI  R30,LOW(64)
001c34 93ea      	ST   -Y,R30
001c35 e4a0      	LDI  R26,LOW(64)
001c36 940e 0b01 	CALL _Scan3Kanan
                 ; 0000 0047                         }
                 ; 0000 0048                         else if(notasi_tes[0]==0x02)
001c38 c02d      	RJMP _0x248
                 _0x247:
001c39 91a0 0d52 	LDS  R26,_notasi_tes
001c3b 30a2      	CPI  R26,LOW(0x2)
001c3c f451      	BRNE _0x249
                 ; 0000 0049                         {
                 ; 0000 004A                             Scan3Kiri(150,pBacaSensorR,pBacaSensorR);
001c3d e9e6      	LDI  R30,LOW(150)
001c3e e0f0      	LDI  R31,HIGH(150)
001c3f 93fa      	ST   -Y,R31
001c40 93ea      	ST   -Y,R30
001c41 e4e0      	LDI  R30,LOW(64)
001c42 93ea      	ST   -Y,R30
001c43 e4a0      	LDI  R26,LOW(64)
001c44 940e 0b5e 	CALL _Scan3Kiri
                 ; 0000 004B                         }
                 ; 0000 004C                         else if(notasi_tes[0]==0x03)
001c46 c01f      	RJMP _0x24A
                 _0x249:
001c47 91a0 0d52 	LDS  R26,_notasi_tes
001c49 30a3      	CPI  R26,LOW(0x3)
001c4a f461      	BRNE _0x24B
                 ; 0000 004D                         {
                 ; 0000 004E                             BelKaPWM(150,-150,pBacaSensorR);
001c4b e9e6      	LDI  R30,LOW(150)
001c4c e0f0      	LDI  R31,HIGH(150)
001c4d 93fa      	ST   -Y,R31
001c4e 93ea      	ST   -Y,R30
001c4f e6ea      	LDI  R30,LOW(65386)
001c50 efff      	LDI  R31,HIGH(65386)
001c51 93fa      	ST   -Y,R31
001c52 93ea      	ST   -Y,R30
001c53 e4a0      	LDI  R26,LOW(64)
001c54 940e 0bbb 	CALL _BelKaPWM
                 ; 0000 004F                         }
                 ; 0000 0050                         else if(notasi_tes[0]==0x04)
001c56 c00f      	RJMP _0x24C
                 _0x24B:
001c57 91a0 0d52 	LDS  R26,_notasi_tes
001c59 30a4      	CPI  R26,LOW(0x4)
001c5a f459      	BRNE _0x24D
                 ; 0000 0051                         {
                 ; 0000 0052                             BelKiPWM(-150,150,pBacaSensorR);
001c5b e6ea      	LDI  R30,LOW(65386)
001c5c efff      	LDI  R31,HIGH(65386)
001c5d 93fa      	ST   -Y,R31
001c5e 93ea      	ST   -Y,R30
001c5f e9e6      	LDI  R30,LOW(150)
001c60 e0f0      	LDI  R31,HIGH(150)
001c61 93fa      	ST   -Y,R31
001c62 93ea      	ST   -Y,R30
001c63 e4a0      	LDI  R26,LOW(64)
001c64 940e 0be5 	CALL _BelKiPWM
                 ; 0000 0053                         }
                 ; 0000 0054 
                 ; 0000 0055                     }
                 _0x24D:
                 _0x24C:
                 _0x24A:
                 _0x248:
                 _0x246:
                 ; 0000 0056 
                 ; 0000 0057                     ///////////==Dinding==///////////
                 ; 0000 0058                     if(flag_aksi==0x04)
                 _0x244:
001c66 91a0 0d68 	LDS  R26,_flag_aksi
001c68 30a4      	CPI  R26,LOW(0x4)
001c69 f409      	BRNE _0x24E
                 ; 0000 0059                     {
                 ; 0000 005A                         Dinding();
001c6a d948      	RCALL _Dinding
                 ; 0000 005B                     }
                 ; 0000 005C 
                 ; 0000 005D                     ///////////==GARIS==///////////
                 ; 0000 005E                     if(flag_aksi==0x05)
                 _0x24E:
001c6b 91a0 0d68 	LDS  R26,_flag_aksi
001c6d 30a5      	CPI  R26,LOW(0x5)
001c6e f409      	BRNE _0x24F
                 ; 0000 005F                     {
                 ; 0000 0060                         Garis();
001c6f da1e      	RCALL _Garis
                 ; 0000 0061                     }
                 ; 0000 0062 
                 ; 0000 0063                     ///////////==GRIPPER==///////////
                 ; 0000 0064                     if(flag_aksi==0x06)
                 _0x24F:
001c70 91a0 0d68 	LDS  R26,_flag_aksi
001c72 30a6      	CPI  R26,LOW(0x6)
001c73 f409      	BRNE _0x250
                 ; 0000 0065                     {
                 ; 0000 0066                         Gripper();
001c74 ddf8      	RCALL _Gripper
                 ; 0000 0067                     }
                 ; 0000 0068 
                 ; 0000 0069                     ///////////==BUZZER==///////////
                 ; 0000 006A                     if(flag_aksi==0x07)
                 _0x250:
001c75 91a0 0d68 	LDS  R26,_flag_aksi
001c77 30a7      	CPI  R26,LOW(0x7)
001c78 f409      	BRNE _0x251
                 ; 0000 006B                     {
                 ; 0000 006C                         Alarm();
001c79 dc9e      	RCALL _Alarm
                 ; 0000 006D                     }
                 ; 0000 006E 
                 ; 0000 006F                     ////////////==LCD==////////////
                 ; 0000 0070                     if(flag_aksi==0x08)
                 _0x251:
001c7a 91a0 0d68 	LDS  R26,_flag_aksi
001c7c 30a8      	CPI  R26,LOW(0x8)
001c7d f409      	BRNE _0x252
                 ; 0000 0071                     {
                 ; 0000 0072                         Lcd();
001c7e dd87      	RCALL _Lcd
                 ; 0000 0073                     }
                 ; 0000 0074 
                 ; 0000 0075                     ///////////==DELAY==///////////
                 ; 0000 0076                     if(flag_aksi==0x09)
                 _0x252:
001c7f 91a0 0d68 	LDS  R26,_flag_aksi
001c81 30a9      	CPI  R26,LOW(0x9)
001c82 f409      	BRNE _0x253
                 ; 0000 0077                     {
                 ; 0000 0078                         Tunda();
001c83 ddbe      	RCALL _Tunda
                 ; 0000 0079                     }
                 ; 0000 007A                 }
                 _0x253:
001c84 cf78      	RJMP _0x240
                 _0x242:
                 ; 0000 007B             }
001c85 cf6d      	RJMP _0x23D
                 ; 0000 007C         }
                 _0x239:
                 ; 0000 007D         while(!PB2)
                 _0x254:
001c86 999a      	SBIC 0x13,2
001c87 c006      	RJMP _0x256
                 ; 0000 007E         {
                 ; 0000 007F             KalibrasiHitamPutihEx(0,pKalibrasiHPR);
001c88 e0e0      	LDI  R30,LOW(0)
001c89 93ea      	ST   -Y,R30
001c8a eca0      	LDI  R26,LOW(192)
001c8b 940e 0720 	CALL _KalibrasiHitamPutihEx
                 ; 0000 0080         }
001c8d cff8      	RJMP _0x254
                 _0x256:
                 ; 0000 0081         while(!PB3)
                 _0x257:
001c8e 9999      	SBIC 0x13,1
001c8f c0a3      	RJMP _0x259
                 ; 0000 0082         {
                 ; 0000 0083             LCD_Hapus();
001c90 940e 047c 	CALL _LCD_Hapus
                 ; 0000 0084             LCD_TulisF(0,"SET PID");
001c92 e0e0      	LDI  R30,LOW(0)
001c93 93ea      	ST   -Y,R30
                +
001c94 e9ae     +LDI R26 , LOW ( 2 * _0x0 + ( 738 ) )
001c95 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 738 ) )
001c96 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 738 ) )
001c97 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD2FN _0x0,738
001c98 940e 0471 	CALL _LCD_TulisF
                 ; 0000 0085             LCD_TulisF(1,"1: KP   2: KD");
001c9a e0e1      	LDI  R30,LOW(1)
001c9b 93ea      	ST   -Y,R30
                +
001c9c eaa6     +LDI R26 , LOW ( 2 * _0x0 + ( 746 ) )
001c9d e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 746 ) )
001c9e e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 746 ) )
001c9f e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 746 ) )
                 	__POINTD2FN _0x0,746
001ca0 940e 0471 	CALL _LCD_TulisF
                 ; 0000 0086             delay_ms(500);
001ca2 efa4      	LDI  R26,LOW(500)
001ca3 e0b1      	LDI  R27,HIGH(500)
001ca4 940e 1f6f 	CALL _delay_ms
                 ; 0000 0087 
                 ; 0000 0088             while(1)
                 _0x25A:
                 ; 0000 0089             {
                 ; 0000 008A                 if(!PB1)
001ca6 999b      	SBIC 0x13,3
001ca7 c03f      	RJMP _0x25D
                 ; 0000 008B                 {
                 ; 0000 008C                     while(PB4)
                 _0x25E:
001ca8 9b98      	SBIS 0x13,0
001ca9 c038      	RJMP _0x260
                 ; 0000 008D                     {
                 ; 0000 008E                         LCD_Hapus();
001caa 940e 047c 	CALL _LCD_Hapus
                 ; 0000 008F                         LCD_TulisF(0,"KP");
001cac e0e0      	LDI  R30,LOW(0)
001cad 93ea      	ST   -Y,R30
                +
001cae eba4     +LDI R26 , LOW ( 2 * _0x0 + ( 760 ) )
001caf e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 760 ) )
001cb0 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 760 ) )
001cb1 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 760 ) )
                 	__POINTD2FN _0x0,760
001cb2 940e 0471 	CALL _LCD_TulisF
                 ; 0000 0090                         LCD_GotoXY(0,1);    LCD_Angka3(SetKP);
001cb4 e0e0      	LDI  R30,LOW(0)
001cb5 93ea      	ST   -Y,R30
001cb6 e0a1      	LDI  R26,LOW(1)
001cb7 940e 0449 	CALL _LCD_GotoXY
001cb9 e0a0      	LDI  R26,LOW(_SetKP)
001cba e0b0      	LDI  R27,HIGH(_SetKP)
001cbb 940e 221d 	CALL __EEPROMRDW
001cbd 01df      	MOVW R26,R30
001cbe 940e 055f 	CALL _LCD_Angka3
                 ; 0000 0091                         delay_ms(100);
001cc0 e6a4      	LDI  R26,LOW(100)
001cc1 e0b0      	LDI  R27,0
001cc2 940e 1f6f 	CALL _delay_ms
                 ; 0000 0092 
                 ; 0000 0093                         if(PB1==0)
001cc4 999b      	SBIC 0x13,3
001cc5 c00d      	RJMP _0x261
                 ; 0000 0094                         {
                 ; 0000 0095                             delay_ms(100);
001cc6 e6a4      	LDI  R26,LOW(100)
001cc7 e0b0      	LDI  R27,0
001cc8 940e 1f6f 	CALL _delay_ms
                 ; 0000 0096                             SetKP++;
001cca e0a0      	LDI  R26,LOW(_SetKP)
001ccb e0b0      	LDI  R27,HIGH(_SetKP)
001ccc 940e 221d 	CALL __EEPROMRDW
001cce 9631      	ADIW R30,1
001ccf 940e 222d 	CALL __EEPROMWRW
001cd1 9731      	SBIW R30,1
                 ; 0000 0097                         }
                 ; 0000 0098                         else if (PB2==0)
001cd2 c00e      	RJMP _0x262
                 _0x261:
001cd3 999a      	SBIC 0x13,2
001cd4 c00c      	RJMP _0x263
                 ; 0000 0099                         {
                 ; 0000 009A                             delay_ms(100);
001cd5 e6a4      	LDI  R26,LOW(100)
001cd6 e0b0      	LDI  R27,0
001cd7 940e 1f6f 	CALL _delay_ms
                 ; 0000 009B                             SetKP--;
001cd9 e0a0      	LDI  R26,LOW(_SetKP)
001cda e0b0      	LDI  R27,HIGH(_SetKP)
001cdb 940e 221d 	CALL __EEPROMRDW
001cdd 9731      	SBIW R30,1
001cde 940e 222d 	CALL __EEPROMWRW
001ce0 9631      	ADIW R30,1
                 ; 0000 009C                         }
                 ; 0000 009D                     }
                 _0x263:
                 _0x262:
001ce1 cfc6      	RJMP _0x25E
                 _0x260:
                 ; 0000 009E 
                 ; 0000 009F                     delay_ms(1000);
001ce2 eea8      	LDI  R26,LOW(1000)
001ce3 e0b3      	LDI  R27,HIGH(1000)
001ce4 940e 1f6f 	CALL _delay_ms
                 ; 0000 00A0                 }
                 ; 0000 00A1                 else if (!PB2)
001ce6 c04a      	RJMP _0x264
                 _0x25D:
001ce7 999a      	SBIC 0x13,2
001ce8 c03f      	RJMP _0x265
                 ; 0000 00A2                 {
                 ; 0000 00A3                     while(PB4)
                 _0x266:
001ce9 9b98      	SBIS 0x13,0
001cea c038      	RJMP _0x268
                 ; 0000 00A4                     {
                 ; 0000 00A5                         LCD_Hapus();
001ceb 940e 047c 	CALL _LCD_Hapus
                 ; 0000 00A6                         LCD_TulisF(0,"KD");
001ced e0e0      	LDI  R30,LOW(0)
001cee 93ea      	ST   -Y,R30
                +
001cef eba1     +LDI R26 , LOW ( 2 * _0x0 + ( 757 ) )
001cf0 e0b4     +LDI R27 , HIGH ( 2 * _0x0 + ( 757 ) )
001cf1 e080     +LDI R24 , BYTE3 ( 2 * _0x0 + ( 757 ) )
001cf2 e090     +LDI R25 , BYTE4 ( 2 * _0x0 + ( 757 ) )
                 	__POINTD2FN _0x0,757
001cf3 940e 0471 	CALL _LCD_TulisF
                 ; 0000 00A7                         LCD_GotoXY(0,1);    LCD_Angka3(SetKD);
001cf5 e0e0      	LDI  R30,LOW(0)
001cf6 93ea      	ST   -Y,R30
001cf7 e0a1      	LDI  R26,LOW(1)
001cf8 940e 0449 	CALL _LCD_GotoXY
001cfa e0a2      	LDI  R26,LOW(_SetKD)
001cfb e0b0      	LDI  R27,HIGH(_SetKD)
001cfc 940e 221d 	CALL __EEPROMRDW
001cfe 01df      	MOVW R26,R30
001cff 940e 055f 	CALL _LCD_Angka3
                 ; 0000 00A8                         delay_ms(100);
001d01 e6a4      	LDI  R26,LOW(100)
001d02 e0b0      	LDI  R27,0
001d03 940e 1f6f 	CALL _delay_ms
                 ; 0000 00A9 
                 ; 0000 00AA                         if(PB1==0)
001d05 999b      	SBIC 0x13,3
001d06 c00d      	RJMP _0x269
                 ; 0000 00AB                         {
                 ; 0000 00AC                             delay_ms(100);
001d07 e6a4      	LDI  R26,LOW(100)
001d08 e0b0      	LDI  R27,0
001d09 940e 1f6f 	CALL _delay_ms
                 ; 0000 00AD                             SetKD++;
001d0b e0a2      	LDI  R26,LOW(_SetKD)
001d0c e0b0      	LDI  R27,HIGH(_SetKD)
001d0d 940e 221d 	CALL __EEPROMRDW
001d0f 9631      	ADIW R30,1
001d10 940e 222d 	CALL __EEPROMWRW
001d12 9731      	SBIW R30,1
                 ; 0000 00AE                         }
                 ; 0000 00AF                         else if (PB2==0)
001d13 c00e      	RJMP _0x26A
                 _0x269:
001d14 999a      	SBIC 0x13,2
001d15 c00c      	RJMP _0x26B
                 ; 0000 00B0                         {
                 ; 0000 00B1                             delay_ms(100);
001d16 e6a4      	LDI  R26,LOW(100)
001d17 e0b0      	LDI  R27,0
001d18 940e 1f6f 	CALL _delay_ms
                 ; 0000 00B2                             SetKD--;
001d1a e0a2      	LDI  R26,LOW(_SetKD)
001d1b e0b0      	LDI  R27,HIGH(_SetKD)
001d1c 940e 221d 	CALL __EEPROMRDW
001d1e 9731      	SBIW R30,1
001d1f 940e 222d 	CALL __EEPROMWRW
001d21 9631      	ADIW R30,1
                 ; 0000 00B3                         }
                 ; 0000 00B4                     }
                 _0x26B:
                 _0x26A:
001d22 cfc6      	RJMP _0x266
                 _0x268:
                 ; 0000 00B5 
                 ; 0000 00B6                     delay_ms(1000);
001d23 eea8      	LDI  R26,LOW(1000)
001d24 e0b3      	LDI  R27,HIGH(1000)
001d25 940e 1f6f 	CALL _delay_ms
                 ; 0000 00B7                 }
                 ; 0000 00B8                 else if (!PB4){LCD_Hapus();delay_ms(1000);break;}
001d27 c009      	RJMP _0x26C
                 _0x265:
001d28 9998      	SBIC 0x13,0
001d29 c007      	RJMP _0x26D
001d2a 940e 047c 	CALL _LCD_Hapus
001d2c eea8      	LDI  R26,LOW(1000)
001d2d e0b3      	LDI  R27,HIGH(1000)
001d2e 940e 1f6f 	CALL _delay_ms
001d30 c001      	RJMP _0x25C
                 ; 0000 00B9             }
                 _0x26D:
                 _0x26C:
                 _0x264:
001d31 cf74      	RJMP _0x25A
                 _0x25C:
                 ; 0000 00BA         }
001d32 cf5b      	RJMP _0x257
                 _0x259:
                 ; 0000 00BB         while(!PB4)
                 _0x26E:
001d33 9b98      	SBIS 0x13,0
                 ; 0000 00BC         {
                 ; 0000 00BD             /*
                 ; 0000 00BE             int16_t direction,speed;
                 ; 0000 00BF 
                 ; 0000 00C0             delay_ms(100);
                 ; 0000 00C1             while(!PBEx4);
                 ; 0000 00C2 
                 ; 0000 00C3             LCD_Hapus();
                 ; 0000 00C4             LCD_TulisF(0,"REMOT");
                 ; 0000 00C5             delay_ms(500);
                 ; 0000 00C6 
                 ; 0000 00C7             while(PBEx4)
                 ; 0000 00C8             {
                 ; 0000 00C9                 while(getchar()==0x55)
                 ; 0000 00CA                 {
                 ; 0000 00CB                     speed=getchar()*40;
                 ; 0000 00CC                     direction=getchar();
                 ; 0000 00CD 
                 ; 0000 00CE                     LCD_GotoXY(0,0);
                 ; 0000 00CF                     LCD_Angka3(speed/40);
                 ; 0000 00D0                     LCD_Angka3(direction);
                 ; 0000 00D1 
                 ; 0000 00D2                     if(direction>=0&&direction<=5||direction>31&&direction<=35)
                 ; 0000 00D3                     {
                 ; 0000 00D4                         SetDataMotorPWM(speed,speed);
                 ; 0000 00D5                     }
                 ; 0000 00D6                     else if(direction>5&&direction<=14)
                 ; 0000 00D7                     {
                 ; 0000 00D8                         SetDataMotorPWM(-speed,speed);
                 ; 0000 00D9                     }
                 ; 0000 00DA                     else if(direction>14&&direction<=23)
                 ; 0000 00DB                     {
                 ; 0000 00DC                         SetDataMotorPWM(-speed,-speed);
                 ; 0000 00DD                     }
                 ; 0000 00DE                     else if(direction>23&&direction<=31)
                 ; 0000 00DF                     {
                 ; 0000 00E0                         SetDataMotorPWM(speed,-speed);
                 ; 0000 00E1                     }
                 ; 0000 00E2                     else
                 ; 0000 00E3                     {
                 ; 0000 00E4                         SetDataMotorPWM(0,0);
                 ; 0000 00E5                     }
                 ; 0000 00E6                 }
                 ; 0000 00E7             }
                 ; 0000 00E8 
                 ; 0000 00E9             SetDataMotorPWM(0,0);
                 ; 0000 00EA             delay_ms(1000);
                 ; 0000 00EB             */
                 ; 0000 00EC         }
001d34 cffe      	RJMP _0x26E
                 ; 0000 00ED     }
001d35 cea7      	RJMP _0x234
                 ; 0000 00EE }
                 _0x271:
001d36 cfff      	RJMP _0x271
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
001d37 93ba      	ST   -Y,R27
001d38 93aa      	ST   -Y,R26
001d39 931a      	ST   -Y,R17
001d3a 930a      	ST   -Y,R16
001d3b 81aa      	LDD  R26,Y+2
001d3c 81bb      	LDD  R27,Y+2+1
001d3d 9612      	ADIW R26,2
001d3e 940e 21d5 	CALL __GETW1P
001d40 9730      	SBIW R30,0
001d41 f159      	BREQ _0x2000010
001d42 81aa      	LDD  R26,Y+2
001d43 81bb      	LDD  R27,Y+2+1
001d44 9614      	ADIW R26,4
001d45 940e 21d5 	CALL __GETW1P
001d47 018f      	MOVW R16,R30
001d48 9730      	SBIW R30,0
001d49 f061      	BREQ _0x2000012
                +
001d4a 3002     +CPI R16 , LOW ( 2 )
001d4b e0e0     +LDI R30 , HIGH ( 2 )
001d4c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
001d4d f0f0      	BRLO _0x2000013
001d4e 01f8      	MOVW R30,R16
001d4f 9731      	SBIW R30,1
001d50 018f      	MOVW R16,R30
                +
001d51 81aa     +LDD R26 , Y + 2
001d52 81bb     +LDD R27 , Y + 2 + 1
001d53 9614     +ADIW R26 , 4
001d54 93ed     +ST X + , R30
001d55 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
001d56 81aa      	LDD  R26,Y+2
001d57 81bb      	LDD  R27,Y+2+1
001d58 9612      	ADIW R26,2
001d59 91ed      	LD   R30,X+
001d5a 91fd      	LD   R31,X+
001d5b 9631      	ADIW R30,1
001d5c 93fe      	ST   -X,R31
001d5d 93ee      	ST   -X,R30
001d5e 9731      	SBIW R30,1
001d5f 81ac      	LDD  R26,Y+4
001d60 83a0      	STD  Z+0,R26
001d61 81aa      	LDD  R26,Y+2
001d62 81bb      	LDD  R27,Y+2+1
001d63 940e 21d5 	CALL __GETW1P
001d65 23ff      	TST  R31
001d66 f02a      	BRMI _0x2000014
001d67 91ed      	LD   R30,X+
001d68 91fd      	LD   R31,X+
001d69 9631      	ADIW R30,1
001d6a 93fe      	ST   -X,R31
001d6b 93ee      	ST   -X,R30
                 _0x2000014:
                 _0x2000013:
001d6c c006      	RJMP _0x2000015
                 _0x2000010:
001d6d 81aa      	LDD  R26,Y+2
001d6e 81bb      	LDD  R27,Y+2+1
001d6f efef      	LDI  R30,LOW(65535)
001d70 efff      	LDI  R31,HIGH(65535)
001d71 93ed      	ST   X+,R30
001d72 93fc      	ST   X,R31
                 _0x2000015:
001d73 8119      	LDD  R17,Y+1
001d74 8108      	LDD  R16,Y+0
001d75 9625      	ADIW R28,5
001d76 9508      	RET
                 __print_G100:
001d77 93ba      	ST   -Y,R27
001d78 93aa      	ST   -Y,R26
001d79 9728      	SBIW R28,8
001d7a 940e 2246 	CALL __SAVELOCR6
001d7c e010      	LDI  R17,0
001d7d 85ae      	LDD  R26,Y+14
001d7e 85bf      	LDD  R27,Y+14+1
001d7f e0e0      	LDI  R30,LOW(0)
001d80 e0f0      	LDI  R31,HIGH(0)
001d81 93ed      	ST   X+,R30
001d82 93fc      	ST   X,R31
                 _0x2000016:
001d83 01de      	MOVW R26,R28
001d84 9654      	ADIW R26,20
001d85 940e 21df 	CALL __GETD1P_INC
                +
001d87 5fef     +SUBI R30 , LOW ( - 1 )
001d88 4fff     +SBCI R31 , HIGH ( - 1 )
001d89 4f6f     +SBCI R22 , BYTE3 ( - 1 )
001d8a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
001d8b 940e 21e4 	CALL __PUTDP1_DEC
                +
001d8d 50e1     +SUBI R30 , LOW ( 1 )
001d8e 40f0     +SBCI R31 , HIGH ( 1 )
001d8f 4060     +SBCI R22 , BYTE3 ( 1 )
001d90 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
                +
001d91 bf6b     +OUT RAMPZ , R22
001d92 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
001d93 2f2e      	MOV  R18,R30
001d94 30e0      	CPI  R30,0
001d95 f411      	BRNE PC+3
001d96 940c 1f0f 	JMP _0x2000018
001d98 2fe1      	MOV  R30,R17
001d99 30e0      	CPI  R30,0
001d9a f459      	BRNE _0x200001C
001d9b 3225      	CPI  R18,37
001d9c f411      	BRNE _0x200001D
001d9d e011      	LDI  R17,LOW(1)
001d9e c006      	RJMP _0x200001E
                 _0x200001D:
001d9f 932a      	ST   -Y,R18
001da0 85af      	LDD  R26,Y+15
001da1 89b8      	LDD  R27,Y+15+1
001da2 89e9      	LDD  R30,Y+17
001da3 89fa      	LDD  R31,Y+17+1
001da4 9509      	ICALL
                 _0x200001E:
001da5 c168      	RJMP _0x200001B
                 _0x200001C:
001da6 30e1      	CPI  R30,LOW(0x1)
001da7 f4c9      	BRNE _0x200001F
001da8 3225      	CPI  R18,37
001da9 f439      	BRNE _0x2000020
001daa 932a      	ST   -Y,R18
001dab 85af      	LDD  R26,Y+15
001dac 89b8      	LDD  R27,Y+15+1
001dad 89e9      	LDD  R30,Y+17
001dae 89fa      	LDD  R31,Y+17+1
001daf 9509      	ICALL
001db0 c15c      	RJMP _0x20000C9
                 _0x2000020:
001db1 e012      	LDI  R17,LOW(2)
001db2 e040      	LDI  R20,LOW(0)
001db3 e000      	LDI  R16,LOW(0)
001db4 322d      	CPI  R18,45
001db5 f411      	BRNE _0x2000021
001db6 e001      	LDI  R16,LOW(1)
001db7 c156      	RJMP _0x200001B
                 _0x2000021:
001db8 322b      	CPI  R18,43
001db9 f411      	BRNE _0x2000022
001dba e24b      	LDI  R20,LOW(43)
001dbb c152      	RJMP _0x200001B
                 _0x2000022:
001dbc 3220      	CPI  R18,32
001dbd f411      	BRNE _0x2000023
001dbe e240      	LDI  R20,LOW(32)
001dbf c14e      	RJMP _0x200001B
                 _0x2000023:
001dc0 c002      	RJMP _0x2000024
                 _0x200001F:
001dc1 30e2      	CPI  R30,LOW(0x2)
001dc2 f439      	BRNE _0x2000025
                 _0x2000024:
001dc3 e050      	LDI  R21,LOW(0)
001dc4 e013      	LDI  R17,LOW(3)
001dc5 3320      	CPI  R18,48
001dc6 f411      	BRNE _0x2000026
001dc7 6800      	ORI  R16,LOW(128)
001dc8 c145      	RJMP _0x200001B
                 _0x2000026:
001dc9 c004      	RJMP _0x2000027
                 _0x2000025:
001dca 30e3      	CPI  R30,LOW(0x3)
001dcb f011      	BREQ PC+3
001dcc 940c 1f0e 	JMP _0x200001B
                 _0x2000027:
001dce 3320      	CPI  R18,48
001dcf f010      	BRLO _0x200002A
001dd0 332a      	CPI  R18,58
001dd1 f008      	BRLO _0x200002B
                 _0x200002A:
001dd2 c007      	RJMP _0x2000029
                 _0x200002B:
001dd3 e0aa      	LDI  R26,LOW(10)
001dd4 9f5a      	MUL  R21,R26
001dd5 2d50      	MOV  R21,R0
001dd6 2fe2      	MOV  R30,R18
001dd7 53e0      	SUBI R30,LOW(48)
001dd8 0f5e      	ADD  R21,R30
001dd9 c134      	RJMP _0x200001B
                 _0x2000029:
001dda 2fe2      	MOV  R30,R18
001ddb 36e3      	CPI  R30,LOW(0x63)
001ddc f469      	BRNE _0x200002F
001ddd 89ea      	LDD  R30,Y+18
001dde 89fb      	LDD  R31,Y+18+1
001ddf 9734      	SBIW R30,4
001de0 8bea      	STD  Y+18,R30
001de1 8bfb      	STD  Y+18+1,R31
001de2 81a4      	LDD  R26,Z+4
001de3 93aa      	ST   -Y,R26
001de4 85af      	LDD  R26,Y+15
001de5 89b8      	LDD  R27,Y+15+1
001de6 89e9      	LDD  R30,Y+17
001de7 89fa      	LDD  R31,Y+17+1
001de8 9509      	ICALL
001de9 c123      	RJMP _0x2000030
                 _0x200002F:
001dea 37e3      	CPI  R30,LOW(0x73)
001deb f491      	BRNE _0x2000032
001dec 89ea      	LDD  R30,Y+18
001ded 89fb      	LDD  R31,Y+18+1
001dee 9734      	SBIW R30,4
001def 8bea      	STD  Y+18,R30
001df0 8bfb      	STD  Y+18+1,R31
001df1 89aa      	LDD  R26,Y+18
001df2 89bb      	LDD  R27,Y+18+1
001df3 9614      	ADIW R26,4
001df4 940e 21d5 	CALL __GETW1P
001df6 83ee      	STD  Y+6,R30
001df7 83ff      	STD  Y+6+1,R31
001df8 81ae      	LDD  R26,Y+6
001df9 81bf      	LDD  R27,Y+6+1
001dfa 940e 1f53 	CALL _strlen
001dfc 2f1e      	MOV  R17,R30
001dfd c018      	RJMP _0x2000033
                 _0x2000032:
001dfe 37e0      	CPI  R30,LOW(0x70)
001dff f4d1      	BRNE _0x2000035
001e00 89ea      	LDD  R30,Y+18
001e01 89fb      	LDD  R31,Y+18+1
001e02 9734      	SBIW R30,4
001e03 8bea      	STD  Y+18,R30
001e04 8bfb      	STD  Y+18+1,R31
001e05 89aa      	LDD  R26,Y+18
001e06 89bb      	LDD  R27,Y+18+1
001e07 9614      	ADIW R26,4
001e08 940e 21d9 	CALL __GETD1P
                +
001e0a 83ee     +STD Y + 6 , R30
001e0b 83ff     +STD Y + 6 + 1 , R31
001e0c 8768     +STD Y + 6 + 2 , R22
001e0d 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                +
001e0e 81ae     +LDD R26 , Y + 6
001e0f 81bf     +LDD R27 , Y + 6 + 1
001e10 8588     +LDD R24 , Y + 6 + 2
001e11 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
001e12 940e 1f5f 	CALL _strlenf
001e14 2f1e      	MOV  R17,R30
001e15 6008      	ORI  R16,LOW(8)
                 _0x2000033:
001e16 6002      	ORI  R16,LOW(2)
001e17 770f      	ANDI R16,LOW(127)
001e18 e030      	LDI  R19,LOW(0)
001e19 c04b      	RJMP _0x2000036
                 _0x2000035:
001e1a 36e4      	CPI  R30,LOW(0x64)
001e1b f011      	BREQ _0x2000039
001e1c 36e9      	CPI  R30,LOW(0x69)
001e1d f411      	BRNE _0x200003A
                 _0x2000039:
001e1e 6004      	ORI  R16,LOW(4)
001e1f c002      	RJMP _0x200003B
                 _0x200003A:
001e20 37e5      	CPI  R30,LOW(0x75)
001e21 f451      	BRNE _0x200003C
                 _0x200003B:
                +
001e22 e7e6     +LDI R30 , LOW ( 2 * _tbl10_G100 + ( 0 ) )
001e23 e0f1     +LDI R31 , HIGH ( 2 * _tbl10_G100 + ( 0 ) )
001e24 e060     +LDI R22 , BYTE3 ( 2 * _tbl10_G100 + ( 0 ) )
001e25 e070     +LDI R23 , BYTE4 ( 2 * _tbl10_G100 + ( 0 ) )
                 	__POINTD1FN _tbl10_G100,0
                +
001e26 83ee     +STD Y + 6 , R30
001e27 83ff     +STD Y + 6 + 1 , R31
001e28 8768     +STD Y + 6 + 2 , R22
001e29 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
001e2a e015      	LDI  R17,LOW(5)
001e2b c011      	RJMP _0x200003D
                 _0x200003C:
001e2c 35e8      	CPI  R30,LOW(0x58)
001e2d f411      	BRNE _0x200003F
001e2e 6008      	ORI  R16,LOW(8)
001e2f c004      	RJMP _0x2000040
                 _0x200003F:
001e30 37e8      	CPI  R30,LOW(0x78)
001e31 f011      	BREQ PC+3
001e32 940c 1f0d 	JMP _0x2000071
                 _0x2000040:
                +
001e34 e8e0     +LDI R30 , LOW ( 2 * _tbl16_G100 + ( 0 ) )
001e35 e0f1     +LDI R31 , HIGH ( 2 * _tbl16_G100 + ( 0 ) )
001e36 e060     +LDI R22 , BYTE3 ( 2 * _tbl16_G100 + ( 0 ) )
001e37 e070     +LDI R23 , BYTE4 ( 2 * _tbl16_G100 + ( 0 ) )
                 	__POINTD1FN _tbl16_G100,0
                +
001e38 83ee     +STD Y + 6 , R30
001e39 83ff     +STD Y + 6 + 1 , R31
001e3a 8768     +STD Y + 6 + 2 , R22
001e3b 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
001e3c e014      	LDI  R17,LOW(4)
                 _0x200003D:
001e3d ff02      	SBRS R16,2
001e3e c01a      	RJMP _0x2000042
001e3f 89ea      	LDD  R30,Y+18
001e40 89fb      	LDD  R31,Y+18+1
001e41 9734      	SBIW R30,4
001e42 8bea      	STD  Y+18,R30
001e43 8bfb      	STD  Y+18+1,R31
001e44 89aa      	LDD  R26,Y+18
001e45 89bb      	LDD  R27,Y+18+1
001e46 9614      	ADIW R26,4
001e47 940e 21d5 	CALL __GETW1P
001e49 87ec      	STD  Y+12,R30
001e4a 87fd      	STD  Y+12+1,R31
001e4b 85ad      	LDD  R26,Y+13
001e4c 23aa      	TST  R26
001e4d f42a      	BRPL _0x2000043
001e4e 940e 2125 	CALL __ANEGW1
001e50 87ec      	STD  Y+12,R30
001e51 87fd      	STD  Y+12+1,R31
001e52 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
001e53 3040      	CPI  R20,0
001e54 f011      	BREQ _0x2000044
001e55 5f1f      	SUBI R17,-LOW(1)
001e56 c001      	RJMP _0x2000045
                 _0x2000044:
001e57 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
001e58 c00c      	RJMP _0x2000046
                 _0x2000042:
001e59 89ea      	LDD  R30,Y+18
001e5a 89fb      	LDD  R31,Y+18+1
001e5b 9734      	SBIW R30,4
001e5c 8bea      	STD  Y+18,R30
001e5d 8bfb      	STD  Y+18+1,R31
001e5e 89aa      	LDD  R26,Y+18
001e5f 89bb      	LDD  R27,Y+18+1
001e60 9614      	ADIW R26,4
001e61 940e 21d5 	CALL __GETW1P
001e63 87ec      	STD  Y+12,R30
001e64 87fd      	STD  Y+12+1,R31
                 _0x2000046:
                 _0x2000036:
001e65 fd00      	SBRC R16,0
001e66 c015      	RJMP _0x2000047
                 _0x2000048:
001e67 1715      	CP   R17,R21
001e68 f498      	BRSH _0x200004A
001e69 ff07      	SBRS R16,7
001e6a c008      	RJMP _0x200004B
001e6b ff02      	SBRS R16,2
001e6c c004      	RJMP _0x200004C
001e6d 7f0b      	ANDI R16,LOW(251)
001e6e 2f24      	MOV  R18,R20
001e6f 5011      	SUBI R17,LOW(1)
001e70 c001      	RJMP _0x200004D
                 _0x200004C:
001e71 e320      	LDI  R18,LOW(48)
                 _0x200004D:
001e72 c001      	RJMP _0x200004E
                 _0x200004B:
001e73 e220      	LDI  R18,LOW(32)
                 _0x200004E:
001e74 932a      	ST   -Y,R18
001e75 85af      	LDD  R26,Y+15
001e76 89b8      	LDD  R27,Y+15+1
001e77 89e9      	LDD  R30,Y+17
001e78 89fa      	LDD  R31,Y+17+1
001e79 9509      	ICALL
001e7a 5051      	SUBI R21,LOW(1)
001e7b cfeb      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
001e7c 2f31      	MOV  R19,R17
001e7d ff01      	SBRS R16,1
001e7e c026      	RJMP _0x200004F
                 _0x2000050:
001e7f 3030      	CPI  R19,0
001e80 f119      	BREQ _0x2000052
001e81 ff03      	SBRS R16,3
001e82 c011      	RJMP _0x2000053
001e83 01de      	MOVW R26,R28
001e84 9616      	ADIW R26,6
001e85 940e 21df 	CALL __GETD1P_INC
                +
001e87 5fef     +SUBI R30 , LOW ( - 1 )
001e88 4fff     +SBCI R31 , HIGH ( - 1 )
001e89 4f6f     +SBCI R22 , BYTE3 ( - 1 )
001e8a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
001e8b 940e 21e4 	CALL __PUTDP1_DEC
                +
001e8d 50e1     +SUBI R30 , LOW ( 1 )
001e8e 40f0     +SBCI R31 , HIGH ( 1 )
001e8f 4060     +SBCI R22 , BYTE3 ( 1 )
001e90 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
                +
001e91 bf6b     +OUT RAMPZ , R22
001e92 9126     +ELPM R18 , Z
                 	__GETBRPF 18
001e93 c005      	RJMP _0x2000054
                 _0x2000053:
001e94 81ae      	LDD  R26,Y+6
001e95 81bf      	LDD  R27,Y+6+1
001e96 912d      	LD   R18,X+
001e97 83ae      	STD  Y+6,R26
001e98 83bf      	STD  Y+6+1,R27
                 _0x2000054:
001e99 932a      	ST   -Y,R18
001e9a 85af      	LDD  R26,Y+15
001e9b 89b8      	LDD  R27,Y+15+1
001e9c 89e9      	LDD  R30,Y+17
001e9d 89fa      	LDD  R31,Y+17+1
001e9e 9509      	ICALL
001e9f 3050      	CPI  R21,0
001ea0 f009      	BREQ _0x2000055
001ea1 5051      	SUBI R21,LOW(1)
                 _0x2000055:
001ea2 5031      	SUBI R19,LOW(1)
001ea3 cfdb      	RJMP _0x2000050
                 _0x2000052:
001ea4 c05b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
001ea5 e320      	LDI  R18,LOW(48)
                +
001ea6 81ee     +LDD R30 , Y + 6
001ea7 81ff     +LDD R31 , Y + 6 + 1
001ea8 8568     +LDD R22 , Y + 6 + 2
001ea9 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
001eaa 940e 21e9 	CALL __GETW1PF
001eac 87ea      	STD  Y+10,R30
001ead 87fb      	STD  Y+10+1,R31
                +
001eae 81ee     +LDD R30 , Y + 6
001eaf 81ff     +LDD R31 , Y + 6 + 1
001eb0 8568     +LDD R22 , Y + 6 + 2
001eb1 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
                +
001eb2 5fee     +SUBI R30 , LOW ( - 2 )
001eb3 4fff     +SBCI R31 , HIGH ( - 2 )
001eb4 4f6f     +SBCI R22 , BYTE3 ( - 2 )
001eb5 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
                +
001eb6 83ee     +STD Y + 6 , R30
001eb7 83ff     +STD Y + 6 + 1 , R31
001eb8 8768     +STD Y + 6 + 2 , R22
001eb9 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
                 _0x200005A:
001eba 85ea      	LDD  R30,Y+10
001ebb 85fb      	LDD  R31,Y+10+1
001ebc 85ac      	LDD  R26,Y+12
001ebd 85bd      	LDD  R27,Y+12+1
001ebe 17ae      	CP   R26,R30
001ebf 07bf      	CPC  R27,R31
001ec0 f050      	BRLO _0x200005C
001ec1 5f2f      	SUBI R18,-LOW(1)
001ec2 85aa      	LDD  R26,Y+10
001ec3 85bb      	LDD  R27,Y+10+1
001ec4 85ec      	LDD  R30,Y+12
001ec5 85fd      	LDD  R31,Y+12+1
001ec6 1bea      	SUB  R30,R26
001ec7 0bfb      	SBC  R31,R27
001ec8 87ec      	STD  Y+12,R30
001ec9 87fd      	STD  Y+12+1,R31
001eca cfef      	RJMP _0x200005A
                 _0x200005C:
001ecb 332a      	CPI  R18,58
001ecc f028      	BRLO _0x200005D
001ecd ff03      	SBRS R16,3
001ece c002      	RJMP _0x200005E
001ecf 5f29      	SUBI R18,-LOW(7)
001ed0 c001      	RJMP _0x200005F
                 _0x200005E:
001ed1 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
001ed2 fd04      	SBRC R16,4
001ed3 c01d      	RJMP _0x2000061
001ed4 3321      	CPI  R18,49
001ed5 f420      	BRSH _0x2000063
001ed6 85aa      	LDD  R26,Y+10
001ed7 85bb      	LDD  R27,Y+10+1
001ed8 9711      	SBIW R26,1
001ed9 f409      	BRNE _0x2000062
                 _0x2000063:
001eda c009      	RJMP _0x20000CA
                 _0x2000062:
001edb 1753      	CP   R21,R19
001edc f010      	BRLO _0x2000067
001edd ff00      	SBRS R16,0
001ede c001      	RJMP _0x2000068
                 _0x2000067:
001edf c01a      	RJMP _0x2000066
                 _0x2000068:
001ee0 e220      	LDI  R18,LOW(32)
001ee1 ff07      	SBRS R16,7
001ee2 c00e      	RJMP _0x2000069
001ee3 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
001ee4 6100      	ORI  R16,LOW(16)
001ee5 ff02      	SBRS R16,2
001ee6 c00a      	RJMP _0x200006A
001ee7 7f0b      	ANDI R16,LOW(251)
001ee8 934a      	ST   -Y,R20
001ee9 85af      	LDD  R26,Y+15
001eea 89b8      	LDD  R27,Y+15+1
001eeb 89e9      	LDD  R30,Y+17
001eec 89fa      	LDD  R31,Y+17+1
001eed 9509      	ICALL
001eee 3050      	CPI  R21,0
001eef f009      	BREQ _0x200006B
001ef0 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
001ef1 932a      	ST   -Y,R18
001ef2 85af      	LDD  R26,Y+15
001ef3 89b8      	LDD  R27,Y+15+1
001ef4 89e9      	LDD  R30,Y+17
001ef5 89fa      	LDD  R31,Y+17+1
001ef6 9509      	ICALL
001ef7 3050      	CPI  R21,0
001ef8 f009      	BREQ _0x200006C
001ef9 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
001efa 5031      	SUBI R19,LOW(1)
001efb 85aa      	LDD  R26,Y+10
001efc 85bb      	LDD  R27,Y+10+1
001efd 9712      	SBIW R26,2
001efe f008      	BRLO _0x2000059
001eff cfa5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
001f00 ff00      	SBRS R16,0
001f01 c00b      	RJMP _0x200006D
                 _0x200006E:
001f02 3050      	CPI  R21,0
001f03 f049      	BREQ _0x2000070
001f04 5051      	SUBI R21,LOW(1)
001f05 e2e0      	LDI  R30,LOW(32)
001f06 93ea      	ST   -Y,R30
001f07 85af      	LDD  R26,Y+15
001f08 89b8      	LDD  R27,Y+15+1
001f09 89e9      	LDD  R30,Y+17
001f0a 89fa      	LDD  R31,Y+17+1
001f0b 9509      	ICALL
001f0c cff5      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
001f0d e010      	LDI  R17,LOW(0)
                 _0x200001B:
001f0e ce74      	RJMP _0x2000016
                 _0x2000018:
001f0f 85ae      	LDD  R26,Y+14
001f10 85bf      	LDD  R27,Y+14+1
001f11 940e 21d5 	CALL __GETW1P
001f13 940e 224d 	CALL __LOADLOCR6
001f15 9668      	ADIW R28,24
001f16 9508      	RET
                 _sprintf:
001f17 92ff      	PUSH R15
001f18 2ef8      	MOV  R15,R24
001f19 9726      	SBIW R28,6
001f1a 940e 2248 	CALL __SAVELOCR4
001f1c 01de      	MOVW R26,R28
001f1d 961e      	ADIW R26,14
001f1e 940e 2117 	CALL __ADDW2R15
001f20 940e 21d5 	CALL __GETW1P
001f22 9730      	SBIW R30,0
001f23 f419      	BRNE _0x2000072
001f24 efef      	LDI  R30,LOW(65535)
001f25 efff      	LDI  R31,HIGH(65535)
001f26 c027      	RJMP _0x20A0001
                 _0x2000072:
001f27 01de      	MOVW R26,R28
001f28 9616      	ADIW R26,6
001f29 940e 2117 	CALL __ADDW2R15
001f2b 018d      	MOVW R16,R26
001f2c 01de      	MOVW R26,R28
001f2d 961e      	ADIW R26,14
001f2e 940e 2117 	CALL __ADDW2R15
001f30 940e 21d5 	CALL __GETW1P
001f32 83ee      	STD  Y+6,R30
001f33 83ff      	STD  Y+6+1,R31
001f34 e0e0      	LDI  R30,LOW(0)
001f35 87e8      	STD  Y+8,R30
001f36 87e9      	STD  Y+8+1,R30
001f37 01de      	MOVW R26,R28
001f38 961a      	ADIW R26,10
001f39 940e 2117 	CALL __ADDW2R15
001f3b 940e 21d9 	CALL __GETD1P
001f3d 940e 2201 	CALL __PUTPARD1
001f3f 931a      	ST   -Y,R17
001f40 930a      	ST   -Y,R16
001f41 e3e7      	LDI  R30,LOW(_put_buff_G100)
001f42 e1fd      	LDI  R31,HIGH(_put_buff_G100)
001f43 93fa      	ST   -Y,R31
001f44 93ea      	ST   -Y,R30
001f45 01de      	MOVW R26,R28
001f46 961c      	ADIW R26,12
001f47 de2f      	RCALL __print_G100
001f48 019f      	MOVW R18,R30
001f49 81ae      	LDD  R26,Y+6
001f4a 81bf      	LDD  R27,Y+6+1
001f4b e0e0      	LDI  R30,LOW(0)
001f4c 93ec      	ST   X,R30
001f4d 01f9      	MOVW R30,R18
                 _0x20A0001:
001f4e 940e 224f 	CALL __LOADLOCR4
001f50 962a      	ADIW R28,10
001f51 90ff      	POP  R15
001f52 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
001f53 93ba      	ST   -Y,R27
001f54 93aa      	ST   -Y,R26
001f55 91a9          ld   r26,y+
001f56 91b9          ld   r27,y+
001f57 27ee          clr  r30
001f58 27ff          clr  r31
                 strlen0:
001f59 916d          ld   r22,x+
001f5a 2366          tst  r22
001f5b f011          breq strlen1
001f5c 9631          adiw r30,1
001f5d cffb          rjmp strlen0
                 strlen1:
001f5e 9508          ret
                 _strlenf:
001f5f 940e 2206 	CALL __PUTPARD2
001f61 27aa          clr  r26
001f62 27bb          clr  r27
001f63 91e9          ld   r30,y+
001f64 91f9          ld   r31,y+
001f65 9169          ld   r22,y+
001f66 9179          ld   r23,y+
001f67 bf6b          out  rampz,r22
                 strlenf0:
001f68 9007          elpm r0,z+
001f69 2000          tst  r0
001f6a f011          breq strlenf1
001f6b 9611          adiw r26,1
001f6c cffb          rjmp strlenf0
                 strlenf1:
001f6d 01fd          movw r30,r26
001f6e 9508          ret
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _dMotor1:
000900           	.BYTE 0x1
                 _dMotor2:
000901           	.BYTE 0x1
                 _dSpeed1:
000902           	.BYTE 0x1
                 _dSpeed2:
000903           	.BYTE 0x1
                 _dCounter1:
000904           	.BYTE 0x1
                 _dCounter2:
000905           	.BYTE 0x1
                 
                 	.ESEG
                 _SetKP:
000000           	.BYTE 0x2
                 _SetKD:
000002           	.BYTE 0x2
                 
                 	.DSEG
                 _lErrorM2_S0000008000:
000906           	.BYTE 0x1
                 _iErrorM2_S0000008000:
000907           	.BYTE 0x1
                 _lErrorM1_S0000009000:
000908           	.BYTE 0x1
                 _iErrorM1_S0000009000:
000909           	.BYTE 0x1
                 _rx_buffer0:
00090a           	.BYTE 0x200
                 _rx_buffer1:
000b0a           	.BYTE 0x200
                 _rx_wr_index1:
000d0a           	.BYTE 0x1
                 _rx_rd_index1:
000d0b           	.BYTE 0x1
                 _rx_counter1:
000d0c           	.BYTE 0x1
                 _SysTick:
000d0d           	.BYTE 0x1
                 _usCounter:
000d0e           	.BYTE 0x2
                 _ServoCounter_S000003E000:
000d10           	.BYTE 0x2
                 _ServoCounter_S000003F000:
000d12           	.BYTE 0x1
                 _LaguTick_S000003F000:
000d13           	.BYTE 0x1
                 _TempoTick_S000003F000:
000d14           	.BYTE 0x1
                 _DTime:
000d15           	.BYTE 0x2
                 _DTimeTick:
000d17           	.BYTE 0x1
                 __dCounter1_S0000041000:
000d18           	.BYTE 0x1
                 __dCounter2_S0000041000:
000d19           	.BYTE 0x1
                 _Timer2Tick_S0000041000:
000d1a           	.BYTE 0x1
                 _LastError_S0000047000:
000d1b           	.BYTE 0x2
                 _LastSpeed_S0000048000:
000d1d           	.BYTE 0x2
                 _LastSpeed_S0000049000:
000d1f           	.BYTE 0x2
                 _LastSpeed_S000004A000:
000d21           	.BYTE 0x2
                 _LastErrorDKi_S000004D000:
000d23           	.BYTE 0x2
                 _LastErrorDKa_S000004E000:
000d25           	.BYTE 0x2
                 _LastSpeed_S000004F000:
000d27           	.BYTE 0x2
                 _LastSpeed_S0000050000:
000d29           	.BYTE 0x2
                 _notasi_bebas:
000d2b           	.BYTE 0x5
                 _notasi_dinding:
000d30           	.BYTE 0x5
                 _notasi_buzzer:
000d35           	.BYTE 0x4
                 _notasi_lcd:
000d39           	.BYTE 0x11
                 _notasi_gripper:
000d4a           	.BYTE 0x3
                 _notasi_garis:
000d4d           	.BYTE 0x4
                 _notasi_delay:
000d51           	.BYTE 0x1
                 _notasi_tes:
000d52           	.BYTE 0x5
                 _xstring:
000d57           	.BYTE 0x10
                 _i:
000d67           	.BYTE 0x1
                 _flag_aksi:
000d68           	.BYTE 0x1
                 __seed_G104:
000d69           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
001f6f 9610      	adiw r26,0
001f70 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001f71 ea80     +LDI R24 , LOW ( 0xFA0 )
001f72 e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
001f73 9701     +SBIW R24 , 1
001f74 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
001f75 95a8      	wdr
001f76 9711      	sbiw r26,1
001f77 f7c9      	brne __delay_ms0
                 __delay_ms1:
001f78 9508      	ret
                 
                 __ROUND_REPACK:
001f79 2355      	TST  R21
001f7a f442      	BRPL __REPACK
001f7b 3850      	CPI  R21,0x80
001f7c f411      	BRNE __ROUND_REPACK0
001f7d ffe0      	SBRS R30,0
001f7e c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001f7f 9631      	ADIW R30,1
001f80 1f69      	ADC  R22,R25
001f81 1f79      	ADC  R23,R25
001f82 f06b      	BRVS __REPACK1
                 
                 __REPACK:
001f83 e850      	LDI  R21,0x80
001f84 2757      	EOR  R21,R23
001f85 f411      	BRNE __REPACK0
001f86 935f      	PUSH R21
001f87 c0ca      	RJMP __ZERORES
                 __REPACK0:
001f88 3f5f      	CPI  R21,0xFF
001f89 f031      	BREQ __REPACK1
001f8a 0f66      	LSL  R22
001f8b 0c00      	LSL  R0
001f8c 9557      	ROR  R21
001f8d 9567      	ROR  R22
001f8e 2f75      	MOV  R23,R21
001f8f 9508      	RET
                 __REPACK1:
001f90 935f      	PUSH R21
001f91 2000      	TST  R0
001f92 f00a      	BRMI __REPACK2
001f93 c0ca      	RJMP __MAXRES
                 __REPACK2:
001f94 c0c3      	RJMP __MINRES
                 
                 __UNPACK:
001f95 e850      	LDI  R21,0x80
001f96 2e19      	MOV  R1,R25
001f97 2215      	AND  R1,R21
001f98 0f88      	LSL  R24
001f99 1f99      	ROL  R25
001f9a 2795      	EOR  R25,R21
001f9b 0f55      	LSL  R21
001f9c 9587      	ROR  R24
                 
                 __UNPACK1:
001f9d e850      	LDI  R21,0x80
001f9e 2e07      	MOV  R0,R23
001f9f 2205      	AND  R0,R21
001fa0 0f66      	LSL  R22
001fa1 1f77      	ROL  R23
001fa2 2775      	EOR  R23,R21
001fa3 0f55      	LSL  R21
001fa4 9567      	ROR  R22
001fa5 9508      	RET
                 
                 __CFD1U:
001fa6 9468      	SET
001fa7 c001      	RJMP __CFD1U0
                 __CFD1:
001fa8 94e8      	CLT
                 __CFD1U0:
001fa9 935f      	PUSH R21
001faa dff2      	RCALL __UNPACK1
001fab 3870      	CPI  R23,0x80
001fac f018      	BRLO __CFD10
001fad 3f7f      	CPI  R23,0xFF
001fae f408      	BRCC __CFD10
001faf c0a2      	RJMP __ZERORES
                 __CFD10:
001fb0 e156      	LDI  R21,22
001fb1 1b57      	SUB  R21,R23
001fb2 f4aa      	BRPL __CFD11
001fb3 9551      	NEG  R21
001fb4 3058      	CPI  R21,8
001fb5 f40e      	BRTC __CFD19
001fb6 3059      	CPI  R21,9
                 __CFD19:
001fb7 f030      	BRLO __CFD17
001fb8 efef      	SER  R30
001fb9 efff      	SER  R31
001fba ef6f      	SER  R22
001fbb e77f      	LDI  R23,0x7F
001fbc f977      	BLD  R23,7
001fbd c01a      	RJMP __CFD15
                 __CFD17:
001fbe 2777      	CLR  R23
001fbf 2355      	TST  R21
001fc0 f0b9      	BREQ __CFD15
                 __CFD18:
001fc1 0fee      	LSL  R30
001fc2 1fff      	ROL  R31
001fc3 1f66      	ROL  R22
001fc4 1f77      	ROL  R23
001fc5 955a      	DEC  R21
001fc6 f7d1      	BRNE __CFD18
001fc7 c010      	RJMP __CFD15
                 __CFD11:
001fc8 2777      	CLR  R23
                 __CFD12:
001fc9 3058      	CPI  R21,8
001fca f028      	BRLO __CFD13
001fcb 2fef      	MOV  R30,R31
001fcc 2ff6      	MOV  R31,R22
001fcd 2f67      	MOV  R22,R23
001fce 5058      	SUBI R21,8
001fcf cff9      	RJMP __CFD12
                 __CFD13:
001fd0 2355      	TST  R21
001fd1 f031      	BREQ __CFD15
                 __CFD14:
001fd2 9576      	LSR  R23
001fd3 9567      	ROR  R22
001fd4 95f7      	ROR  R31
001fd5 95e7      	ROR  R30
001fd6 955a      	DEC  R21
001fd7 f7d1      	BRNE __CFD14
                 __CFD15:
001fd8 2000      	TST  R0
001fd9 f40a      	BRPL __CFD16
001fda d14e      	RCALL __ANEGD1
                 __CFD16:
001fdb 915f      	POP  R21
001fdc 9508      	RET
                 
                 __CDF1U:
001fdd 9468      	SET
001fde c001      	RJMP __CDF1U0
                 __CDF1:
001fdf 94e8      	CLT
                 __CDF1U0:
001fe0 9730      	SBIW R30,0
001fe1 4060      	SBCI R22,0
001fe2 4070      	SBCI R23,0
001fe3 f0b1      	BREQ __CDF10
001fe4 2400      	CLR  R0
001fe5 f026      	BRTS __CDF11
001fe6 2377      	TST  R23
001fe7 f412      	BRPL __CDF11
001fe8 9400      	COM  R0
001fe9 d13f      	RCALL __ANEGD1
                 __CDF11:
001fea 2e17      	MOV  R1,R23
001feb e17e      	LDI  R23,30
001fec 2011      	TST  R1
                 __CDF12:
001fed f032      	BRMI __CDF13
001fee 957a      	DEC  R23
001fef 0fee      	LSL  R30
001ff0 1fff      	ROL  R31
001ff1 1f66      	ROL  R22
001ff2 1c11      	ROL  R1
001ff3 cff9      	RJMP __CDF12
                 __CDF13:
001ff4 2fef      	MOV  R30,R31
001ff5 2ff6      	MOV  R31,R22
001ff6 2d61      	MOV  R22,R1
001ff7 935f      	PUSH R21
001ff8 df8a      	RCALL __REPACK
001ff9 915f      	POP  R21
                 __CDF10:
001ffa 9508      	RET
                 
                 __SWAPACC:
001ffb 934f      	PUSH R20
001ffc 01af      	MOVW R20,R30
001ffd 01fd      	MOVW R30,R26
001ffe 01da      	MOVW R26,R20
001fff 01ab      	MOVW R20,R22
002000 01bc      	MOVW R22,R24
002001 01ca      	MOVW R24,R20
002002 2d40      	MOV  R20,R0
002003 2c01      	MOV  R0,R1
002004 2e14      	MOV  R1,R20
002005 914f      	POP  R20
002006 9508      	RET
                 
                 __UADD12:
002007 0fea      	ADD  R30,R26
002008 1ffb      	ADC  R31,R27
002009 1f68      	ADC  R22,R24
00200a 9508      	RET
                 
                 __NEGMAN1:
00200b 95e0      	COM  R30
00200c 95f0      	COM  R31
00200d 9560      	COM  R22
00200e 5fef      	SUBI R30,-1
00200f 4fff      	SBCI R31,-1
002010 4f6f      	SBCI R22,-1
002011 9508      	RET
                 
                 __SUBF12:
002012 935f      	PUSH R21
002013 df81      	RCALL __UNPACK
002014 3890      	CPI  R25,0x80
002015 f149      	BREQ __ADDF129
002016 e850      	LDI  R21,0x80
002017 2615      	EOR  R1,R21
                 
                 __ADDF120:
002018 3870      	CPI  R23,0x80
002019 f121      	BREQ __ADDF128
                 __ADDF121:
00201a 2f57      	MOV  R21,R23
00201b 1b59      	SUB  R21,R25
00201c f12b      	BRVS __ADDF1211
00201d f412      	BRPL __ADDF122
00201e dfdc      	RCALL __SWAPACC
00201f cffa      	RJMP __ADDF121
                 __ADDF122:
002020 3158      	CPI  R21,24
002021 f018      	BRLO __ADDF123
002022 27aa      	CLR  R26
002023 27bb      	CLR  R27
002024 2788      	CLR  R24
                 __ADDF123:
002025 3058      	CPI  R21,8
002026 f028      	BRLO __ADDF124
002027 2fab      	MOV  R26,R27
002028 2fb8      	MOV  R27,R24
002029 2788      	CLR  R24
00202a 5058      	SUBI R21,8
00202b cff9      	RJMP __ADDF123
                 __ADDF124:
00202c 2355      	TST  R21
00202d f029      	BREQ __ADDF126
                 __ADDF125:
00202e 9586      	LSR  R24
00202f 95b7      	ROR  R27
002030 95a7      	ROR  R26
002031 955a      	DEC  R21
002032 f7d9      	BRNE __ADDF125
                 __ADDF126:
002033 2d50      	MOV  R21,R0
002034 2551      	EOR  R21,R1
002035 f072      	BRMI __ADDF127
002036 dfd0      	RCALL __UADD12
002037 f438      	BRCC __ADDF129
002038 9567      	ROR  R22
002039 95f7      	ROR  R31
00203a 95e7      	ROR  R30
00203b 9573      	INC  R23
00203c f413      	BRVC __ADDF129
00203d c020      	RJMP __MAXRES
                 __ADDF128:
00203e dfbc      	RCALL __SWAPACC
                 __ADDF129:
00203f df43      	RCALL __REPACK
002040 915f      	POP  R21
002041 9508      	RET
                 __ADDF1211:
002042 f7d8      	BRCC __ADDF128
002043 cffb      	RJMP __ADDF129
                 __ADDF127:
002044 1bea      	SUB  R30,R26
002045 0bfb      	SBC  R31,R27
002046 0b68      	SBC  R22,R24
002047 f051      	BREQ __ZERORES
002048 f410      	BRCC __ADDF1210
002049 9400      	COM  R0
00204a dfc0      	RCALL __NEGMAN1
                 __ADDF1210:
00204b 2366      	TST  R22
00204c f392      	BRMI __ADDF129
00204d 0fee      	LSL  R30
00204e 1fff      	ROL  R31
00204f 1f66      	ROL  R22
002050 957a      	DEC  R23
002051 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
002052 27ee      	CLR  R30
002053 27ff      	CLR  R31
002054 2766      	CLR  R22
002055 2777      	CLR  R23
002056 915f      	POP  R21
002057 9508      	RET
                 
                 __MINRES:
002058 efef      	SER  R30
002059 efff      	SER  R31
00205a e76f      	LDI  R22,0x7F
00205b ef7f      	SER  R23
00205c 915f      	POP  R21
00205d 9508      	RET
                 
                 __MAXRES:
00205e efef      	SER  R30
00205f efff      	SER  R31
002060 e76f      	LDI  R22,0x7F
002061 e77f      	LDI  R23,0x7F
002062 915f      	POP  R21
002063 9508      	RET
                 
                 __MULF12:
002064 935f      	PUSH R21
002065 df2f      	RCALL __UNPACK
002066 3870      	CPI  R23,0x80
002067 f351      	BREQ __ZERORES
002068 3890      	CPI  R25,0x80
002069 f341      	BREQ __ZERORES
00206a 2401      	EOR  R0,R1
00206b 9408      	SEC
00206c 1f79      	ADC  R23,R25
00206d f423      	BRVC __MULF124
00206e f31c      	BRLT __ZERORES
                 __MULF125:
00206f 2000      	TST  R0
002070 f33a      	BRMI __MINRES
002071 cfec      	RJMP __MAXRES
                 __MULF124:
002072 920f      	PUSH R0
002073 931f      	PUSH R17
002074 932f      	PUSH R18
002075 933f      	PUSH R19
002076 934f      	PUSH R20
002077 2711      	CLR  R17
002078 2722      	CLR  R18
002079 2799      	CLR  R25
00207a 9f68      	MUL  R22,R24
00207b 01a0      	MOVW R20,R0
00207c 9f8f      	MUL  R24,R31
00207d 2d30      	MOV  R19,R0
00207e 0d41      	ADD  R20,R1
00207f 1f59      	ADC  R21,R25
002080 9f6b      	MUL  R22,R27
002081 0d30      	ADD  R19,R0
002082 1d41      	ADC  R20,R1
002083 1f59      	ADC  R21,R25
002084 9f8e      	MUL  R24,R30
002085 d027      	RCALL __MULF126
002086 9fbf      	MUL  R27,R31
002087 d025      	RCALL __MULF126
002088 9f6a      	MUL  R22,R26
002089 d023      	RCALL __MULF126
00208a 9fbe      	MUL  R27,R30
00208b d01d      	RCALL __MULF127
00208c 9faf      	MUL  R26,R31
00208d d01b      	RCALL __MULF127
00208e 9fae      	MUL  R26,R30
00208f 0d11      	ADD  R17,R1
002090 1f29      	ADC  R18,R25
002091 1f39      	ADC  R19,R25
002092 1f49      	ADC  R20,R25
002093 1f59      	ADC  R21,R25
002094 2fe3      	MOV  R30,R19
002095 2ff4      	MOV  R31,R20
002096 2f65      	MOV  R22,R21
002097 2f52      	MOV  R21,R18
002098 914f      	POP  R20
002099 913f      	POP  R19
00209a 912f      	POP  R18
00209b 911f      	POP  R17
00209c 900f      	POP  R0
00209d 2366      	TST  R22
00209e f02a      	BRMI __MULF122
00209f 0f55      	LSL  R21
0020a0 1fee      	ROL  R30
0020a1 1fff      	ROL  R31
0020a2 1f66      	ROL  R22
0020a3 c002      	RJMP __MULF123
                 __MULF122:
0020a4 9573      	INC  R23
0020a5 f24b      	BRVS __MULF125
                 __MULF123:
0020a6 ded2      	RCALL __ROUND_REPACK
0020a7 915f      	POP  R21
0020a8 9508      	RET
                 
                 __MULF127:
0020a9 0d10      	ADD  R17,R0
0020aa 1d21      	ADC  R18,R1
0020ab 1f39      	ADC  R19,R25
0020ac c002      	RJMP __MULF128
                 __MULF126:
0020ad 0d20      	ADD  R18,R0
0020ae 1d31      	ADC  R19,R1
                 __MULF128:
0020af 1f49      	ADC  R20,R25
0020b0 1f59      	ADC  R21,R25
0020b1 9508      	RET
                 
                 __DIVF21:
0020b2 935f      	PUSH R21
0020b3 dee1      	RCALL __UNPACK
0020b4 3870      	CPI  R23,0x80
0020b5 f421      	BRNE __DIVF210
0020b6 2011      	TST  R1
                 __DIVF211:
0020b7 f40a      	BRPL __DIVF219
0020b8 cf9f      	RJMP __MINRES
                 __DIVF219:
0020b9 cfa4      	RJMP __MAXRES
                 __DIVF210:
0020ba 3890      	CPI  R25,0x80
0020bb f409      	BRNE __DIVF218
                 __DIVF217:
0020bc cf95      	RJMP __ZERORES
                 __DIVF218:
0020bd 2401      	EOR  R0,R1
0020be 9408      	SEC
0020bf 0b97      	SBC  R25,R23
0020c0 f41b      	BRVC __DIVF216
0020c1 f3d4      	BRLT __DIVF217
0020c2 2000      	TST  R0
0020c3 cff3      	RJMP __DIVF211
                 __DIVF216:
0020c4 2f79      	MOV  R23,R25
0020c5 931f      	PUSH R17
0020c6 932f      	PUSH R18
0020c7 933f      	PUSH R19
0020c8 934f      	PUSH R20
0020c9 2411      	CLR  R1
0020ca 2711      	CLR  R17
0020cb 2722      	CLR  R18
0020cc 2733      	CLR  R19
0020cd 2744      	CLR  R20
0020ce 2755      	CLR  R21
0020cf e290      	LDI  R25,32
                 __DIVF212:
0020d0 17ae      	CP   R26,R30
0020d1 07bf      	CPC  R27,R31
0020d2 0786      	CPC  R24,R22
0020d3 0741      	CPC  R20,R17
0020d4 f030      	BRLO __DIVF213
0020d5 1bae      	SUB  R26,R30
0020d6 0bbf      	SBC  R27,R31
0020d7 0b86      	SBC  R24,R22
0020d8 0b41      	SBC  R20,R17
0020d9 9408      	SEC
0020da c001      	RJMP __DIVF214
                 __DIVF213:
0020db 9488      	CLC
                 __DIVF214:
0020dc 1f55      	ROL  R21
0020dd 1f22      	ROL  R18
0020de 1f33      	ROL  R19
0020df 1c11      	ROL  R1
0020e0 1faa      	ROL  R26
0020e1 1fbb      	ROL  R27
0020e2 1f88      	ROL  R24
0020e3 1f44      	ROL  R20
0020e4 959a      	DEC  R25
0020e5 f751      	BRNE __DIVF212
0020e6 01f9      	MOVW R30,R18
0020e7 2d61      	MOV  R22,R1
0020e8 914f      	POP  R20
0020e9 913f      	POP  R19
0020ea 912f      	POP  R18
0020eb 911f      	POP  R17
0020ec 2366      	TST  R22
0020ed f032      	BRMI __DIVF215
0020ee 0f55      	LSL  R21
0020ef 1fee      	ROL  R30
0020f0 1fff      	ROL  R31
0020f1 1f66      	ROL  R22
0020f2 957a      	DEC  R23
0020f3 f243      	BRVS __DIVF217
                 __DIVF215:
0020f4 de84      	RCALL __ROUND_REPACK
0020f5 915f      	POP  R21
0020f6 9508      	RET
                 
                 __CMPF12:
0020f7 2399      	TST  R25
0020f8 f09a      	BRMI __CMPF120
0020f9 2377      	TST  R23
0020fa f042      	BRMI __CMPF121
0020fb 1797      	CP   R25,R23
0020fc f048      	BRLO __CMPF122
0020fd f429      	BRNE __CMPF121
0020fe 17ae      	CP   R26,R30
0020ff 07bf      	CPC  R27,R31
002100 0786      	CPC  R24,R22
002101 f020      	BRLO __CMPF122
002102 f031      	BREQ __CMPF123
                 __CMPF121:
002103 9498      	CLZ
002104 9488      	CLC
002105 9508      	RET
                 __CMPF122:
002106 9498      	CLZ
002107 9408      	SEC
002108 9508      	RET
                 __CMPF123:
002109 9418      	SEZ
00210a 9488      	CLC
00210b 9508      	RET
                 __CMPF120:
00210c 2377      	TST  R23
00210d f7c2      	BRPL __CMPF122
00210e 1797      	CP   R25,R23
00210f f398      	BRLO __CMPF121
002110 f7a9      	BRNE __CMPF122
002111 17ea      	CP   R30,R26
002112 07fb      	CPC  R31,R27
002113 0768      	CPC  R22,R24
002114 f388      	BRLO __CMPF122
002115 f399      	BREQ __CMPF123
002116 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
002117 2400      	CLR  R0
002118 0daf      	ADD  R26,R15
002119 1db0      	ADC  R27,R0
00211a 9508      	RET
                 
                 __ADDD12:
00211b 0fea      	ADD  R30,R26
00211c 1ffb      	ADC  R31,R27
00211d 1f68      	ADC  R22,R24
00211e 1f79      	ADC  R23,R25
00211f 9508      	RET
                 
                 __SUBD12:
002120 1bea      	SUB  R30,R26
002121 0bfb      	SBC  R31,R27
002122 0b68      	SBC  R22,R24
002123 0b79      	SBC  R23,R25
002124 9508      	RET
                 
                 __ANEGW1:
002125 95f1      	NEG  R31
002126 95e1      	NEG  R30
002127 40f0      	SBCI R31,0
002128 9508      	RET
                 
                 __ANEGD1:
002129 95f0      	COM  R31
00212a 9560      	COM  R22
00212b 9570      	COM  R23
00212c 95e1      	NEG  R30
00212d 4fff      	SBCI R31,-1
00212e 4f6f      	SBCI R22,-1
00212f 4f7f      	SBCI R23,-1
002130 9508      	RET
                 
                 __LSLD1:
002131 0fee      	LSL  R30
002132 1fff      	ROL  R31
002133 1f66      	ROL  R22
002134 1f77      	ROL  R23
002135 9508      	RET
                 
                 __CBD1:
002136 2ffe      	MOV  R31,R30
002137 0fff      	ADD  R31,R31
002138 0bff      	SBC  R31,R31
002139 2f6f      	MOV  R22,R31
00213a 2f7f      	MOV  R23,R31
00213b 9508      	RET
                 
                 __CWD1:
00213c 2f6f      	MOV  R22,R31
00213d 0f66      	ADD  R22,R22
00213e 0b66      	SBC  R22,R22
00213f 2f76      	MOV  R23,R22
002140 9508      	RET
                 
                 __CWD2:
002141 2f8b      	MOV  R24,R27
002142 0f88      	ADD  R24,R24
002143 0b88      	SBC  R24,R24
002144 2f98      	MOV  R25,R24
002145 9508      	RET
                 
                 __EQB12:
002146 17ea      	CP   R30,R26
002147 e0e1      	LDI  R30,1
002148 f009      	BREQ __EQB12T
002149 27ee      	CLR  R30
                 __EQB12T:
00214a 9508      	RET
                 
                 __GTW12:
00214b 17ea      	CP   R30,R26
00214c 07fb      	CPC  R31,R27
00214d e0e1      	LDI  R30,1
00214e f00c      	BRLT __GTW12T
00214f 27ee      	CLR  R30
                 __GTW12T:
002150 9508      	RET
                 
                 __MULW12U:
002151 9ffa      	MUL  R31,R26
002152 2df0      	MOV  R31,R0
002153 9feb      	MUL  R30,R27
002154 0df0      	ADD  R31,R0
002155 9fea      	MUL  R30,R26
002156 2de0      	MOV  R30,R0
002157 0df1      	ADD  R31,R1
002158 9508      	RET
                 
                 __MULB1W2U:
002159 2f6e      	MOV  R22,R30
00215a 9f6a      	MUL  R22,R26
00215b 01f0      	MOVW R30,R0
00215c 9f6b      	MUL  R22,R27
00215d 0df0      	ADD  R31,R0
00215e 9508      	RET
                 
                 __MULW12:
00215f d054      	RCALL __CHKSIGNW
002160 dff0      	RCALL __MULW12U
002161 f40e      	BRTC __MULW121
002162 dfc2      	RCALL __ANEGW1
                 __MULW121:
002163 9508      	RET
                 
                 __DIVW21U:
002164 2400      	CLR  R0
002165 2411      	CLR  R1
002166 e190      	LDI  R25,16
                 __DIVW21U1:
002167 0faa      	LSL  R26
002168 1fbb      	ROL  R27
002169 1c00      	ROL  R0
00216a 1c11      	ROL  R1
00216b 1a0e      	SUB  R0,R30
00216c 0a1f      	SBC  R1,R31
00216d f418      	BRCC __DIVW21U2
00216e 0e0e      	ADD  R0,R30
00216f 1e1f      	ADC  R1,R31
002170 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
002171 60a1      	SBR  R26,1
                 __DIVW21U3:
002172 959a      	DEC  R25
002173 f799      	BRNE __DIVW21U1
002174 01fd      	MOVW R30,R26
002175 01d0      	MOVW R26,R0
002176 9508      	RET
                 
                 __DIVW21:
002177 d03c      	RCALL __CHKSIGNW
002178 dfeb      	RCALL __DIVW21U
002179 f40e      	BRTC __DIVW211
00217a dfaa      	RCALL __ANEGW1
                 __DIVW211:
00217b 9508      	RET
                 
                 __DIVD21U:
00217c 933f      	PUSH R19
00217d 934f      	PUSH R20
00217e 935f      	PUSH R21
00217f 2400      	CLR  R0
002180 2411      	CLR  R1
002181 2744      	CLR  R20
002182 2755      	CLR  R21
002183 e230      	LDI  R19,32
                 __DIVD21U1:
002184 0faa      	LSL  R26
002185 1fbb      	ROL  R27
002186 1f88      	ROL  R24
002187 1f99      	ROL  R25
002188 1c00      	ROL  R0
002189 1c11      	ROL  R1
00218a 1f44      	ROL  R20
00218b 1f55      	ROL  R21
00218c 1a0e      	SUB  R0,R30
00218d 0a1f      	SBC  R1,R31
00218e 0b46      	SBC  R20,R22
00218f 0b57      	SBC  R21,R23
002190 f428      	BRCC __DIVD21U2
002191 0e0e      	ADD  R0,R30
002192 1e1f      	ADC  R1,R31
002193 1f46      	ADC  R20,R22
002194 1f57      	ADC  R21,R23
002195 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
002196 60a1      	SBR  R26,1
                 __DIVD21U3:
002197 953a      	DEC  R19
002198 f759      	BRNE __DIVD21U1
002199 01fd      	MOVW R30,R26
00219a 01bc      	MOVW R22,R24
00219b 01d0      	MOVW R26,R0
00219c 01ca      	MOVW R24,R20
00219d 915f      	POP  R21
00219e 914f      	POP  R20
00219f 913f      	POP  R19
0021a0 9508      	RET
                 
                 __DIVD21:
0021a1 d020      	RCALL __CHKSIGND
0021a2 dfd9      	RCALL __DIVD21U
0021a3 f40e      	BRTC __DIVD211
0021a4 df84      	RCALL __ANEGD1
                 __DIVD211:
0021a5 9508      	RET
                 
                 __MODW21:
0021a6 94e8      	CLT
0021a7 ffb7      	SBRS R27,7
0021a8 c004      	RJMP __MODW211
0021a9 95a0      	COM  R26
0021aa 95b0      	COM  R27
0021ab 9611      	ADIW R26,1
0021ac 9468      	SET
                 __MODW211:
0021ad fdf7      	SBRC R31,7
0021ae df76      	RCALL __ANEGW1
0021af dfb4      	RCALL __DIVW21U
0021b0 01fd      	MOVW R30,R26
0021b1 f40e      	BRTC __MODW212
0021b2 df72      	RCALL __ANEGW1
                 __MODW212:
0021b3 9508      	RET
                 
                 __CHKSIGNW:
0021b4 94e8      	CLT
0021b5 fff7      	SBRS R31,7
0021b6 c002      	RJMP __CHKSW1
0021b7 df6d      	RCALL __ANEGW1
0021b8 9468      	SET
                 __CHKSW1:
0021b9 ffb7      	SBRS R27,7
0021ba c006      	RJMP __CHKSW2
0021bb 95a0      	COM  R26
0021bc 95b0      	COM  R27
0021bd 9611      	ADIW R26,1
0021be f800      	BLD  R0,0
0021bf 9403      	INC  R0
0021c0 fa00      	BST  R0,0
                 __CHKSW2:
0021c1 9508      	RET
                 
                 __CHKSIGND:
0021c2 94e8      	CLT
0021c3 ff77      	SBRS R23,7
0021c4 c002      	RJMP __CHKSD1
0021c5 df63      	RCALL __ANEGD1
0021c6 9468      	SET
                 __CHKSD1:
0021c7 ff97      	SBRS R25,7
0021c8 c00b      	RJMP __CHKSD2
0021c9 2400      	CLR  R0
0021ca 95a0      	COM  R26
0021cb 95b0      	COM  R27
0021cc 9580      	COM  R24
0021cd 9590      	COM  R25
0021ce 9611      	ADIW R26,1
0021cf 1d80      	ADC  R24,R0
0021d0 1d90      	ADC  R25,R0
0021d1 f800      	BLD  R0,0
0021d2 9403      	INC  R0
0021d3 fa00      	BST  R0,0
                 __CHKSD2:
0021d4 9508      	RET
                 
                 __GETW1P:
0021d5 91ed      	LD   R30,X+
0021d6 91fc      	LD   R31,X
0021d7 9711      	SBIW R26,1
0021d8 9508      	RET
                 
                 __GETD1P:
0021d9 91ed      	LD   R30,X+
0021da 91fd      	LD   R31,X+
0021db 916d      	LD   R22,X+
0021dc 917c      	LD   R23,X
0021dd 9713      	SBIW R26,3
0021de 9508      	RET
                 
                 __GETD1P_INC:
0021df 91ed      	LD   R30,X+
0021e0 91fd      	LD   R31,X+
0021e1 916d      	LD   R22,X+
0021e2 917d      	LD   R23,X+
0021e3 9508      	RET
                 
                 __PUTDP1_DEC:
0021e4 937e      	ST   -X,R23
0021e5 936e      	ST   -X,R22
0021e6 93fe      	ST   -X,R31
0021e7 93ee      	ST   -X,R30
0021e8 9508      	RET
                 
                 __GETW1PF:
0021e9 bf6b      	OUT  RAMPZ,R22
0021ea 9007      	ELPM R0,Z+
0021eb 91f6      	ELPM R31,Z
0021ec 2de0      	MOV  R30,R0
0021ed 9508      	RET
                 
                 __GETW2PF:
0021ee bf6b      	OUT  RAMPZ,R22
0021ef 91a7      	ELPM R26,Z+
0021f0 91b6      	ELPM R27,Z
0021f1 9508      	RET
                 
                 __GETD1S0:
0021f2 81e8      	LD   R30,Y
0021f3 81f9      	LDD  R31,Y+1
0021f4 816a      	LDD  R22,Y+2
0021f5 817b      	LDD  R23,Y+3
0021f6 9508      	RET
                 
                 __GETD2S0:
0021f7 81a8      	LD   R26,Y
0021f8 81b9      	LDD  R27,Y+1
0021f9 818a      	LDD  R24,Y+2
0021fa 819b      	LDD  R25,Y+3
0021fb 9508      	RET
                 
                 __PUTD1S0:
0021fc 83e8      	ST   Y,R30
0021fd 83f9      	STD  Y+1,R31
0021fe 836a      	STD  Y+2,R22
0021ff 837b      	STD  Y+3,R23
002200 9508      	RET
                 
                 __PUTPARD1:
002201 937a      	ST   -Y,R23
002202 936a      	ST   -Y,R22
002203 93fa      	ST   -Y,R31
002204 93ea      	ST   -Y,R30
002205 9508      	RET
                 
                 __PUTPARD2:
002206 939a      	ST   -Y,R25
002207 938a      	ST   -Y,R24
002208 93ba      	ST   -Y,R27
002209 93aa      	ST   -Y,R26
00220a 9508      	RET
                 
                 __CDF2U:
00220b 9468      	SET
00220c c001      	RJMP __CDF2U0
                 __CDF2:
00220d 94e8      	CLT
                 __CDF2U0:
00220e d001      	RCALL __SWAPD12
00220f ddd0      	RCALL __CDF1U0
                 
                 __SWAPD12:
002210 2e18      	MOV  R1,R24
002211 2f86      	MOV  R24,R22
002212 2d61      	MOV  R22,R1
002213 2e19      	MOV  R1,R25
002214 2f97      	MOV  R25,R23
002215 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
002216 2e1b      	MOV  R1,R27
002217 2fbf      	MOV  R27,R31
002218 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
002219 2e1a      	MOV  R1,R26
00221a 2fae      	MOV  R26,R30
00221b 2de1      	MOV  R30,R1
00221c 9508      	RET
                 
                 __EEPROMRDW:
00221d 9611      	ADIW R26,1
00221e d002      	RCALL __EEPROMRDB
00221f 2ffe      	MOV  R31,R30
002220 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
002221 99e1      	SBIC EECR,EEWE
002222 cffe      	RJMP __EEPROMRDB
002223 93ff      	PUSH R31
002224 b7ff      	IN   R31,SREG
002225 94f8      	CLI
002226 bbae      	OUT  EEARL,R26
002227 bbbf      	OUT  EEARH,R27
002228 9ae0      	SBI  EECR,EERE
002229 b3ed      	IN   R30,EEDR
00222a bfff      	OUT  SREG,R31
00222b 91ff      	POP  R31
00222c 9508      	RET
                 
                 __EEPROMWRW:
00222d d007      	RCALL __EEPROMWRB
00222e 9611      	ADIW R26,1
00222f 93ef      	PUSH R30
002230 2fef      	MOV  R30,R31
002231 d003      	RCALL __EEPROMWRB
002232 91ef      	POP  R30
002233 9711      	SBIW R26,1
002234 9508      	RET
                 
                 __EEPROMWRB:
002235 9be1      	SBIS EECR,EEWE
002236 c002      	RJMP __EEPROMWRB1
002237 95a8      	WDR
002238 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
002239 b79f      	IN   R25,SREG
00223a 94f8      	CLI
00223b bbae      	OUT  EEARL,R26
00223c bbbf      	OUT  EEARH,R27
00223d 9ae0      	SBI  EECR,EERE
00223e b38d      	IN   R24,EEDR
00223f 17e8      	CP   R30,R24
002240 f019      	BREQ __EEPROMWRB0
002241 bbed      	OUT  EEDR,R30
002242 9ae2      	SBI  EECR,EEMWE
002243 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
002244 bf9f      	OUT  SREG,R25
002245 9508      	RET
                 
                 __SAVELOCR6:
002246 935a      	ST   -Y,R21
                 __SAVELOCR5:
002247 934a      	ST   -Y,R20
                 __SAVELOCR4:
002248 933a      	ST   -Y,R19
                 __SAVELOCR3:
002249 932a      	ST   -Y,R18
                 __SAVELOCR2:
00224a 931a      	ST   -Y,R17
00224b 930a      	ST   -Y,R16
00224c 9508      	RET
                 
                 __LOADLOCR6:
00224d 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00224e 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00224f 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
002250 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
002251 8119      	LDD  R17,Y+1
002252 8108      	LD   R16,Y
002253 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
002254 0fac      	ADD  R26,R28
002255 1fbd      	ADC  R27,R29
002256 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
002257 9007      	ELPM R0,Z+
002258 920d      	ST   X+,R0
002259 958a      	DEC  R24
00225a f7e1      	BRNE __INITLOC0
00225b 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega128 register use summary:
r0 :  98 r1 :  43 r2 :  22 r3 :   0 r4 :   4 r5 :   2 r6 :   4 r7 :   2 
r8 :   6 r9 :   2 r10:  23 r11:  10 r12:  23 r13:   5 r14:   0 r15:   8 
r16:  86 r17: 136 r18:  69 r19:  43 r20:  50 r21:  91 r22: 220 r23: 165 
r24: 206 r25: 140 r26:1046 r27: 441 r28:  73 r29:   6 r30:1984 r31: 661 
x  :  48 y  :1222 z  :  37 
Registers used: 33 out of 35 (94.3%)

ATmega128 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  41 add   :  40 
adiw  :  86 and   :   2 andi  :  12 asr   :   0 bclr  :   0 bld   :  16 
brbc  :   0 brbs  :   0 brcc  :   6 brcs  :   5 break :   0 breq  :  81 
brge  :  32 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  45 
brlt  :  10 brmi  :  10 brne  : 117 brpl  :  12 brsh  :  22 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 call  : 672 
cbi   :  14 cbr   :   0 clc   :   3 clh   :   0 cli   :  14 cln   :   0 
clr   : 214 cls   :   0 clt   :  13 clv   :   0 clz   :   2 com   :  16 
cp    :  39 cpc   :  61 cpi   : 203 cpse  :   0 dec   :  28 des   :   0 
elpm  :  30 eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   8 
ijmp  :   0 in    :  17 inc   :   4 jmp   :  90 ld    : 150 ldd   : 424 
ldi   :1526 lds   : 340 lpm   :   0 lsl   :  34 lsr   :   2 mov   : 121 
movw  : 157 mul   :  24 muls  :  12 mulsu :   0 neg   :   8 nop   :   0 
or    :   7 ori   :  17 out   : 108 pop   :  26 push  :  25 rcall : 139 
ret   :  90 reti  :   8 rjmp  : 296 rol   :  37 ror   :  12 sbc   :  25 
sbci  :  54 sbi   :  13 sbic  :  17 sbis  :  15 sbiw  :  62 sbr   :   2 
sbrc  :  11 sbrs  :  25 sec   :   4 seh   :   0 sei   :  14 sen   :   0 
ser   :   8 ses   :   0 set   :  12 sev   :   0 sez   :   1 sleep :   0 
spm   :   0 st    : 551 std   : 152 sts   : 230 sub   :  23 subi  :  92 
swap  :   2 tst   :  25 wdr   :   2 
Instructions used: 83 out of 117 (70.9%)

ATmega128 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0044b8  16446   1146  17592  131072  13.4%
[.dseg] 0x000100 0x000d6d      0   1133   1133    4351  26.0%
[.eseg] 0x000000 0x000004      0      4      4    4096   0.1%

Assembly complete, 0 errors, 13 warnings
