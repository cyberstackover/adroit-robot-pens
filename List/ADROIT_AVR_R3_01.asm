
;CodeVisionAVR C Compiler V2.05.3 Standard
;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com

;Chip type                : ATmega128
;Program type             : Application
;Clock frequency          : 16.000000 MHz
;Memory model             : Medium
;Optimize for             : Speed
;(s)printf features       : int, width
;(s)scanf features        : int, width
;External RAM size        : 0
;Data Stack size          : 2048 byte(s)
;Heap size                : 0 byte(s)
;Promote 'char' to 'int'  : No
;'char' is unsigned       : No
;8 bit enums              : Yes
;Global 'const' stored in FLASH     : Yes
;Enhanced function parameter passing: Yes
;Enhanced core instructions         : On
;Smart register allocation          : On
;Automatic register allocation      : On

	#pragma AVRPART ADMIN PART_NAME ATmega128
	#pragma AVRPART MEMORY PROG_FLASH 131072
	#pragma AVRPART MEMORY EEPROM 4096
	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU RAMPZ=0x3B
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F
	.EQU XMCRA=0x6D
	.EQU XMCRB=0x6C

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0100
	.EQU __SRAM_END=0x10FF
	.EQU __DSTACK_SIZE=0x0800
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __GETBRPF
	OUT  RAMPZ,R22
	ELPM R@0,Z
	.ENDM

	.MACRO __GETBRPF_INC
	OUT  RAMPZ,R22
	ELPM R@0,Z+
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X
	.ENDM

	.MACRO __GETD1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X+
	LD   R22,X
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z+
	LD   R23,Z
	MOVW R30,R0
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R1,X+
	LD   R24,X+
	LD   R25,X
	MOVW R26,R0
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
	.DEF _rx_wr_index0=R4
	.DEF _rx_rd_index0=R6
	.DEF _rx_counter0=R8
	.DEF _Enkoder1=R10
	.DEF _Enkoder2=R12

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _ext_int6_isr
	JMP  _ext_int7_isr
	JMP  _timer2_comp_isr
	JMP  0x00
	JMP  _timer1_capt_isr
	JMP  0x00
	JMP  0x00
	JMP  _timer1_ovf_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _usart0_rx_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer3_compc_isr
	JMP  0x00
	JMP  _usart1_rx_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_Melodi:
	.DB  0x4F,0xA,0x4F,0xA,0x0,0x0,0x4F,0xA
	.DB  0x0,0x0,0x2D,0x8,0x4F,0xA,0x0,0x0
	.DB  0x40,0xC,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x20,0x6,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x2D,0x8,0x0,0x0,0x0,0x0,0x20,0x6
	.DB  0x0,0x0,0x0,0x0,0x26,0x5,0x0,0x0
	.DB  0x0,0x0,0xE0,0x6,0x0,0x0,0xB7,0x7
	.DB  0x0,0x0,0x48,0x7,0xE0,0x6,0x0,0x0
	.DB  0x20,0x6,0x4F,0xA,0x40,0xC,0xC0,0xD
	.DB  0x0,0x0,0xE9,0xA,0x40,0xC,0x0,0x0
	.DB  0x4F,0xA,0x0,0x0,0x2D,0x8,0x2D,0x9
	.DB  0xB7,0x7,0x0,0x0,0x0,0x0,0x2D,0x8
	.DB  0x0,0x0,0x0,0x0,0x20,0x6,0x0,0x0
	.DB  0x0,0x0,0x26,0x5,0x0,0x0,0x0,0x0
	.DB  0xE0,0x6,0x0,0x0,0xB7,0x7,0x0,0x0
	.DB  0x48,0x7,0xE0,0x6,0x0,0x0,0x20,0x6
	.DB  0x4F,0xA,0x40,0xC,0xC0,0xD,0x0,0x0
	.DB  0xE9,0xA,0x40,0xC,0x0,0x0,0x4F,0xA
	.DB  0x0,0x0,0x2D,0x8,0x2D,0x9,0xB7,0x7
	.DB  0x0,0x0,0x0,0x0
_Tempo:
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x23,0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x1E,0x23
	.DB  0x23,0x23,0x18,0x1E,0x1E,0x1E,0x1E,0x1E
	.DB  0x1E,0x1E,0x1E,0x1E,0x1E,0x1E
_tbl10_G100:
	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
	.DB  0x1,0x0
_tbl16_G100:
	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0

;REGISTER BIT VARIABLES INITIALIZATION
__REG_BIT_VARS:
	.DW  0x0000

_0x126:
	.DB  0x64
_0x130:
	.DB  0x32
_0x13B:
	.DB  0x32
_0x19A:
	.DB  0x64
_0x1A4:
	.DB  0x64
_0x1D7:
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0
_0x1E0:
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0
_0x28A:
	.DB  0x0,0x0,0x0,0x0
_0x0:
	.DB  0x4B,0x61,0x6C,0x69,0x62,0x72,0x61,0x73
	.DB  0x69,0x20,0x53,0x65,0x6E,0x73,0x6F,0x72
	.DB  0x0,0x53,0x65,0x6C,0x65,0x73,0x61,0x69
	.DB  0x20,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E,0x3E
	.DB  0x3E,0x0,0x44,0x69,0x68,0x65,0x6E,0x74
	.DB  0x69,0x6B,0x61,0x6E,0x20,0x3E,0x3E,0x3E
	.DB  0x3E,0x3E,0x0,0x4D,0x65,0x72,0x61,0x68
	.DB  0x2D,0x48,0x69,0x6A,0x61,0x75,0x2D,0x42
	.DB  0x69,0x72,0x75,0x0,0x31,0x2E,0x57,0x61
	.DB  0x72,0x6E,0x61,0x20,0x4D,0x65,0x72,0x61
	.DB  0x68,0x20,0x3E,0x3E,0x0,0x54,0x65,0x6B
	.DB  0x61,0x6E,0x20,0x54,0x6F,0x6D,0x62,0x6F
	.DB  0x6C,0x20,0x31,0x3C,0x3C,0x0,0x32,0x2E
	.DB  0x57,0x61,0x72,0x6E,0x61,0x20,0x48,0x69
	.DB  0x6A,0x61,0x75,0x20,0x3E,0x3E,0x0,0x33
	.DB  0x2E,0x57,0x61,0x72,0x6E,0x61,0x20,0x42
	.DB  0x69,0x72,0x75,0x20,0x3E,0x3E,0x3E,0x0
	.DB  0x34,0x2E,0x57,0x61,0x72,0x6E,0x61,0x20
	.DB  0x48,0x69,0x74,0x61,0x6D,0x20,0x3E,0x3E
	.DB  0x0,0x48,0x69,0x74,0x61,0x6D,0x50,0x75
	.DB  0x74,0x69,0x68,0x2D,0x4D,0x65,0x72,0x61
	.DB  0x68,0x0,0x48,0x69,0x74,0x61,0x6D,0x50
	.DB  0x75,0x74,0x69,0x68,0x2D,0x48,0x69,0x6A
	.DB  0x61,0x75,0x0,0x48,0x69,0x74,0x61,0x6D
	.DB  0x50,0x75,0x74,0x69,0x68,0x2D,0x42,0x69
	.DB  0x72,0x75,0x20,0x0,0x31,0x2E,0x57,0x61
	.DB  0x72,0x6E,0x61,0x20,0x50,0x75,0x74,0x69
	.DB  0x68,0x20,0x3E,0x3E,0x0,0x32,0x2E,0x57
	.DB  0x61,0x72,0x6E,0x61,0x20,0x48,0x69,0x74
	.DB  0x61,0x6D,0x20,0x3E,0x3E,0x0,0x20,0x20
	.DB  0x20,0x2D,0x3D,0x57,0x45,0x4C,0x43,0x4F
	.DB  0x4D,0x45,0x3D,0x2D,0x20,0x20,0x0,0x20
	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x0
	.DB  0x20,0x20,0x2D,0x3D,0x52,0x4F,0x42,0x4F
	.DB  0x56,0x49,0x50,0x45,0x52,0x3D,0x2D,0x20
	.DB  0x0,0x20,0x20,0x52,0x45,0x41,0x44,0x59
	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E
	.DB  0x20,0x0,0x4D,0x41,0x4A,0x55,0x2D,0x57
	.DB  0x41,0x4B,0x54,0x55,0x0,0x25,0x64,0x20
	.DB  0x25,0x64,0x20,0x25,0x64,0x0,0x4D,0x41
	.DB  0x4A,0x55,0x2D,0x4A,0x41,0x52,0x41,0x4B
	.DB  0x0,0x4D,0x55,0x4E,0x44,0x55,0x52,0x2D
	.DB  0x57,0x41,0x4B,0x54,0x55,0x0,0x4D,0x55
	.DB  0x4E,0x44,0x55,0x52,0x2D,0x4A,0x41,0x52
	.DB  0x41,0x4B,0x0,0x4B,0x41,0x4E,0x41,0x4E
	.DB  0x2D,0x57,0x41,0x4B,0x54,0x55,0x0,0x4B
	.DB  0x41,0x4E,0x41,0x4E,0x2D,0x44,0x45,0x52
	.DB  0x41,0x4A,0x41,0x54,0x0,0x4B,0x49,0x52
	.DB  0x49,0x2D,0x57,0x41,0x4B,0x54,0x55,0x0
	.DB  0x4B,0x49,0x52,0x49,0x2D,0x44,0x45,0x52
	.DB  0x41,0x4A,0x41,0x54,0x0,0x47,0x41,0x52
	.DB  0x49,0x53,0x2D,0x4B,0x49,0x52,0x49,0x0
	.DB  0x57,0x41,0x4B,0x54,0x55,0x2D,0x4B,0x49
	.DB  0x52,0x49,0x0,0x47,0x41,0x52,0x49,0x53
	.DB  0x2D,0x4B,0x41,0x4E,0x41,0x4E,0x0,0x57
	.DB  0x41,0x4B,0x54,0x55,0x2D,0x4B,0x41,0x4E
	.DB  0x41,0x4E,0x0,0x33,0x4B,0x41,0x4E,0x41
	.DB  0x4E,0x2D,0x4B,0x41,0x4E,0x41,0x4E,0x0
	.DB  0x33,0x4B,0x41,0x4E,0x41,0x4E,0x2D,0x4C
	.DB  0x55,0x52,0x55,0x53,0x0,0x33,0x4B,0x49
	.DB  0x52,0x49,0x2D,0x4B,0x49,0x52,0x49,0x0
	.DB  0x33,0x4B,0x49,0x52,0x49,0x2D,0x4C,0x55
	.DB  0x52,0x55,0x53,0x0,0x50,0x45,0x52,0x45
	.DB  0x4D,0x50,0x41,0x54,0x41,0x4E,0x2D,0x4B
	.DB  0x41,0x4E,0x41,0x4E,0x0,0x50,0x45,0x52
	.DB  0x45,0x4D,0x50,0x41,0x54,0x41,0x4E,0x2D
	.DB  0x4B,0x49,0x52,0x49,0x0,0x50,0x45,0x52
	.DB  0x45,0x4D,0x50,0x41,0x54,0x41,0x4E,0x2D
	.DB  0x4C,0x55,0x52,0x55,0x53,0x0,0x4A,0x41
	.DB  0x4C,0x41,0x4E,0x20,0x42,0x45,0x42,0x41
	.DB  0x53,0x0,0x42,0x75,0x7A,0x7A,0x65,0x72
	.DB  0x20,0x53,0x74,0x61,0x74,0x75,0x73,0x3A
	.DB  0x0,0x4F,0x4E,0x0,0x4F,0x46,0x46,0x0
	.DB  0x20,0x2D,0x3D,0x42,0x75,0x7A,0x7A,0x65
	.DB  0x72,0x20,0x4E,0x61,0x64,0x61,0x3D,0x2D
	.DB  0x0,0x50,0x45,0x53,0x41,0x4E,0x20,0x3A
	.DB  0x0,0x44,0x45,0x4C,0x41,0x59,0x0,0x47
	.DB  0x52,0x49,0x50,0x50,0x45,0x52,0x3A,0x0
	.DB  0x42,0x55,0x4B,0x41,0x20,0x0,0x54,0x55
	.DB  0x54,0x55,0x50,0x0,0x56,0x41,0x52,0x49
	.DB  0x41,0x54,0x49,0x46,0x20,0x3A,0x20,0x0
	.DB  0x4C,0x45,0x4E,0x47,0x41,0x4E,0x3A,0x0
	.DB  0x4E,0x41,0x49,0x4B,0x0,0x54,0x55,0x52
	.DB  0x55,0x4E,0x0,0x53,0x55,0x44,0x55,0x54
	.DB  0x20,0x3A,0x20,0x0,0x50,0x4F,0x4C,0x41
	.DB  0x3A,0x0,0x41,0x4E,0x47,0x4B,0x41,0x54
	.DB  0x0,0x54,0x41,0x52,0x55,0x48,0x0,0x53
	.DB  0x74,0x61,0x6E,0x64,0x42,0x79,0x2E,0x2E
	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E
	.DB  0x0,0x47,0x4F,0x4F,0x4F,0x4F,0x4F,0x4F
	.DB  0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E,0x2E
	.DB  0x2E,0x0,0x53,0x45,0x54,0x20,0x50,0x49
	.DB  0x44,0x0,0x31,0x3A,0x20,0x4B,0x50,0x20
	.DB  0x20,0x20,0x32,0x3A,0x20,0x4B,0x44,0x0
	.DB  0x4B,0x50,0x0
_0x2080060:
	.DB  0x1
_0x2080000:
	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
	.DB  0x0

__GLOBAL_INI_TBL:
	.DW  0x01
	.DW  0x02
	.DD  __REG_BIT_VARS*2

	.DW  0x01
	.DW  _LastSpeed_S0000048000
	.DD  _0x126*2

	.DW  0x01
	.DW  _LastSpeed_S0000049000
	.DD  _0x130*2

	.DW  0x01
	.DW  _LastSpeed_S000004A000
	.DD  _0x13B*2

	.DW  0x01
	.DW  _LastSpeed_S000004F000
	.DD  _0x19A*2

	.DW  0x01
	.DW  _LastSpeed_S0000050000
	.DD  _0x1A4*2

	.DW  0x04
	.DW  0x0A
	.DD  _0x28A*2

	.DW  0x01
	.DW  __seed_G104
	.DD  _0x2080060*2

_0xFFFFFFFF:
	.DW  0

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30
	STS  XMCRB,R30

;DISABLE WATCHDOG
	LDI  R31,0x18
	OUT  WDTCR,R31
	OUT  WDTCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,LOW(__SRAM_START)
	LDI  R27,HIGH(__SRAM_START)
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	OUT  RAMPZ,R29
	ELPM R24,Z+
	ELPM R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	ELPM R26,Z+
	ELPM R27,Z+
	ELPM R0,Z+
	ELPM R1,Z+
	ELPM R28,Z+
	ELPM R29,Z+
	MOVW R22,R30
	IN   R29,RAMPZ
	MOVW R30,R0
	OUT  RAMPZ,R28
__GLOBAL_INI_LOOP:
	ELPM R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0

	.DSEG
	.ORG 0x900

	.CSEG
;/*****************************************************
;Project : ADROIT AVR Rev.3
;Version : 1
;Date    : 3/13/2014
;Author  : Eko Henfri Binugroho
;Company : ER2C
;
;Chip type           : ATmega128
;Program type        : Application
;Clock frequency     : 16,000000 MHz
;Memory model        : Small
;External SRAM size  : 0
;Data Stack size     : 1024
;*****************************************************/
;
;#include <stdio.h>
;#include <mem.h>
;#include <math.h>
;#include "Include/mySystem.h"
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
;	sudut -> Y+0
_HitungSudut2:
	ST   -Y,R27
	ST   -Y,R26
;	sudut -> Y+0
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(200)
	CALL __MULB1W2U
	MOVW R26,R30
	LDI  R30,LOW(18)
	LDI  R31,HIGH(18)
	CALL __DIVW21U
	SUBI R30,LOW(-500)
	SBCI R31,HIGH(-500)
	ADIW R28,2
	RET
_SudutServo6:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut2
	OUT  0x2A+1,R31
	OUT  0x2A,R30
	RJMP _0x20A000B
_SudutServo7:
	ST   -Y,R26
;	posisi -> Y+0
	LD   R26,Y
	CLR  R27
	RCALL _HitungSudut2
	OUT  0x28+1,R31
	OUT  0x28,R30
	RJMP _0x20A000B
_SudutServo8:
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	posisi -> Y+2
;	dServo8 -> R16,R17
	LDD  R26,Y+2
	CLR  R27
	RCALL _HitungSudut2
	MOVW R16,R30
	STS  121,R17
	STS  120,R16
	LDD  R17,Y+1
	LDD  R16,Y+0
	RJMP _0x20A000A
_SetDataMotorPWM:
	ST   -Y,R27
	ST   -Y,R26
;	Ki -> Y+2
;	Ka -> Y+0
	CLT
	BLD  R2,0
	LDD  R26,Y+3
	TST  R26
	BRPL _0x3
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	CALL __ANEGW1
	MOV  R30,R31
	LDI  R31,0
	STS  133,R30
	LDD  R30,Y+2
	NEG  R30
	STS  132,R30
	CBI  0x3,5
	RJMP _0x6
_0x3:
	LDD  R30,Y+3
	STS  133,R30
	LDD  R30,Y+2
	STS  132,R30
	SBI  0x3,5
_0x6:
	LDD  R26,Y+1
	TST  R26
	BRPL _0x9
	LD   R30,Y
	LDD  R31,Y+1
	CALL __ANEGW1
	MOV  R30,R31
	LDI  R31,0
	STS  135,R30
	LD   R30,Y
	NEG  R30
	STS  134,R30
	CBI  0x3,2
	RJMP _0xC
_0x9:
	LDD  R30,Y+1
	STS  135,R30
	LD   R30,Y
	STS  134,R30
	SBI  0x3,2
_0xC:
	RJMP _0x20A000C
_StopPWM:
	LDI  R30,LOW(0)
	STS  135,R30
	STS  134,R30
	STS  133,R30
	STS  132,R30
	RET
_SetDataMotorPID:
	ST   -Y,R26
;	dmKi -> Y+1
;	dmKa -> Y+0
	LDD  R26,Y+1
	CPI  R26,0
	BRGE _0xF
	LDD  R30,Y+1
	NEG  R30
	STS  _dMotor1,R30
	CBI  0x3,5
	RJMP _0x12
_0xF:
	LDD  R30,Y+1
	STS  _dMotor1,R30
	SBI  0x3,5
_0x12:
	LD   R26,Y
	CPI  R26,0
	BRGE _0x15
	LD   R30,Y
	NEG  R30
	STS  _dMotor2,R30
	CBI  0x3,2
	RJMP _0x18
_0x15:
	LD   R30,Y
	STS  _dMotor2,R30
	SBI  0x3,2
_0x18:
	SET
	BLD  R2,0
	JMP  _0x20A0007
_PIDmotor2:
	CALL __SAVELOCR4
;	Error2 -> R17
;	U -> R18,R19
	LDS  R26,_dMotor2
	CPI  R26,LOW(0x1)
	BRGE PC+3
	JMP _0x1B
	LDS  R26,_dSpeed2
	LDS  R30,_dMotor2
	SUB  R30,R26
	MOV  R17,R30
	LDI  R26,LOW(10)
	MULS R17,R26
	MOVW R18,R0
	LDS  R30,_lErrorM2_S0000008000
	ADD  R30,R17
	LDS  R26,_iErrorM2_S0000008000
	ADD  R30,R26
	STS  _iErrorM2_S0000008000,R30
	LDS  R26,_iErrorM2_S0000008000
	CPI  R26,LOW(0x51)
	BRLT _0x1C
	LDI  R30,LOW(80)
	RJMP _0x272
_0x1C:
	LDS  R26,_iErrorM2_S0000008000
	CPI  R26,LOW(0xB0)
	BRGE _0x1E
	LDI  R30,LOW(176)
_0x272:
	STS  _iErrorM2_S0000008000,R30
_0x1E:
	LDS  R30,_iErrorM2_S0000008000
	LDI  R26,LOW(5)
	MULS R30,R26
	MOVW R30,R0
	__ADDWRR 18,19,30,31
	__CPWRN 18,19,401
	BRLT _0x1F
	LDI  R30,LOW(1)
	STS  135,R30
	LDI  R30,LOW(144)
	RJMP _0x273
_0x1F:
	CLR  R0
	CP   R0,R18
	CPC  R0,R19
	BRGE _0x21
	STS  135,R19
	STS  134,R18
	RJMP _0x22
_0x21:
	LDI  R30,LOW(0)
	STS  135,R30
_0x273:
	STS  134,R30
_0x22:
	STS  _lErrorM2_S0000008000,R17
	RJMP _0x23
_0x1B:
	LDI  R30,LOW(0)
	STS  135,R30
	STS  134,R30
	STS  _iErrorM2_S0000008000,R30
_0x23:
	CALL __LOADLOCR4
	RJMP _0x20A000C
_PIDmotor1:
	CALL __SAVELOCR4
;	Error1 -> R17
;	U -> R18,R19
	LDS  R26,_dMotor1
	CPI  R26,LOW(0x1)
	BRGE PC+3
	JMP _0x24
	LDS  R26,_dSpeed1
	LDS  R30,_dMotor1
	SUB  R30,R26
	MOV  R17,R30
	LDS  R30,_lErrorM1_S0000009000
	LDI  R26,LOW(10)
	MULS R30,R26
	MOVW R18,R0
	ADD  R30,R17
	LDS  R26,_iErrorM1_S0000009000
	ADD  R30,R26
	STS  _iErrorM1_S0000009000,R30
	LDS  R26,_iErrorM1_S0000009000
	CPI  R26,LOW(0x51)
	BRLT _0x25
	LDI  R30,LOW(80)
	RJMP _0x274
_0x25:
	LDS  R26,_iErrorM1_S0000009000
	CPI  R26,LOW(0xB0)
	BRGE _0x27
	LDI  R30,LOW(176)
_0x274:
	STS  _iErrorM1_S0000009000,R30
_0x27:
	LDS  R30,_iErrorM1_S0000009000
	LDI  R26,LOW(5)
	MULS R30,R26
	MOVW R30,R0
	__ADDWRR 18,19,30,31
	__CPWRN 18,19,401
	BRLT _0x28
	LDI  R30,LOW(1)
	STS  133,R30
	LDI  R30,LOW(144)
	RJMP _0x275
_0x28:
	CLR  R0
	CP   R0,R18
	CPC  R0,R19
	BRGE _0x2A
	STS  133,R19
	STS  132,R18
	RJMP _0x2B
_0x2A:
	LDI  R30,LOW(0)
	STS  133,R30
_0x275:
	STS  132,R30
_0x2B:
	STS  _lErrorM1_S0000009000,R17
	RJMP _0x2C
_0x24:
	LDI  R30,LOW(0)
	STS  133,R30
	STS  132,R30
	STS  _iErrorM1_S0000009000,R30
_0x2C:
	CALL __LOADLOCR4
	RJMP _0x20A000C
_LCD_Init_Cmd:
	ST   -Y,R26
;	xData -> Y+0
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	ORI  R30,4
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	RJMP _0x20A000B
_LCD_Perintah:
	ST   -Y,R26
;	xData -> Y+0
	CBI  0x1B,0
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	ORI  R30,LOW(0xC)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USB 27
	LD   R30,Y
	SWAP R30
	ANDI R30,0xF0
	ORI  R30,LOW(0xC)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USW 2800
	SBI  0x1B,2
	RJMP _0x20A000B
_LCD_Data:
	ST   -Y,R26
;	xData -> Y+0
	SBI  0x1B,0
	LD   R30,Y
	ANDI R30,LOW(0xF0)
	ORI  R30,LOW(0xD)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USB 27
	LD   R30,Y
	SWAP R30
	ANDI R30,0xF0
	ORI  R30,LOW(0xD)
	OUT  0x1B,R30
	__DELAY_USB 5
	CBI  0x1B,2
	__DELAY_USB 213
	SBI  0x1B,2
	RJMP _0x20A000B
_LCD_Init:
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(48)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(5)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(48)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(48)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _delay_ms
	LDI  R26,LOW(32)
	RCALL _LCD_Init_Cmd
	LDI  R26,LOW(40)
	RCALL _LCD_Perintah
	LDI  R26,LOW(16)
	RCALL _LCD_Perintah
	LDI  R26,LOW(12)
	RCALL _LCD_Perintah
	LDI  R26,LOW(6)
	RCALL _LCD_Perintah
	RJMP _0x20A000E
_LCD_GotoXY:
	ST   -Y,R26
	ST   -Y,R17
;	x -> Y+2
;	y -> Y+1
;	baris -> R17
	LDD  R30,Y+1
	CPI  R30,0
	BRNE _0x3F
	LDD  R26,Y+2
	SUBI R26,-LOW(128)
	RJMP _0x276
_0x3F:
	LDD  R26,Y+2
	SUBI R26,-LOW(192)
_0x276:
	RCALL _LCD_Perintah
	RJMP _0x20A0009
_LCD_TextF:
	CALL __PUTPARD2
;	*text -> Y+0
_0x41:
	CALL __GETD1S0
	__GETBRPF 30
	CPI  R30,0
	BREQ _0x43
	CALL __GETD1S0
	__GETBRPF 26
	RCALL _LCD_Data
	MOVW R26,R28
	CALL __GETD1P_INC
	__ADDD1N 1
	CALL __PUTDP1_DEC
	__SUBD1N 1
	RJMP _0x41
_0x43:
	RJMP _0x20A000C
;	*text -> Y+0
_LCD_TulisF:
	CALL __PUTPARD2
;	Baris -> Y+4
;	*text -> Y+0
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _LCD_GotoXY
	CALL __GETD2S0
	RCALL _LCD_TextF
	ADIW R28,5
	RET
_LCD_Hapus:
_0x20A000E:
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	RET
;	Baris -> Y+1
;	i -> R17
;	Baris -> Y+1
;	i -> R17
_LCD_HapusKanan:
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	Baris -> Y+2
;	i -> R17
;	j -> R16
	LDD  R30,Y+2
	LDI  R26,LOW(64)
	MUL  R30,R26
	MOVW R30,R0
	SUBI R30,-LOW(128)
	MOV  R16,R30
	LDI  R17,LOW(15)
_0x4E:
	LDI  R30,LOW(255)
	CP   R30,R17
	BRGE _0x4F
	MOV  R26,R17
	ADD  R26,R16
	RCALL _LCD_Perintah
	LDI  R26,LOW(32)
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,1
	RJMP _0x4E
_0x4F:
	LDD  R17,Y+1
	LDD  R16,Y+0
	RJMP _0x20A000A
_LCD_TulisKiri:
	CALL __PUTPARD2
	ST   -Y,R17
;	Baris -> Y+5
;	*text -> Y+1
;	i -> R17
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+6
	RCALL _LCD_GotoXY
	LDI  R17,LOW(0)
_0x51:
	CPI  R17,16
	BRSH _0x52
	MOV  R30,R17
	__GETD2S 1
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __ADDD12
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,-1
	RJMP _0x51
_0x52:
	LDD  R17,Y+0
	ADIW R28,6
	RET
_LCD_TulisKanan:
	CALL __PUTPARD2
	ST   -Y,R17
	ST   -Y,R16
;	Baris -> Y+6
;	*text -> Y+2
;	i -> R17
;	j -> R16
	LDD  R30,Y+6
	LDI  R26,LOW(64)
	MUL  R30,R26
	MOVW R30,R0
	SUBI R30,-LOW(128)
	MOV  R16,R30
	LDI  R17,LOW(15)
_0x54:
	LDI  R30,LOW(255)
	CP   R30,R17
	BRGE _0x55
	MOV  R26,R17
	ADD  R26,R16
	RCALL _LCD_Perintah
	MOV  R30,R17
	__GETD2S 2
	CALL __CBD1
	CALL __ADDD12
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,1
	RJMP _0x54
_0x55:
	RJMP _0x20A000D
_LCD_TulisTengah:
	CALL __PUTPARD2
	ST   -Y,R17
	ST   -Y,R16
;	Baris -> Y+6
;	*text -> Y+2
;	i -> R17
;	j -> R16
	LDD  R30,Y+6
	LDI  R26,LOW(64)
	MUL  R30,R26
	MOVW R30,R0
	SUBI R30,-LOW(128)
	MOV  R16,R30
	LDI  R17,LOW(7)
_0x57:
	LDI  R30,LOW(255)
	CP   R30,R17
	BRGE _0x58
	MOV  R26,R17
	ADD  R26,R16
	RCALL _LCD_Perintah
	MOV  R30,R17
	__GETD2S 2
	CALL __CBD1
	CALL __ADDD12
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	MOV  R30,R16
	SUB  R30,R17
	SUBI R30,-LOW(15)
	MOV  R26,R30
	RCALL _LCD_Perintah
	MOV  R30,R17
	__GETD2S 2
	CALL __CBD1
	CALL __SWAPD12
	CALL __SUBD12
	__ADDD1N 15
	__GETBRPF 26
	RCALL _LCD_Data
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
	SUBI R17,1
	RJMP _0x57
_0x58:
_0x20A000D:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,7
	RET
;	Baris -> Y+6
;	*text -> Y+2
;	i -> R17
;	j -> R16
_LCD_Angka4:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+0
	LDD  R26,Y+1
	TST  R26
	BRPL _0x5C
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ST   Y,R30
	STD  Y+1,R31
	LDI  R26,LOW(45)
	RCALL _LCD_Data
_0x5C:
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MODW21
	MOVW R26,R30
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __MODW21
	MOVW R26,R30
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	JMP  _0x20A0007
_LCD_Angka3:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+0
	LDD  R26,Y+1
	TST  R26
	BRPL _0x5D
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ST   Y,R30
	STD  Y+1,R31
	LDI  R26,LOW(45)
	RCALL _LCD_Data
_0x5D:
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	CALL __MODW21
	MOVW R26,R30
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __DIVW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	LD   R26,Y
	LDD  R27,Y+1
	LDI  R30,LOW(10)
	LDI  R31,HIGH(10)
	CALL __MODW21
	SUBI R30,-LOW(48)
	MOV  R26,R30
	RCALL _LCD_Data
	JMP  _0x20A0007
;	x -> Y+0
;	x -> Y+0
;	x -> Y+1
;	i -> R17
_I2C_Init:
	LDI  R30,LOW(0)
	STS  113,R30
	LDI  R30,LOW(72)
	STS  112,R30
	RET
;	address -> Y+1
;	twst -> R17
;	address -> Y+1
;	twst -> R17
;	address -> Y+0
;	data -> Y+1
;	twst -> R17
_BuzzerOff:
	LDI  R30,LOW(0)
	OUT  0x33,R30
	CBI  0x18,4
	OUT  0x30,R30
	RET
_FBuzzer:
	ST   -Y,R27
	ST   -Y,R26
;	x -> Y+0
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x7D)
	LDI  R30,HIGH(0x7D)
	CPC  R27,R30
	BRLO _0x92
	CPI  R26,LOW(0x2711)
	LDI  R30,HIGH(0x2711)
	CPC  R27,R30
	BRLO _0x93
_0x92:
	RJMP _0x91
_0x93:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x7D0)
	LDI  R30,HIGH(0x7D0)
	CPC  R27,R30
	BRLO _0x94
	LDI  R30,LOW(26)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x7A120
	CALL __DIVD21
	OUT  0x31,R30
_0x94:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x3E8)
	LDI  R30,HIGH(0x3E8)
	CPC  R27,R30
	BRLO _0x95
	LDI  R30,LOW(27)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x3D090
	CALL __DIVD21
	RJMP _0x278
_0x95:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x1F4)
	LDI  R30,HIGH(0x1F4)
	CPC  R27,R30
	BRLO _0x97
	LDI  R30,LOW(28)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x1E848
	CALL __DIVD21
	RJMP _0x278
_0x97:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0xFA)
	LDI  R30,HIGH(0xFA)
	CPC  R27,R30
	BRLO _0x99
	LDI  R30,LOW(29)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	CLR  R22
	CLR  R23
	__GETD2N 0x107AC
	CALL __DIVD21
	RJMP _0x278
_0x99:
	LDI  R30,LOW(30)
	OUT  0x33,R30
	LDI  R30,LOW(0)
	OUT  0x32,R30
	LD   R30,Y
	LDD  R31,Y+1
	LDI  R26,LOW(33750)
	LDI  R27,HIGH(33750)
	CALL __DIVW21U
_0x278:
	OUT  0x31,R30
	RJMP _0x9B
_0x91:
	RCALL _BuzzerOff
_0x9B:
	JMP  _0x20A0007
_Buzzer:
	ST   -Y,R27
	ST   -Y,R26
;	Frek -> Y+2
;	Tempo -> Y+0
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	RCALL _FBuzzer
	LD   R26,Y
	LDD  R27,Y+1
	CALL _delay_ms
	RCALL _BuzzerOff
_0x20A000C:
	ADIW R28,4
	RET
_usart0_rx_isr:
	ST   -Y,R26
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	ST   -Y,R17
	ST   -Y,R16
;	status0 -> R17
;	data0 -> R16
	IN   R17,11
	IN   R16,12
	MOV  R30,R17
	ANDI R30,LOW(0x1C)
	BRNE _0x9C
	MOVW R30,R4
	ADIW R30,1
	MOVW R4,R30
	SBIW R30,1
	SUBI R30,LOW(-_rx_buffer0)
	SBCI R31,HIGH(-_rx_buffer0)
	ST   Z,R16
	LDI  R30,LOW(512)
	LDI  R31,HIGH(512)
	CP   R30,R4
	CPC  R31,R5
	BRNE _0x9D
	CLR  R4
	CLR  R5
_0x9D:
	MOVW R30,R8
	ADIW R30,1
	MOVW R8,R30
	CPI  R30,LOW(0x200)
	LDI  R26,HIGH(0x200)
	CPC  R31,R26
	BRNE _0x9E
	CLR  R8
	CLR  R9
	SET
	BLD  R2,5
_0x9E:
_0x9C:
	LD   R16,Y+
	LD   R17,Y+
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R26,Y+
	RETI
_getchar:
	ST   -Y,R17
;	data -> R17
_0x9F:
	MOV  R0,R8
	OR   R0,R9
	BREQ _0x9F
	MOVW R30,R6
	ADIW R30,1
	MOVW R6,R30
	SBIW R30,1
	SUBI R30,LOW(-_rx_buffer0)
	SBCI R31,HIGH(-_rx_buffer0)
	LD   R17,Z
	LDI  R30,LOW(512)
	LDI  R31,HIGH(512)
	CP   R30,R6
	CPC  R31,R7
	BRNE _0xA2
	CLR  R6
	CLR  R7
_0xA2:
	cli
	MOVW R30,R8
	SBIW R30,1
	MOVW R8,R30
	sei
	MOV  R30,R17
	LD   R17,Y+
	RET
_usart1_rx_isr:
	ST   -Y,R26
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	SBIW R28,5
;	Pointer_X -> Y+4
;	Pointer_Y -> Y+3
;	Flag_Serial_Step -> Y+2
;	status -> Y+1
;	data -> Y+0
	LDS  R30,155
	STD  Y+1,R30
	LDS  R30,156
	ST   Y,R30
	LDD  R30,Y+1
	ANDI R30,LOW(0x1C)
	BRNE _0xA3
	LDS  R30,_rx_wr_index1
	LDI  R31,0
	SUBI R30,LOW(-_rx_buffer1)
	SBCI R31,HIGH(-_rx_buffer1)
	LD   R26,Y
	STD  Z+0,R26
	LDS  R30,_rx_wr_index1
	SUBI R30,-LOW(1)
	STS  _rx_wr_index1,R30
	LDI  R31,0
	CPI  R30,LOW(0x200)
	LDI  R26,HIGH(0x200)
	CPC  R31,R26
	BRNE _0xA4
	LDI  R30,LOW(0)
	STS  _rx_wr_index1,R30
_0xA4:
	LDS  R30,_rx_counter1
	SUBI R30,-LOW(1)
	STS  _rx_counter1,R30
	LDI  R31,0
	CPI  R30,LOW(0x200)
	LDI  R26,HIGH(0x200)
	CPC  R31,R26
	BRNE _0xA5
	LDI  R30,LOW(0)
	STS  _rx_counter1,R30
	SET
	BLD  R2,6
_0xA5:
_0xA3:
	ADIW R28,5
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R26,Y+
	RETI
_BacaSerial1:
	ST   -Y,R27
	ST   -Y,R26
	CALL __SAVELOCR4
;	TimeOut -> Y+4
;	i -> R16,R17
;	data -> R19
	CLT
	BLD  R2,2
	__GETWRN 16,17,0
_0xA7:
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	CP   R16,R30
	CPC  R17,R31
	BRSH _0xA8
	LDS  R30,_rx_counter1
	CPI  R30,0
	BREQ _0xA9
	SET
	BLD  R2,2
	LDS  R30,_rx_rd_index1
	LDI  R31,0
	SUBI R30,LOW(-_rx_buffer1)
	SBCI R31,HIGH(-_rx_buffer1)
	LD   R19,Z
	LDS  R30,_rx_rd_index1
	SUBI R30,-LOW(1)
	STS  _rx_rd_index1,R30
	LDI  R31,0
	CPI  R30,LOW(0x200)
	LDI  R26,HIGH(0x200)
	CPC  R31,R26
	BRNE _0xAA
	LDI  R30,LOW(0)
	STS  _rx_rd_index1,R30
_0xAA:
	cli
	LDS  R30,_rx_counter1
	SUBI R30,LOW(1)
	STS  _rx_counter1,R30
	sei
	MOV  R30,R19
	CALL __LOADLOCR4
	JMP  _0x20A0006
_0xA9:
	__DELAY_USB 5
	__ADDWRN 16,17,1
	RJMP _0xA7
_0xA8:
	LDI  R30,LOW(0)
	CALL __LOADLOCR4
	JMP  _0x20A0006
;	data -> R17
_putchar1:
	ST   -Y,R26
;	c -> Y+0
_0xAF:
	LDS  R30,155
	ANDI R30,LOW(0x20)
	BREQ _0xAF
	LD   R30,Y
	STS  156,R30
_0x20A000B:
	ADIW R28,1
	RET
_BacaSensor:
	ST   -Y,R26
;	Alamat -> Y+1
;	Protokol -> Y+0
	LDD  R30,Y+1
	LD   R26,Y
	OR   R30,R26
	MOV  R26,R30
	RCALL _putchar1
	JMP  _0x20A0007
;	Alamat -> Y+2
;	Protokol -> Y+1
;	filter -> R17
_TungguTombolKalibrasiEx:
	ST   -Y,R26
	ST   -Y,R17
;	Alamat -> Y+2
;	Protokol -> Y+1
;	filter -> R17
	LDI  R17,0
_0xB8:
	CPI  R17,101
	BRSH _0xBA
	SBIC 0x13,3
	LDI  R17,LOW(0)
	SUBI R17,-1
	RJMP _0xB8
_0xBA:
	SBIC 0x13,3
	RJMP _0xBC
	LDD  R30,Y+2
	LDD  R26,Y+1
	OR   R30,R26
	MOV  R26,R30
	RCALL _putchar1
	LDI  R30,LOW(1)
	RJMP _0x20A0009
_0xBC:
	LDI  R26,LOW(0)
	RCALL _putchar1
	LDI  R30,LOW(0)
_0x20A0009:
	LDD  R17,Y+0
_0x20A000A:
	ADIW R28,3
	RET
_PesanKalibrasiBerhasil:
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,0
	RCALL _LCD_TulisF
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,17
	RJMP _0x20A0008
_PesanKalibrasiGagal:
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,0
	RCALL _LCD_TulisF
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,34
_0x20A0008:
	RCALL _LCD_TulisKiri
	RET
;	Alamat -> Y+0
;	Alamat -> Y+1
;	Protocol -> Y+0
_KalibrasiHitamPutihEx:
	ST   -Y,R26
;	Alamat -> Y+1
;	Protocol -> Y+0
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,0
	RCALL _LCD_TulisF
	LD   R26,Y
	CPI  R26,LOW(0xC0)
	BRNE _0xCC
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,153
	RCALL _LCD_TulisF
	RJMP _0xCD
_0xCC:
	LD   R26,Y
	CPI  R26,LOW(0xA0)
	BRNE _0xCE
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,170
	RCALL _LCD_TulisF
	RJMP _0xCF
_0xCE:
	LD   R26,Y
	CPI  R26,LOW(0x90)
	BRNE _0xD0
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,187
	RCALL _LCD_TulisF
	RJMP _0xD1
_0xD0:
	RCALL _PesanKalibrasiGagal
	LDI  R30,LOW(0)
	JMP  _0x20A0007
_0xD1:
_0xCF:
_0xCD:
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	RCALL _Buzzer
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
	LDI  R26,LOW(1)
	RCALL _LCD_Perintah
	LDD  R30,Y+1
	LD   R26,Y
	OR   R30,R26
	MOV  R26,R30
	RCALL _putchar1
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,204
	RCALL _LCD_TulisKiri
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,85
	RCALL _LCD_TulisKanan
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	RCALL _TungguTombolKalibrasiEx
	CPI  R30,0
	BREQ _0xD2
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(200)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R26,LOW(0)
	RCALL _LCD_HapusKanan
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,221
	RCALL _LCD_TulisKiri
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	RCALL _TungguTombolKalibrasiEx
	CPI  R30,0
	BREQ _0xD3
	LDI  R30,LOW(3000)
	LDI  R31,HIGH(3000)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(200)
	LDI  R27,0
	RCALL _Buzzer
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	RCALL _BacaSerial1
	MOV  R26,R30
	LD   R30,Y
	CP   R30,R26
	BRNE _0xD4
	RCALL _PesanKalibrasiBerhasil
	LDI  R30,LOW(1)
	JMP  _0x20A0007
_0xD4:
_0xD3:
_0xD2:
	RCALL _PesanKalibrasiGagal
	LDI  R30,LOW(0)
	JMP  _0x20A0007
_ext_int6_isr:
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	SBIS 0x1,6
	RJMP _0xD5
	SBIS 0x16,0
	RJMP _0xD6
	cli
	MOVW R30,R10
	SBIW R30,1
	MOVW R10,R30
	sei
	RJMP _0xD7
_0xD6:
	cli
	MOVW R30,R10
	ADIW R30,1
	MOVW R10,R30
	sei
_0xD7:
	RJMP _0xD8
_0xD5:
	SBIS 0x16,0
	RJMP _0xD9
	cli
	MOVW R30,R10
	ADIW R30,1
	MOVW R10,R30
	sei
	RJMP _0xDA
_0xD9:
	cli
	MOVW R30,R10
	SBIW R30,1
	MOVW R10,R30
	sei
_0xDA:
_0xD8:
	LDS  R30,_dCounter1
	SUBI R30,-LOW(1)
	STS  _dCounter1,R30
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	RETI
_ext_int7_isr:
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	SBIS 0x1,7
	RJMP _0xDB
	SBIS 0x16,2
	RJMP _0xDC
	cli
	MOVW R30,R12
	ADIW R30,1
	MOVW R12,R30
	sei
	RJMP _0xDD
_0xDC:
	cli
	MOVW R30,R12
	SBIW R30,1
	MOVW R12,R30
	sei
_0xDD:
	RJMP _0xDE
_0xDB:
	SBIS 0x16,2
	RJMP _0xDF
	cli
	MOVW R30,R12
	SBIW R30,1
	MOVW R12,R30
	sei
	RJMP _0xE0
_0xDF:
	cli
	MOVW R30,R12
	ADIW R30,1
	MOVW R12,R30
	sei
_0xE0:
_0xDE:
	LDS  R30,_dCounter2
	SUBI R30,-LOW(1)
	STS  _dCounter2,R30
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	RETI
_timer3_compc_isr:
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	LDI  R26,LOW(_usCounter)
	LDI  R27,HIGH(_usCounter)
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	SBIW R30,1
	LDI  R26,LOW(_ServoCounter_S000003E000)
	LDI  R27,HIGH(_ServoCounter_S000003E000)
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	CPI  R30,LOW(0x51)
	LDI  R26,HIGH(0x51)
	CPC  R31,R26
	BRLO _0xE2
	LDS  R26,_ServoCounter_S000003E000
	LDS  R27,_ServoCounter_S000003E000+1
	CPI  R26,LOW(0x321)
	LDI  R30,HIGH(0x321)
	CPC  R27,R30
	BRLO _0xE3
	LDI  R30,LOW(0)
	STS  _ServoCounter_S000003E000,R30
	STS  _ServoCounter_S000003E000+1,R30
_0xE3:
_0xE2:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	RETI
_timer1_capt_isr:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,RAMPZ
	ST   -Y,R30
	IN   R30,SREG
	ST   -Y,R30
	sei
	LDS  R26,_ServoCounter_S000003F000
	SUBI R26,-LOW(1)
	STS  _ServoCounter_S000003F000,R26
	CPI  R26,LOW(0x5)
	BRLO _0xE4
	LDI  R30,LOW(0)
	STS  _ServoCounter_S000003F000,R30
	LDI  R30,LOW(170)
	OUT  0x2F,R30
	RJMP _0xE5
_0xE4:
	LDI  R30,LOW(2)
	OUT  0x2F,R30
	CBI  0x18,5
	CBI  0x18,6
	CBI  0x18,7
_0xE5:
	SBRS R2,1
	RJMP _0xEC
	LDS  R26,_TempoTick_S000003F000
	SUBI R26,-LOW(1)
	STS  _TempoTick_S000003F000,R26
	LDS  R30,_LaguTick_S000003F000
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	CP   R26,R30
	BRLO _0xED
	LDI  R30,LOW(0)
	STS  _TempoTick_S000003F000,R30
	LDS  R30,_LaguTick_S000003F000
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW2PF
	CALL _FBuzzer
	LDS  R26,_LaguTick_S000003F000
	SUBI R26,-LOW(1)
	STS  _LaguTick_S000003F000,R26
	CPI  R26,LOW(0x4E)
	BRLO _0xEE
	LDI  R30,LOW(0)
	STS  _LaguTick_S000003F000,R30
_0xEE:
_0xED:
_0xEC:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R30,Y+
	OUT  RAMPZ,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
_timer1_ovf_isr:
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	LDS  R30,_DTimeTick
	SUBI R30,-LOW(1)
	STS  _DTimeTick,R30
	LDS  R26,_DTimeTick
	CPI  R26,LOW(0xC9)
	BRLO _0xEF
	LDI  R30,LOW(0)
	STS  _DTimeTick,R30
	LDI  R26,LOW(_DTime)
	LDI  R27,HIGH(_DTime)
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
_0xEF:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	RETI
_timer2_comp_isr:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,RAMPZ
	ST   -Y,R30
	IN   R30,SREG
	ST   -Y,R30
	LDS  R30,_SysTick
	SUBI R30,-LOW(1)
	STS  _SysTick,R30
	sei
	LDS  R26,_Timer2Tick_S0000041000
	SUBI R26,-LOW(1)
	STS  _Timer2Tick_S0000041000,R26
	CPI  R26,LOW(0x4)
	BRNE _0xF0
	LDS  R30,__dCounter1_S0000041000
	LDS  R26,_dCounter1
	CP   R30,R26
	BRSH _0xF1
	LDS  R26,__dCounter1_S0000041000
	LDS  R30,_dCounter1
	SUB  R30,R26
	RJMP _0x279
_0xF1:
	LDS  R26,__dCounter1_S0000041000
	LDI  R30,LOW(255)
	SUB  R30,R26
	LDS  R26,_dCounter1
	ADD  R30,R26
	SUBI R30,-LOW(1)
_0x279:
	STS  _dSpeed1,R30
	LDS  R30,_dCounter1
	STS  __dCounter1_S0000041000,R30
	RJMP _0xF3
_0xF0:
	LDS  R26,_Timer2Tick_S0000041000
	CPI  R26,LOW(0x5)
	BRNE _0xF4
	SBRS R2,0
	RJMP _0xF5
	CALL _PIDmotor1
_0xF5:
	RJMP _0xF6
_0xF4:
	LDS  R26,_Timer2Tick_S0000041000
	CPI  R26,LOW(0x9)
	BRNE _0xF7
	LDS  R30,__dCounter2_S0000041000
	LDS  R26,_dCounter2
	CP   R30,R26
	BRSH _0xF8
	LDS  R26,__dCounter2_S0000041000
	LDS  R30,_dCounter2
	SUB  R30,R26
	RJMP _0x27A
_0xF8:
	LDS  R26,__dCounter2_S0000041000
	LDI  R30,LOW(255)
	SUB  R30,R26
	LDS  R26,_dCounter2
	ADD  R30,R26
	SUBI R30,-LOW(1)
_0x27A:
	STS  _dSpeed2,R30
	LDS  R30,_dCounter2
	STS  __dCounter2_S0000041000,R30
	RJMP _0xFA
_0xF7:
	LDS  R26,_Timer2Tick_S0000041000
	CPI  R26,LOW(0xA)
	BRLO _0xFB
	SBRS R2,0
	RJMP _0xFC
	CALL _PIDmotor2
_0xFC:
	LDI  R30,LOW(0)
	STS  _Timer2Tick_S0000041000,R30
_0xFB:
_0xFA:
_0xF6:
_0xF3:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R30,Y+
	OUT  RAMPZ,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
_SystemInit:
	LDI  R30,LOW(0)
	OUT  0x1B,R30
	LDI  R30,LOW(255)
	OUT  0x1A,R30
	LDI  R30,LOW(5)
	OUT  0x18,R30
	LDI  R30,LOW(248)
	OUT  0x17,R30
	LDI  R30,LOW(15)
	OUT  0x15,R30
	LDI  R30,LOW(240)
	OUT  0x14,R30
	OUT  0x12,R30
	LDI  R30,LOW(0)
	OUT  0x11,R30
	LDI  R30,LOW(192)
	OUT  0x3,R30
	LDI  R30,LOW(60)
	OUT  0x2,R30
	LDI  R30,LOW(0)
	STS  98,R30
	LDI  R30,LOW(4)
	STS  97,R30
	LDI  R30,LOW(23)
	STS  101,R30
	LDI  R30,LOW(0)
	STS  100,R30
	OUT  0x30,R30
	OUT  0x33,R30
	OUT  0x32,R30
	OUT  0x31,R30
	LDI  R30,LOW(170)
	OUT  0x2F,R30
	LDI  R30,LOW(18)
	OUT  0x2E,R30
	LDI  R30,LOW(0)
	OUT  0x2D,R30
	OUT  0x2C,R30
	LDI  R30,LOW(39)
	OUT  0x27,R30
	LDI  R30,LOW(16)
	OUT  0x26,R30
	LDI  R30,LOW(19)
	OUT  0x27,R30
	LDI  R30,LOW(136)
	OUT  0x26,R30
	LDI  R30,LOW(0)
	OUT  0x2B,R30
	OUT  0x2A,R30
	OUT  0x29,R30
	OUT  0x28,R30
	STS  121,R30
	STS  120,R30
	LDI  R30,LOW(11)
	OUT  0x25,R30
	LDI  R30,LOW(0)
	OUT  0x24,R30
	LDI  R30,LOW(250)
	OUT  0x23,R30
	LDI  R30,LOW(242)
	STS  139,R30
	LDI  R30,LOW(17)
	STS  138,R30
	LDI  R30,LOW(0)
	STS  137,R30
	STS  136,R30
	LDI  R30,LOW(1)
	STS  129,R30
	LDI  R30,LOW(144)
	STS  128,R30
	LDI  R30,LOW(0)
	STS  135,R30
	STS  134,R30
	STS  133,R30
	STS  132,R30
	STS  131,R30
	LDI  R30,LOW(200)
	STS  130,R30
	LDI  R30,LOW(0)
	STS  106,R30
	LDI  R30,LOW(80)
	OUT  0x3A,R30
	LDI  R30,LOW(192)
	OUT  0x39,R30
	OUT  0x38,R30
	LDI  R30,LOW(164)
	OUT  0x37,R30
	LDI  R30,LOW(2)
	STS  125,R30
	LDI  R30,LOW(0)
	OUT  0xB,R30
	LDI  R30,LOW(144)
	OUT  0xA,R30
	LDI  R30,LOW(6)
	STS  149,R30
	LDI  R30,LOW(0)
	STS  144,R30
	LDI  R30,LOW(103)
	OUT  0x9,R30
	LDI  R30,LOW(0)
	STS  155,R30
	LDI  R30,LOW(152)
	STS  154,R30
	LDI  R30,LOW(6)
	STS  157,R30
	LDI  R30,LOW(0)
	STS  152,R30
	LDI  R30,LOW(103)
	STS  153,R30
	LDI  R30,LOW(128)
	OUT  0x8,R30
	LDI  R30,LOW(0)
	OUT  0x20,R30
	CALL _LCD_Init
	CALL _StopPWM
	LDI  R26,LOW(90)
	CALL _SudutServo6
	LDI  R26,LOW(90)
	CALL _SudutServo7
	LDI  R26,LOW(90)
	CALL _SudutServo8
	cli
	CALL _I2C_Init
	sei
	sei
	RET
;#include "Include/NOTASI.c"
;#include "Include/Line_Follower.c"
;//  --------------  DEKLARASI VARIABEL GLOBAL --------------------------
;
;bit FlagBelok;
;
;unsigned char BacaSensorWarna(unsigned char alamat, unsigned char warna)
; 0000 0014 {   BacaSensor(alamat,warna);
_BacaSensorWarna:
	ST   -Y,R26
;	alamat -> Y+1
;	warna -> Y+0
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	CALL _BacaSensor
;    if(BacaSerial1(5000)==warna)
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	MOV  R26,R30
	LD   R30,Y
	CP   R30,R26
	BRNE _0xFD
;    {   return BacaSerial1(5000);
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	RJMP _0x20A0007
;    }
;    else return 0;
_0xFD:
	LDI  R30,LOW(0)
;}
_0x20A0007:
	ADIW R28,2
	RET
;
;unsigned char BacaSensorMerah(unsigned char alamat)
;{   BacaSensor(alamat,pBacaSensorR);
;	alamat -> Y+0
;    if(BacaSerial1(5000)==pBacaSensorR)
;    {   return BacaSerial1(5000);
;    }
;    else return 0;
;}
;
;unsigned char BacaSensorBiru(unsigned char alamat)
;{   BacaSensor(alamat,pBacaSensorB);
;	alamat -> Y+0
;    if(BacaSerial1(5000)==pBacaSensorB)
;    {   return BacaSerial1(5000);
;    }
;    else return 0;
;}
;
;void ExitStart(unsigned char Warna)
;{   unsigned char sensor;
;    do{  SetDataMotorPWM(100,100);
;	Warna -> Y+1
;	sensor -> R17
;         sensor = BacaSensorWarna(0,Warna);
;         LCD_GotoXY(0,1);
;         LCD_Biner(sensor);
;    }while((sensor|0B11000011)!=0B11000011);
;    do{  SetDataMotorPWM(100,100);
;         sensor = BacaSensorWarna(0,Warna);
;         LCD_GotoXY(0,1);
;         LCD_Biner(sensor);
;
;    }while((sensor|0B11000011)==0B11000011);
;}
;
;void ScanGaris(int16_t TopSpeed, unsigned char WarnaGaris)
;{   unsigned char sensor;
_ScanGaris:
;    int16_t MKi, MKa, Error, dError, u;
;    static int16_t LastError;
;    //LCD_GotoXY(0,0);
;    BacaSensor(0,WarnaGaris);
	ST   -Y,R26
	SBIW R28,6
	CALL __SAVELOCR6
;	TopSpeed -> Y+13
;	WarnaGaris -> Y+12
;	sensor -> R17
;	MKi -> R18,R19
;	MKa -> R20,R21
;	Error -> Y+10
;	dError -> Y+8
;	u -> Y+6
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+13
	CALL _BacaSensor
;    if(BacaSerial1(5000)==WarnaGaris)
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	MOV  R26,R30
	LDD  R30,Y+12
	CP   R30,R26
	BREQ PC+3
	JMP _0x109
;        {   sensor = BacaSerial1(5000);
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _BacaSerial1
	MOV  R17,R30
;            //LCD_Biner(sensor);
;            switch (sensor)
	MOV  R30,R17
;            {   case    0B01111111: Error = -7;    break;
	CPI  R30,LOW(0x7F)
	BRNE _0x10D
	LDI  R30,LOW(65529)
	LDI  R31,HIGH(65529)
	RJMP _0x27B
;                case    0B00111111: Error = -6;    break;
_0x10D:
	CPI  R30,LOW(0x3F)
	BRNE _0x10E
	LDI  R30,LOW(65530)
	LDI  R31,HIGH(65530)
	RJMP _0x27B
;                case    0B10111111: Error = -5;    break;
_0x10E:
	CPI  R30,LOW(0xBF)
	BRNE _0x10F
	LDI  R30,LOW(65531)
	LDI  R31,HIGH(65531)
	RJMP _0x27B
;                case    0B10011111: Error = -4;    break;
_0x10F:
	CPI  R30,LOW(0x9F)
	BRNE _0x110
	LDI  R30,LOW(65532)
	LDI  R31,HIGH(65532)
	RJMP _0x27B
;                case    0B11011111: Error = -3;    break;
_0x110:
	CPI  R30,LOW(0xDF)
	BRNE _0x111
	LDI  R30,LOW(65533)
	LDI  R31,HIGH(65533)
	RJMP _0x27B
;                case    0B11001111: Error = -2;    break;
_0x111:
	CPI  R30,LOW(0xCF)
	BRNE _0x112
	LDI  R30,LOW(65534)
	LDI  R31,HIGH(65534)
	RJMP _0x27B
;                case    0B11101111: Error = -1;    break;
_0x112:
	CPI  R30,LOW(0xEF)
	BRNE _0x113
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	RJMP _0x27B
;                case    0B11100111: Error = -0;    break;
_0x113:
	CPI  R30,LOW(0xE7)
	BRNE _0x114
	LDI  R30,LOW(0)
	STD  Y+10,R30
	STD  Y+10+1,R30
	RJMP _0x10C
;                case    0B11110111: Error = 1;      break;
_0x114:
	CPI  R30,LOW(0xF7)
	BRNE _0x115
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	RJMP _0x27B
;                case    0B11110011: Error = 2;      break;
_0x115:
	CPI  R30,LOW(0xF3)
	BRNE _0x116
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	RJMP _0x27B
;                case    0B11111011: Error = 3;      break;
_0x116:
	CPI  R30,LOW(0xFB)
	BRNE _0x117
	LDI  R30,LOW(3)
	LDI  R31,HIGH(3)
	RJMP _0x27B
;                case    0B11111001: Error = 4;      break;
_0x117:
	CPI  R30,LOW(0xF9)
	BRNE _0x118
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	RJMP _0x27B
;                case    0B11111101: Error = 5;      break;
_0x118:
	CPI  R30,LOW(0xFD)
	BRNE _0x119
	LDI  R30,LOW(5)
	LDI  R31,HIGH(5)
	RJMP _0x27B
;                case    0B11111100: Error = 6;      break;
_0x119:
	CPI  R30,LOW(0xFC)
	BRNE _0x11A
	LDI  R30,LOW(6)
	LDI  R31,HIGH(6)
	RJMP _0x27B
;                case    0B11111110: Error = 7;      break;
_0x11A:
	CPI  R30,LOW(0xFE)
	BRNE _0x11B
	LDI  R30,LOW(7)
	LDI  R31,HIGH(7)
	RJMP _0x27B
;                case    0B11111111: Error=LastError;break;
_0x11B:
;                default:            Error=LastError;break;
_0x27C:
	LDS  R30,_LastError_S0000047000
	LDS  R31,_LastError_S0000047000+1
_0x27B:
	STD  Y+10,R30
	STD  Y+10+1,R31
;            }
_0x10C:
;                dError = Error-LastError;
	LDS  R26,_LastError_S0000047000
	LDS  R27,_LastError_S0000047000+1
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+8,R30
	STD  Y+8+1,R31
;                //iError += (float)Error/5;
;
;                //if(iError>300)iError=300;
;                //else if (iError<-300)iError=-300;
;
;                LastError = Error;
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	STS  _LastError_S0000047000,R30
	STS  _LastError_S0000047000+1,R31
;                if (TopSpeed>=300)
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	CPI  R26,LOW(0x12C)
	LDI  R30,HIGH(0x12C)
	CPC  R27,R30
	BRLT _0x11E
;                    u = ((20 * Error + 150*dError));
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	LDI  R26,LOW(20)
	LDI  R27,HIGH(20)
	CALL __MULW12
	MOVW R22,R30
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDI  R26,LOW(150)
	LDI  R27,HIGH(150)
	RJMP _0x27D
;                else
_0x11E:
;                    u = ((20 * Error + 120*dError));
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	LDI  R26,LOW(20)
	LDI  R27,HIGH(20)
	CALL __MULW12
	MOVW R22,R30
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDI  R26,LOW(120)
	LDI  R27,HIGH(120)
_0x27D:
	CALL __MULW12
	ADD  R30,R22
	ADC  R31,R23
	STD  Y+6,R30
	STD  Y+6+1,R31
;
;                MKi = TopSpeed + u;
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	ADD  R30,R26
	ADC  R31,R27
	MOVW R18,R30
;                MKa = TopSpeed - u;
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LDD  R30,Y+13
	LDD  R31,Y+13+1
	SUB  R30,R26
	SBC  R31,R27
	MOVW R20,R30
;                if (MKi>400) MKi = 400;
	__CPWRN 18,19,401
	BRLT _0x120
	__GETWRN 18,19,400
;                else if (MKi<-400) MKi = -400;
	RJMP _0x121
_0x120:
	__CPWRN 18,19,-400
	BRGE _0x122
	__GETWRN 18,19,-400
;                if (MKa>400) MKa = 400;
_0x122:
_0x121:
	__CPWRN 20,21,401
	BRLT _0x123
	__GETWRN 20,21,400
;                else if (MKa<-400) MKa = -400;
	RJMP _0x124
_0x123:
	__CPWRN 20,21,-400
	BRGE _0x125
	__GETWRN 20,21,-400
;                SetDataMotorPWM(MKi,MKa);
_0x125:
_0x124:
	ST   -Y,R19
	ST   -Y,R18
	MOVW R26,R20
	CALL _SetDataMotorPWM
;                //LCD_GotoXY(0,1);        LCD_sByte(MKi);     LCD_Data(' ');
;                //LCD_GotoXY(8,1);        LCD_sByte(MKa);     LCD_Data(' ');
;
;                ////////////////=====================================////////////////////////
;
;       }
;}
_0x109:
	CALL __LOADLOCR6
	ADIW R28,15
	RET
;
;#define Bit(x,y) (x & (1<<y))
;
;void ScanPerempatan(int16_t TopSpeed, unsigned char WarnaGaris, unsigned char WarnaPerempatan)
;{   unsigned char sensor;
_ScanPerempatan:
;    static int LastSpeed=100;

	.DSEG

	.CSEG
;    unsigned char Counter;
;    if((LastSpeed>TopSpeed) | FlagBelok==1) LastSpeed = 100;
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	TopSpeed -> Y+4
;	WarnaGaris -> Y+3
;	WarnaPerempatan -> Y+2
;	sensor -> R17
;	Counter -> R16
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	LDS  R26,_LastSpeed_S0000048000
	LDS  R27,_LastSpeed_S0000048000+1
	CALL __GTW12
	MOV  R0,R30
	LDI  R26,0
	SBRC R2,7
	LDI  R26,1
	LDI  R30,LOW(1)
	CALL __EQB12
	OR   R30,R0
	BREQ _0x127
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	STS  _LastSpeed_S0000048000,R30
	STS  _LastSpeed_S0000048000+1,R31
;    FlagBelok=0;
_0x127:
	CLT
	BLD  R2,7
;    Counter = 0;
	LDI  R16,LOW(0)
;    do{  if(Counter<255)Counter++;
_0x129:
	CPI  R16,255
	BRSH _0x12B
	SUBI R16,-1
;         if((LastSpeed<TopSpeed))LastSpeed+=7;
_0x12B:
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	LDS  R26,_LastSpeed_S0000048000
	LDS  R27,_LastSpeed_S0000048000+1
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x12C
	LDS  R30,_LastSpeed_S0000048000
	LDS  R31,_LastSpeed_S0000048000+1
	ADIW R30,7
	STS  _LastSpeed_S0000048000,R30
	STS  _LastSpeed_S0000048000+1,R31
;         ScanGaris(LastSpeed, WarnaGaris);
_0x12C:
	LDS  R30,_LastSpeed_S0000048000
	LDS  R31,_LastSpeed_S0000048000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _ScanGaris
;         sensor = BacaSensorWarna(0,WarnaPerempatan);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while((sensor|0B11000011)!=0B11000011);
	MOV  R30,R17
	ORI  R30,LOW(0xC3)
	CPI  R30,LOW(0xC3)
	BRNE _0x129
;    do{  ScanGaris(LastSpeed, WarnaGaris);
_0x12E:
	LDS  R30,_LastSpeed_S0000048000
	LDS  R31,_LastSpeed_S0000048000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _ScanGaris
;         sensor = BacaSensorWarna(0,WarnaPerempatan);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while((sensor|0B11000011)==0B11000011);
	MOV  R30,R17
	ORI  R30,LOW(0xC3)
	CPI  R30,LOW(0xC3)
	BREQ _0x12E
;    StopPWM();
	CALL _StopPWM
;    LastSpeed=TopSpeed;
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	STS  _LastSpeed_S0000048000,R30
	STS  _LastSpeed_S0000048000+1,R31
;}
	LDD  R17,Y+1
	LDD  R16,Y+0
	RJMP _0x20A0006
;
;void Scan3Kanan(int16_t TopSpeed, unsigned char WarnaGaris, unsigned char Warna3)
;{   unsigned char sensor;
_Scan3Kanan:
;    static int LastSpeed=50;

	.DSEG

	.CSEG
;    unsigned char Counter;
;    if( LastSpeed>TopSpeed) LastSpeed = TopSpeed;
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	TopSpeed -> Y+4
;	WarnaGaris -> Y+3
;	Warna3 -> Y+2
;	sensor -> R17
;	Counter -> R16
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	LDS  R26,_LastSpeed_S0000049000
	LDS  R27,_LastSpeed_S0000049000+1
	CP   R30,R26
	CPC  R31,R27
	BRGE _0x131
	STS  _LastSpeed_S0000049000,R30
	STS  _LastSpeed_S0000049000+1,R31
;    if( FlagBelok==1) LastSpeed = 50;
_0x131:
	SBRS R2,7
	RJMP _0x132
	LDI  R30,LOW(50)
	LDI  R31,HIGH(50)
	STS  _LastSpeed_S0000049000,R30
	STS  _LastSpeed_S0000049000+1,R31
;    FlagBelok=0;
_0x132:
	CLT
	BLD  R2,7
;    Counter = 0;
	LDI  R16,LOW(0)
;    do{  if(Counter<255)Counter++;
_0x134:
	CPI  R16,255
	BRSH _0x136
	SUBI R16,-1
;         if((LastSpeed<TopSpeed))LastSpeed+=10;
_0x136:
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	LDS  R26,_LastSpeed_S0000049000
	LDS  R27,_LastSpeed_S0000049000+1
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x137
	LDS  R30,_LastSpeed_S0000049000
	LDS  R31,_LastSpeed_S0000049000+1
	ADIW R30,10
	STS  _LastSpeed_S0000049000,R30
	STS  _LastSpeed_S0000049000+1,R31
;         ScanGaris(LastSpeed, WarnaGaris);
_0x137:
	LDS  R30,_LastSpeed_S0000049000
	LDS  R31,_LastSpeed_S0000049000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _ScanGaris
;         sensor = BacaSensorWarna(0,Warna3);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while((sensor|0B11111000)!=0B11111000);
	MOV  R30,R17
	ORI  R30,LOW(0xF8)
	CPI  R30,LOW(0xF8)
	BRNE _0x134
;    do{  ScanGaris(LastSpeed, WarnaGaris);
_0x139:
	LDS  R30,_LastSpeed_S0000049000
	LDS  R31,_LastSpeed_S0000049000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _ScanGaris
;         sensor = BacaSensorWarna(0,Warna3);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while((sensor|0B11111000)==0B11111000);
	MOV  R30,R17
	ORI  R30,LOW(0xF8)
	CPI  R30,LOW(0xF8)
	BREQ _0x139
;    StopPWM();
	CALL _StopPWM
;    LastSpeed=TopSpeed;
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	STS  _LastSpeed_S0000049000,R30
	STS  _LastSpeed_S0000049000+1,R31
;}
	LDD  R17,Y+1
	LDD  R16,Y+0
	RJMP _0x20A0006
;void Scan3Kiri(int16_t TopSpeed, unsigned char WarnaGaris, unsigned char Warna3)
;{   unsigned char sensor;
_Scan3Kiri:
;    static int LastSpeed=50;

	.DSEG

	.CSEG
;    unsigned char Counter;
;    if( LastSpeed>TopSpeed) LastSpeed = TopSpeed;
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	TopSpeed -> Y+4
;	WarnaGaris -> Y+3
;	Warna3 -> Y+2
;	sensor -> R17
;	Counter -> R16
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	LDS  R26,_LastSpeed_S000004A000
	LDS  R27,_LastSpeed_S000004A000+1
	CP   R30,R26
	CPC  R31,R27
	BRGE _0x13C
	STS  _LastSpeed_S000004A000,R30
	STS  _LastSpeed_S000004A000+1,R31
;    if( FlagBelok==1) LastSpeed = 50;
_0x13C:
	SBRS R2,7
	RJMP _0x13D
	LDI  R30,LOW(50)
	LDI  R31,HIGH(50)
	STS  _LastSpeed_S000004A000,R30
	STS  _LastSpeed_S000004A000+1,R31
;    FlagBelok=0;
_0x13D:
	CLT
	BLD  R2,7
;    Counter = 0;
	LDI  R16,LOW(0)
;    do{  if(Counter<255)Counter++;
_0x13F:
	CPI  R16,255
	BRSH _0x141
	SUBI R16,-1
;         if((LastSpeed<TopSpeed))LastSpeed+=10;
_0x141:
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	LDS  R26,_LastSpeed_S000004A000
	LDS  R27,_LastSpeed_S000004A000+1
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x142
	LDS  R30,_LastSpeed_S000004A000
	LDS  R31,_LastSpeed_S000004A000+1
	ADIW R30,10
	STS  _LastSpeed_S000004A000,R30
	STS  _LastSpeed_S000004A000+1,R31
;         ScanGaris(LastSpeed, WarnaGaris);
_0x142:
	LDS  R30,_LastSpeed_S000004A000
	LDS  R31,_LastSpeed_S000004A000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _ScanGaris
;         sensor = BacaSensorWarna(0,Warna3);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while((sensor|0B00011111)!=0B00011111);
	MOV  R30,R17
	ORI  R30,LOW(0x1F)
	CPI  R30,LOW(0x1F)
	BRNE _0x13F
;    do{  ScanGaris(LastSpeed, WarnaGaris);
_0x144:
	LDS  R30,_LastSpeed_S000004A000
	LDS  R31,_LastSpeed_S000004A000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _ScanGaris
;         sensor = BacaSensorWarna(0,Warna3);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while((sensor|0B00011111)==0B00011111);
	MOV  R30,R17
	ORI  R30,LOW(0x1F)
	CPI  R30,LOW(0x1F)
	BREQ _0x144
;    StopPWM();
	CALL _StopPWM
;    LastSpeed=TopSpeed;
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	STS  _LastSpeed_S000004A000,R30
	STS  _LastSpeed_S000004A000+1,R31
;}
	LDD  R17,Y+1
	LDD  R16,Y+0
	RJMP _0x20A0006
;
;void BelKaPWM(int16_t Ki,int16_t Ka,unsigned char WarnaAkhir)
;{   unsigned char sensor;
_BelKaPWM:
;    SetDataMotorPWM(Ki,Ka);
	ST   -Y,R26
	ST   -Y,R17
;	Ki -> Y+4
;	Ka -> Y+2
;	WarnaAkhir -> Y+1
;	sensor -> R17
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	CALL _SetDataMotorPWM
;    FlagBelok=1;
	SET
	BLD  R2,7
;    // menunggu sensor kanan ke 1 atau ke 2 keluar garis
;    delay_ms(50);
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
_0x147:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+2
	RCALL _BacaSensorWarna
	MOV  R17,R30
;      } while(Bit(sensor,0)==0 || Bit(sensor,1)==0 );
	SBRS R17,0
	RJMP _0x149
	SBRC R17,1
	RJMP _0x148
_0x149:
	RJMP _0x147
_0x148:
;    // menunggu sensor kanan ke 1 atau ke 2 masuk garis
;    delay_ms(50);
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
_0x14C:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+2
	RCALL _BacaSensorWarna
	MOV  R17,R30
;      } while(Bit(sensor,0)!=0 && Bit(sensor,1)!=0);
	SBRS R17,0
	RJMP _0x14E
	SBRC R17,1
	RJMP _0x14F
_0x14E:
	RJMP _0x14D
_0x14F:
	RJMP _0x14C
_0x14D:
;    StopPWM();
	RJMP _0x20A0005
;}
;void BelKiPWM(int16_t Ki,int16_t Ka,unsigned char WarnaAkhir)
;{   unsigned char sensor;
_BelKiPWM:
;    SetDataMotorPWM(Ki,Ka);
	ST   -Y,R26
	ST   -Y,R17
;	Ki -> Y+4
;	Ka -> Y+2
;	WarnaAkhir -> Y+1
;	sensor -> R17
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	CALL _SetDataMotorPWM
;    FlagBelok=1;
	SET
	BLD  R2,7
;    // menunggu sensor kanan ke 6 atau ke 7 keluar garis
;    delay_ms(50);
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
_0x151:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+2
	RCALL _BacaSensorWarna
	MOV  R17,R30
;      } while(Bit(sensor,7)==0 || Bit(sensor,6)==0 );
	SBRS R17,7
	RJMP _0x153
	SBRC R17,6
	RJMP _0x152
_0x153:
	RJMP _0x151
_0x152:
;    // menunggu sensor kanan ke 6 atau ke 7 masuk garis
;    delay_ms(50);
	LDI  R26,LOW(50)
	LDI  R27,0
	CALL _delay_ms
;    do{ sensor = BacaSensorWarna(0,WarnaAkhir);
_0x156:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+2
	RCALL _BacaSensorWarna
	MOV  R17,R30
;      } while(Bit(sensor,7)!=0 && Bit(sensor,6)!=0);
	SBRS R17,7
	RJMP _0x158
	SBRC R17,6
	RJMP _0x159
_0x158:
	RJMP _0x157
_0x159:
	RJMP _0x156
_0x157:
;    StopPWM();
_0x20A0005:
	CALL _StopPWM
;}
	LDD  R17,Y+0
_0x20A0006:
	ADIW R28,6
	RET
;#include "Include/Wall_Follower.c"
;#define EchoKi PINF.7
;#define TrigKi PORTF=0b01000000
;#define EchoDpn PINF.5
;#define TrigDpn PORTF=0b00010000
;#define EchoKa PINF.3
;#define TrigKa PORTF=0b00000100
;
;void ScanDindingKi(int16_t TopSpeed,int16_t SetPoint)
;{
_ScanDindingKi:
;    int16_t timeout,Kus,Dus,count;
;
;    int16_t MKi, MKa, Error, dError, u;
;    static int16_t LastErrorDKi;
;    int8_t flagBelok;
;
;    DDRF=0b01010100;
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,13
	CALL __SAVELOCR6
;	TopSpeed -> Y+21
;	SetPoint -> Y+19
;	timeout -> R16,R17
;	Kus -> R18,R19
;	Dus -> R20,R21
;	count -> Y+17
;	MKi -> Y+15
;	MKa -> Y+13
;	Error -> Y+11
;	dError -> Y+9
;	u -> Y+7
;	flagBelok -> Y+6
	LDI  R30,LOW(84)
	STS  97,R30
;
;    //DEPAN
;    PORTF=0x00;delay_us(2);TrigDpn;delay_us(10);PORTF=0x000;
	LDI  R30,LOW(0)
	STS  98,R30
	__DELAY_USB 11
	LDI  R30,LOW(16)
	STS  98,R30
	__DELAY_USB 53
	LDI  R30,LOW(0)
	STS  98,R30
;    usCounter=0; while (!EchoDpn&&usCounter<40); //time out 1000uS
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x15A:
	SBIC 0x0,5
	RJMP _0x15D
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	SBIW R26,40
	BRLO _0x15E
_0x15D:
	RJMP _0x15C
_0x15E:
	RJMP _0x15A
_0x15C:
;    usCounter=0; while (EchoDpn&&usCounter<1440); //time out 36000uS
	LDI  R30,LOW(0)
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x15F:
	SBIS 0x0,5
	RJMP _0x162
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	CPI  R26,LOW(0x5A0)
	LDI  R30,HIGH(0x5A0)
	CPC  R27,R30
	BRLO _0x163
_0x162:
	RJMP _0x161
_0x163:
	RJMP _0x15F
_0x161:
;    Dus=(usCounter*0.43125);
	LDS  R30,_usCounter
	LDS  R31,_usCounter+1
	CLR  R22
	CLR  R23
	CALL __CDF1
	__GETD2N 0x3EDCCCCD
	CALL __MULF12
	CALL __CFD1
	MOVW R20,R30
;
;    delay_ms(10);
	LDI  R26,LOW(10)
	LDI  R27,0
	CALL _delay_ms
;
;    //KIRI
;    PORTF=0x00;delay_us(2);TrigKi;delay_us(10);PORTF=0x000;
	LDI  R30,LOW(0)
	STS  98,R30
	__DELAY_USB 11
	LDI  R30,LOW(64)
	STS  98,R30
	__DELAY_USB 53
	LDI  R30,LOW(0)
	STS  98,R30
;    usCounter=0; while (!EchoKi&&usCounter<40); //time out 1000uS
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x164:
	SBIC 0x0,7
	RJMP _0x167
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	SBIW R26,40
	BRLO _0x168
_0x167:
	RJMP _0x166
_0x168:
	RJMP _0x164
_0x166:
;    usCounter=0; while (EchoKi&&usCounter<1440); //time out 36000uS
	LDI  R30,LOW(0)
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x169:
	SBIS 0x0,7
	RJMP _0x16C
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	CPI  R26,LOW(0x5A0)
	LDI  R30,HIGH(0x5A0)
	CPC  R27,R30
	BRLO _0x16D
_0x16C:
	RJMP _0x16B
_0x16D:
	RJMP _0x169
_0x16B:
;    Kus=(usCounter*0.43125);
	LDS  R30,_usCounter
	LDS  R31,_usCounter+1
	CLR  R22
	CLR  R23
	CALL __CDF1
	__GETD2N 0x3EDCCCCD
	CALL __MULF12
	CALL __CFD1
	MOVW R18,R30
;
;    delay_ms(10);
	LDI  R26,LOW(10)
	LDI  R27,0
	CALL _delay_ms
;
;    LCD_Hapus();
	CALL _LCD_Hapus
;    LCD_GotoXY(0,0);    LCD_Angka3(Kus);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	MOVW R26,R18
	CALL _LCD_Angka3
;    LCD_GotoXY(8,0);    LCD_Angka3(Dus);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	MOVW R26,R20
	CALL _LCD_Angka3
;    //================================================//
;
;    if(Dus<=20){SetDataMotorPWM(200,-200);}
	__CPWRN 20,21,21
	BRGE _0x16E
	LDI  R30,LOW(200)
	LDI  R31,HIGH(200)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(65336)
	LDI  R27,HIGH(65336)
	RJMP _0x27E
;    else if(Kus>SetPoint+10){SetDataMotorPWM(50,200);}
_0x16E:
	LDD  R30,Y+19
	LDD  R31,Y+19+1
	ADIW R30,10
	CP   R30,R18
	CPC  R31,R19
	BRGE _0x170
	LDI  R30,LOW(50)
	LDI  R31,HIGH(50)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(200)
	LDI  R27,0
	RJMP _0x27E
;    else
_0x170:
;    {
;        Error = SetPoint - Kus ;
	LDD  R30,Y+19
	LDD  R31,Y+19+1
	SUB  R30,R18
	SBC  R31,R19
	STD  Y+11,R30
	STD  Y+11+1,R31
;        dError = Error-LastErrorDKi;
	LDS  R26,_LastErrorDKi_S000004D000
	LDS  R27,_LastErrorDKi_S000004D000+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+9,R30
	STD  Y+9+1,R31
;        LastErrorDKi = Error;
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	STS  _LastErrorDKi_S000004D000,R30
	STS  _LastErrorDKi_S000004D000+1,R31
;
;        u = ((SetKP * Error + SetKD*dError)); //Kp ---- Kd
	LDI  R26,LOW(_SetKP)
	LDI  R27,HIGH(_SetKP)
	CALL __EEPROMRDW
	LDD  R26,Y+11
	LDD  R27,Y+11+1
	CALL __MULW12U
	MOVW R22,R30
	LDI  R26,LOW(_SetKD)
	LDI  R27,HIGH(_SetKD)
	CALL __EEPROMRDW
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	CALL __MULW12U
	ADD  R30,R22
	ADC  R31,R23
	STD  Y+7,R30
	STD  Y+7+1,R31
;
;        MKi = TopSpeed + u;
	LDD  R26,Y+21
	LDD  R27,Y+21+1
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+15,R30
	STD  Y+15+1,R31
;        MKa = TopSpeed - u;
	LDD  R26,Y+7
	LDD  R27,Y+7+1
	LDD  R30,Y+21
	LDD  R31,Y+21+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+13,R30
	STD  Y+13+1,R31
;        if (MKi>400) MKi = 400;
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	CPI  R26,LOW(0x191)
	LDI  R30,HIGH(0x191)
	CPC  R27,R30
	BRGE _0x27F
;        else if (MKi<-400) MKi = 400;
	CPI  R26,LOW(0xFE70)
	LDI  R30,HIGH(0xFE70)
	CPC  R27,R30
	BRGE _0x174
_0x27F:
	LDI  R30,LOW(400)
	LDI  R31,HIGH(400)
	STD  Y+15,R30
	STD  Y+15+1,R31
;        if (MKa>400) MKa = 400;
_0x174:
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	CPI  R26,LOW(0x191)
	LDI  R30,HIGH(0x191)
	CPC  R27,R30
	BRGE _0x280
;        else if (MKa<-400) MKa = 400;
	CPI  R26,LOW(0xFE70)
	LDI  R30,HIGH(0xFE70)
	CPC  R27,R30
	BRGE _0x177
_0x280:
	LDI  R30,LOW(400)
	LDI  R31,HIGH(400)
	STD  Y+13,R30
	STD  Y+13+1,R31
;        SetDataMotorPWM(MKi,MKa);
_0x177:
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+15
	LDD  R27,Y+15+1
_0x27E:
	CALL _SetDataMotorPWM
;    }
;}
	RJMP _0x20A0004
;
;void ScanDindingKa(int16_t TopSpeed,int16_t SetPoint)
;{
_ScanDindingKa:
;    int16_t timeout,Kus,Dus,count;
;
;    int16_t MKi, MKa, Error, dError, u;
;    static int16_t LastErrorDKa;
;    int8_t flagBelok;
;
;    DDRF=0b01010100;
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,13
	CALL __SAVELOCR6
;	TopSpeed -> Y+21
;	SetPoint -> Y+19
;	timeout -> R16,R17
;	Kus -> R18,R19
;	Dus -> R20,R21
;	count -> Y+17
;	MKi -> Y+15
;	MKa -> Y+13
;	Error -> Y+11
;	dError -> Y+9
;	u -> Y+7
;	flagBelok -> Y+6
	LDI  R30,LOW(84)
	STS  97,R30
;
;    //DEPAN
;    PORTF=0x00;delay_us(2);TrigDpn;delay_us(10);PORTF=0x000;
	LDI  R30,LOW(0)
	STS  98,R30
	__DELAY_USB 11
	LDI  R30,LOW(16)
	STS  98,R30
	__DELAY_USB 53
	LDI  R30,LOW(0)
	STS  98,R30
;    usCounter=0; while (!EchoDpn&&usCounter<40); //time out 1000uS
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x178:
	SBIC 0x0,5
	RJMP _0x17B
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	SBIW R26,40
	BRLO _0x17C
_0x17B:
	RJMP _0x17A
_0x17C:
	RJMP _0x178
_0x17A:
;    usCounter=0; while (EchoDpn&&usCounter<1440); //time out 36000uS
	LDI  R30,LOW(0)
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x17D:
	SBIS 0x0,5
	RJMP _0x180
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	CPI  R26,LOW(0x5A0)
	LDI  R30,HIGH(0x5A0)
	CPC  R27,R30
	BRLO _0x181
_0x180:
	RJMP _0x17F
_0x181:
	RJMP _0x17D
_0x17F:
;    Dus=(usCounter*0.43125);
	LDS  R30,_usCounter
	LDS  R31,_usCounter+1
	CLR  R22
	CLR  R23
	CALL __CDF1
	__GETD2N 0x3EDCCCCD
	CALL __MULF12
	CALL __CFD1
	MOVW R20,R30
;
;    delay_ms(10);
	LDI  R26,LOW(10)
	LDI  R27,0
	CALL _delay_ms
;
;    //JARAK KANAN
;    PORTF=0x00;delay_us(2);TrigKa;delay_us(10);PORTF=0x000;
	LDI  R30,LOW(0)
	STS  98,R30
	__DELAY_USB 11
	LDI  R30,LOW(4)
	STS  98,R30
	__DELAY_USB 53
	LDI  R30,LOW(0)
	STS  98,R30
;    usCounter=0; while (!EchoKa&&usCounter<40); //time out 1000uS
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x182:
	SBIC 0x0,3
	RJMP _0x185
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	SBIW R26,40
	BRLO _0x186
_0x185:
	RJMP _0x184
_0x186:
	RJMP _0x182
_0x184:
;    usCounter=0; while (EchoKa&&usCounter<1440); //time out 36000uS
	LDI  R30,LOW(0)
	STS  _usCounter,R30
	STS  _usCounter+1,R30
_0x187:
	SBIS 0x0,3
	RJMP _0x18A
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	CPI  R26,LOW(0x5A0)
	LDI  R30,HIGH(0x5A0)
	CPC  R27,R30
	BRLO _0x18B
_0x18A:
	RJMP _0x189
_0x18B:
	RJMP _0x187
_0x189:
;    Kus=(usCounter*0.43125);
	LDS  R30,_usCounter
	LDS  R31,_usCounter+1
	CLR  R22
	CLR  R23
	CALL __CDF1
	__GETD2N 0x3EDCCCCD
	CALL __MULF12
	CALL __CFD1
	MOVW R18,R30
;
;    delay_ms(10);
	LDI  R26,LOW(10)
	LDI  R27,0
	CALL _delay_ms
;
;    LCD_Hapus();
	CALL _LCD_Hapus
;    LCD_GotoXY(0,0);    LCD_Angka3(Kus);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	MOVW R26,R18
	CALL _LCD_Angka3
;    LCD_GotoXY(8,0);    LCD_Angka3(Dus);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	MOVW R26,R20
	CALL _LCD_Angka3
;    LCD_GotoXY(8,1);    LCD_Angka3(FlagBelok);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDI  R30,0
	SBRC R2,7
	LDI  R30,1
	LDI  R31,0
	MOVW R26,R30
	CALL _LCD_Angka3
;    //================================================//
;
;    if(Dus<=20){SetDataMotorPWM(-200,200);}
	__CPWRN 20,21,21
	BRGE _0x18C
	LDI  R30,LOW(65336)
	LDI  R31,HIGH(65336)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(200)
	LDI  R27,0
	RJMP _0x281
;    else if(Kus>SetPoint+10)
_0x18C:
	LDD  R30,Y+19
	LDD  R31,Y+19+1
	ADIW R30,10
	CP   R30,R18
	CPC  R31,R19
	BRGE _0x18E
;    {
;        LED1=1;LED2=1;
	SBI  0x15,4
	SBI  0x15,5
;        SetDataMotorPWM(200,50);
	LDI  R30,LOW(200)
	LDI  R31,HIGH(200)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(50)
	LDI  R27,0
	RJMP _0x281
;    }
;    else
_0x18E:
;    {
;        Error = SetPoint - Kus ;
	LDD  R30,Y+19
	LDD  R31,Y+19+1
	SUB  R30,R18
	SBC  R31,R19
	STD  Y+11,R30
	STD  Y+11+1,R31
;        dError = Error-LastErrorDKa;
	LDS  R26,_LastErrorDKa_S000004E000
	LDS  R27,_LastErrorDKa_S000004E000+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+9,R30
	STD  Y+9+1,R31
;        LastErrorDKa = Error;
	LDD  R30,Y+11
	LDD  R31,Y+11+1
	STS  _LastErrorDKa_S000004E000,R30
	STS  _LastErrorDKa_S000004E000+1,R31
;
;        u = ((SetKP * Error + SetKD*dError)); //Kp ---- Kd
	LDI  R26,LOW(_SetKP)
	LDI  R27,HIGH(_SetKP)
	CALL __EEPROMRDW
	LDD  R26,Y+11
	LDD  R27,Y+11+1
	CALL __MULW12U
	MOVW R22,R30
	LDI  R26,LOW(_SetKD)
	LDI  R27,HIGH(_SetKD)
	CALL __EEPROMRDW
	LDD  R26,Y+9
	LDD  R27,Y+9+1
	CALL __MULW12U
	ADD  R30,R22
	ADC  R31,R23
	STD  Y+7,R30
	STD  Y+7+1,R31
;
;        MKi = TopSpeed - u;
	LDD  R26,Y+7
	LDD  R27,Y+7+1
	LDD  R30,Y+21
	LDD  R31,Y+21+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+15,R30
	STD  Y+15+1,R31
;        MKa = TopSpeed + u;
	LDD  R30,Y+7
	LDD  R31,Y+7+1
	LDD  R26,Y+21
	LDD  R27,Y+21+1
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+13,R30
	STD  Y+13+1,R31
;        if (MKi>400) MKi = 400;
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	CPI  R26,LOW(0x191)
	LDI  R30,HIGH(0x191)
	CPC  R27,R30
	BRGE _0x282
;        else if (MKi<-400) MKi = 400;
	CPI  R26,LOW(0xFE70)
	LDI  R30,HIGH(0xFE70)
	CPC  R27,R30
	BRGE _0x196
_0x282:
	LDI  R30,LOW(400)
	LDI  R31,HIGH(400)
	STD  Y+15,R30
	STD  Y+15+1,R31
;        if (MKa>400) MKa = 400;
_0x196:
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	CPI  R26,LOW(0x191)
	LDI  R30,HIGH(0x191)
	CPC  R27,R30
	BRGE _0x283
;        else if (MKa<-400) MKa = 400;
	CPI  R26,LOW(0xFE70)
	LDI  R30,HIGH(0xFE70)
	CPC  R27,R30
	BRGE _0x199
_0x283:
	LDI  R30,LOW(400)
	LDI  R31,HIGH(400)
	STD  Y+13,R30
	STD  Y+13+1,R31
;        SetDataMotorPWM(MKi,MKa);
_0x199:
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+15
	LDD  R27,Y+15+1
_0x281:
	CALL _SetDataMotorPWM
;    }
;}
_0x20A0004:
	CALL __LOADLOCR6
	ADIW R28,23
	RET
;
;void GarisDindingKi(int16_t TopSpeed,int16_t SetPoint,unsigned char WarnaGaris)
;{
_GarisDindingKi:
;    unsigned char sensor;
;    static int LastSpeed=100;

	.DSEG

	.CSEG
;    unsigned char Counter;
;    if((LastSpeed>TopSpeed) | FlagBelok==1) LastSpeed = 100;
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	TopSpeed -> Y+5
;	SetPoint -> Y+3
;	WarnaGaris -> Y+2
;	sensor -> R17
;	Counter -> R16
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	LDS  R26,_LastSpeed_S000004F000
	LDS  R27,_LastSpeed_S000004F000+1
	CALL __GTW12
	MOV  R0,R30
	LDI  R26,0
	SBRC R2,7
	LDI  R26,1
	LDI  R30,LOW(1)
	CALL __EQB12
	OR   R30,R0
	BREQ _0x19B
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	STS  _LastSpeed_S000004F000,R30
	STS  _LastSpeed_S000004F000+1,R31
;    FlagBelok=0;
_0x19B:
	CLT
	BLD  R2,7
;    Counter = 0;
	LDI  R16,LOW(0)
;    do{  if(Counter<255)Counter++;
_0x19D:
	CPI  R16,255
	BRSH _0x19F
	SUBI R16,-1
;         if((LastSpeed<TopSpeed))LastSpeed+=7;
_0x19F:
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	LDS  R26,_LastSpeed_S000004F000
	LDS  R27,_LastSpeed_S000004F000+1
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x1A0
	LDS  R30,_LastSpeed_S000004F000
	LDS  R31,_LastSpeed_S000004F000+1
	ADIW R30,7
	STS  _LastSpeed_S000004F000,R30
	STS  _LastSpeed_S000004F000+1,R31
;         ScanDindingKi(LastSpeed,SetPoint);
_0x1A0:
	LDS  R30,_LastSpeed_S000004F000
	LDS  R31,_LastSpeed_S000004F000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	LDD  R27,Y+5+1
	RCALL _ScanDindingKi
;         sensor = BacaSensorWarna(0,WarnaGaris);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while (sensor==0B11111111); //((sensor|0B11000011)!=0B11000011);
	CPI  R17,255
	BREQ _0x19D
;    do{  ScanDindingKi(LastSpeed,SetPoint);
_0x1A2:
	LDS  R30,_LastSpeed_S000004F000
	LDS  R31,_LastSpeed_S000004F000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	LDD  R27,Y+5+1
	RCALL _ScanDindingKi
;         sensor = BacaSensorWarna(0,WarnaGaris);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while(sensor!=0B11111111);//((sensor|0B11000011)==0B11000011);
	CPI  R17,255
	BRNE _0x1A2
;    StopPWM();
	CALL _StopPWM
;    LastSpeed=TopSpeed;
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	STS  _LastSpeed_S000004F000,R30
	STS  _LastSpeed_S000004F000+1,R31
;}
	RJMP _0x20A0003
;
;void GarisDindingKa(int16_t TopSpeed,int16_t SetPoint,unsigned char WarnaGaris)
;{
_GarisDindingKa:
;    unsigned char sensor;
;    static int LastSpeed=100;

	.DSEG

	.CSEG
;    unsigned char Counter;
;    if((LastSpeed>TopSpeed) | FlagBelok==1) LastSpeed = 100;
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
;	TopSpeed -> Y+5
;	SetPoint -> Y+3
;	WarnaGaris -> Y+2
;	sensor -> R17
;	Counter -> R16
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	LDS  R26,_LastSpeed_S0000050000
	LDS  R27,_LastSpeed_S0000050000+1
	CALL __GTW12
	MOV  R0,R30
	LDI  R26,0
	SBRC R2,7
	LDI  R26,1
	LDI  R30,LOW(1)
	CALL __EQB12
	OR   R30,R0
	BREQ _0x1A5
	LDI  R30,LOW(100)
	LDI  R31,HIGH(100)
	STS  _LastSpeed_S0000050000,R30
	STS  _LastSpeed_S0000050000+1,R31
;    FlagBelok=0;
_0x1A5:
	CLT
	BLD  R2,7
;    Counter = 0;
	LDI  R16,LOW(0)
;    do{  if(Counter<255)Counter++;
_0x1A7:
	CPI  R16,255
	BRSH _0x1A9
	SUBI R16,-1
;         if((LastSpeed<TopSpeed))LastSpeed+=7;
_0x1A9:
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	LDS  R26,_LastSpeed_S0000050000
	LDS  R27,_LastSpeed_S0000050000+1
	CP   R26,R30
	CPC  R27,R31
	BRGE _0x1AA
	LDS  R30,_LastSpeed_S0000050000
	LDS  R31,_LastSpeed_S0000050000+1
	ADIW R30,7
	STS  _LastSpeed_S0000050000,R30
	STS  _LastSpeed_S0000050000+1,R31
;         ScanDindingKa(LastSpeed,SetPoint);
_0x1AA:
	LDS  R30,_LastSpeed_S0000050000
	LDS  R31,_LastSpeed_S0000050000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	LDD  R27,Y+5+1
	RCALL _ScanDindingKa
;         sensor = BacaSensorWarna(0,WarnaGaris);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while(sensor==0B11111111); //((sensor|0B11000011)!=0B11000011);
	CPI  R17,255
	BREQ _0x1A7
;    do{  ScanDindingKa(LastSpeed,SetPoint);
_0x1AC:
	LDS  R30,_LastSpeed_S0000050000
	LDS  R31,_LastSpeed_S0000050000+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+5
	LDD  R27,Y+5+1
	RCALL _ScanDindingKa
;         sensor = BacaSensorWarna(0,WarnaGaris);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDD  R26,Y+3
	RCALL _BacaSensorWarna
	MOV  R17,R30
;         //LCD_GotoXY(0,1);LCD_Biner(sensor);
;    }while(sensor!=0B11111111); //((sensor|0B11000011)==0B11000011);
	CPI  R17,255
	BRNE _0x1AC
;    StopPWM();
	CALL _StopPWM
;    LastSpeed=TopSpeed;
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	STS  _LastSpeed_S0000050000,R30
	STS  _LastSpeed_S0000050000+1,R31
;}
_0x20A0003:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,7
	RET
;
;void WaktuDindingKi(int16_t TopSpeed,int16_t SetPoint,uint8_t Durasi)
;{
_WaktuDindingKi:
;    DTimeTick=0;DTime=0; //Reset Timer WallFollower
	ST   -Y,R26
;	TopSpeed -> Y+3
;	SetPoint -> Y+1
;	Durasi -> Y+0
	LDI  R30,LOW(0)
	STS  _DTimeTick,R30
	STS  _DTime,R30
	STS  _DTime+1,R30
;
;    while(DTime<= Durasi){ScanDindingKi(TopSpeed,SetPoint);}
_0x1AE:
	LD   R30,Y
	LDS  R26,_DTime
	LDS  R27,_DTime+1
	LDI  R31,0
	CP   R30,R26
	CPC  R31,R27
	BRLO _0x1B0
	LDD  R30,Y+3
	LDD  R31,Y+3+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+3
	LDD  R27,Y+3+1
	RCALL _ScanDindingKi
	RJMP _0x1AE
_0x1B0:
;    StopPWM();
	RJMP _0x20A0002
;}
;
;void WaktuDindingKa(int16_t TopSpeed,int16_t SetPoint,uint8_t Durasi)
;{
_WaktuDindingKa:
;    DTimeTick=0;DTime=0; //Reset Timer WallFollower
	ST   -Y,R26
;	TopSpeed -> Y+3
;	SetPoint -> Y+1
;	Durasi -> Y+0
	LDI  R30,LOW(0)
	STS  _DTimeTick,R30
	STS  _DTime,R30
	STS  _DTime+1,R30
;
;    while(DTime<= Durasi){ScanDindingKa(TopSpeed,SetPoint);}
_0x1B1:
	LD   R30,Y
	LDS  R26,_DTime
	LDS  R27,_DTime+1
	LDI  R31,0
	CP   R30,R26
	CPC  R31,R27
	BRLO _0x1B3
	LDD  R30,Y+3
	LDD  R31,Y+3+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+3
	LDD  R27,Y+3+1
	RCALL _ScanDindingKa
	RJMP _0x1B1
_0x1B3:
;    StopPWM();
_0x20A0002:
	CALL _StopPWM
;}
	ADIW R28,5
	RET
;
;#define Diameter_Roda   6.4  //Diameter dalam CM
;#define Pulse_PerRotasi 283
;#define Keliling_Roda   (PI*Diameter_Roda)
;#define Pulse_PerCM     Pulse_PerRotasi/Keliling_Roda
;#define CM_PerPulse     Keliling_Roda/Pulse_PerRotasi
;
;#define Jarak_Roda      15.5 //Jarak dalam CM
;
;#define Lengan          SudutServo6
;#define Capit1          SudutServo7
;#define Capit2          SudutServo8
;
;uint8_t notasi_bebas[5],notasi_dinding[5],notasi_buzzer[4],notasi_lcd[17],notasi_gripper[3],notasi_garis[4],notasi_obyek[5],notasi_delay[1],notasi_tes[5];
;uint8_t temp_char[3],xstring[16];
;uint8_t i,j,k;
;uint8_t flag_aksi;
;
;int16_t pwmki,pwmka;
;
;void Greeting()
;{
_Greeting:
;    Lengan(160); //turun
	LDI  R26,LOW(160)
	CALL _SudutServo6
;    Capit1(90);
	LDI  R26,LOW(90)
	CALL _SudutServo7
;    SudutServo8 (90);
	LDI  R26,LOW(90)
	CALL _SudutServo8
;    delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;
;    //==========Nada==========//
;    Lengan(160);
	LDI  R26,LOW(160)
	CALL _SudutServo6
;    Capit1(90);
	LDI  R26,LOW(90)
	CALL _SudutServo7
;    SudutServo8 (160);
	LDI  R26,LOW(160)
	CALL _SudutServo8
;    for(i=0;i<3;i++)
	LDI  R30,LOW(0)
	STS  _i,R30
_0x1B5:
	LDS  R26,_i
	CPI  R26,LOW(0x3)
	BRSH _0x1B6
;    {
;        Buzzer(Melodi[i],Tempo[i]*13);
	LDS  R30,_i
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW1PF
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_i
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	LDI  R26,LOW(13)
	MUL  R30,R26
	MOVW R30,R0
	LDI  R31,0
	MOVW R26,R30
	CALL _Buzzer
;    }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x1B5
_0x1B6:
;
;    Lengan(160);
	LDI  R26,LOW(160)
	CALL _SudutServo6
;    Capit1(20);
	LDI  R26,LOW(20)
	CALL _SudutServo7
;    SudutServo8(160);
	LDI  R26,LOW(160)
	CALL _SudutServo8
;    for(i=3;i<5;i++)
	LDI  R30,LOW(3)
	STS  _i,R30
_0x1B8:
	LDS  R26,_i
	CPI  R26,LOW(0x5)
	BRSH _0x1B9
;    {
;        Buzzer(Melodi[i],Tempo[i]*13);
	LDS  R30,_i
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW1PF
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_i
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	LDI  R26,LOW(13)
	MUL  R30,R26
	MOVW R30,R0
	LDI  R31,0
	MOVW R26,R30
	CALL _Buzzer
;    }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x1B8
_0x1B9:
;
;    Lengan(70);
	LDI  R26,LOW(70)
	CALL _SudutServo6
;    Capit1(20);
	LDI  R26,LOW(20)
	CALL _SudutServo7
;    SudutServo8(160);
	LDI  R26,LOW(160)
	CALL _SudutServo8
;    for(i=5;i<8;i++)
	LDI  R30,LOW(5)
	STS  _i,R30
_0x1BB:
	LDS  R26,_i
	CPI  R26,LOW(0x8)
	BRSH _0x1BC
;    {
;        Buzzer(Melodi[i],Tempo[i]*13);
	LDS  R30,_i
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW1PF
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_i
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	LDI  R26,LOW(13)
	MUL  R30,R26
	MOVW R30,R0
	LDI  R31,0
	MOVW R26,R30
	CALL _Buzzer
;    }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x1BB
_0x1BC:
;
;    Lengan(70);
	LDI  R26,LOW(70)
	CALL _SudutServo6
;    Capit1(90);
	LDI  R26,LOW(90)
	CALL _SudutServo7
;    SudutServo8(90);
	LDI  R26,LOW(90)
	CALL _SudutServo8
;    for(i=8;i<12;i++)
	LDI  R30,LOW(8)
	STS  _i,R30
_0x1BE:
	LDS  R26,_i
	CPI  R26,LOW(0xC)
	BRSH _0x1BF
;    {
;        Buzzer(Melodi[i],Tempo[i]*13);
	LDS  R30,_i
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW1PF
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_i
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	LDI  R26,LOW(13)
	MUL  R30,R26
	MOVW R30,R0
	LDI  R31,0
	MOVW R26,R30
	CALL _Buzzer
;    }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x1BE
_0x1BF:
;
;    Lengan(160);
	LDI  R26,LOW(160)
	CALL _SudutServo6
;    Capit1(90);
	LDI  R26,LOW(90)
	CALL _SudutServo7
;    SudutServo8(90);
	LDI  R26,LOW(90)
	CALL _SudutServo8
;    for(i=12;i<16;i++)
	LDI  R30,LOW(12)
	STS  _i,R30
_0x1C1:
	LDS  R26,_i
	CPI  R26,LOW(0x10)
	BRSH _0x1C2
;    {
;        Buzzer(Melodi[i],Tempo[i]*13);
	LDS  R30,_i
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW1PF
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_i
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	LDI  R26,LOW(13)
	MUL  R30,R26
	MOVW R30,R0
	LDI  R31,0
	MOVW R26,R30
	CALL _Buzzer
;    }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x1C1
_0x1C2:
;    //========================//
;
;    LCD_Hapus();
	CALL _LCD_Hapus
;    LCD_GotoXY(0,0);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
;    LCD_TulisTengah(0,"   -=WELCOME=-  ");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,238
	CALL _LCD_TulisTengah
;    delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
;    LCD_TulisTengah(0,"                ");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,255
	CALL _LCD_TulisTengah
;    LCD_TulisTengah(0,"  -=ROBOVIPER=- ");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,272
	CALL _LCD_TulisTengah
;    delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;    LCD_TulisKiri(1,"  READY........ ");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,289
	CALL _LCD_TulisKiri
;    delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
;}
	RET
;
;void Bebas()
;{
_Bebas:
;    LCD_Hapus();
	CALL _LCD_Hapus
;
;    notasi_bebas[0]=getchar();
	CALL _getchar
	STS  _notasi_bebas,R30
;    notasi_bebas[1]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,1
;    notasi_bebas[2]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,2
;    notasi_bebas[3]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,3
;
;    /////--Maju--/////
;    if(notasi_bebas[0]==0x00)
	LDS  R30,_notasi_bebas
	CPI  R30,0
	BREQ PC+3
	JMP _0x1C3
;    {
;        if(notasi_bebas[1]==0x00) //Waktu
	__GETB1MN _notasi_bebas,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1C4
;        {
;            notasi_bebas[4]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,4
;
;            LCD_TulisF(0,"MAJU-WAKTU");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,306
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_Text(1,xstring);
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,3
	LDI  R27,0
	CALL _LCD_Angka3
;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,4
	LDI  R27,0
	CALL _LCD_Angka3
;
;            //SetDataMotorPWM(notasi_bebas[3],notasi_bebas[4]);
;            SetDataMotorPID(notasi_bebas[3],notasi_bebas[4]);
	__GETB1MN _notasi_bebas,3
	ST   -Y,R30
	__GETB2MN _notasi_bebas,4
	CALL _SetDataMotorPID
;
;            delay_ms(notasi_bebas[2]*1000);
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _delay_ms
;
;            //SetDataMotorPWM(0,0); //Menghentikan Motor
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
;        else if(notasi_bebas[1]==0x01) //Jarak
	RJMP _0x1C5
_0x1C4:
	__GETB2MN _notasi_bebas,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1C6
;        {
;            int16_t Enkoder_t=0;
;            Enkoder1=0;Enkoder2=0;
	SBIW R28,2
	LDI  R30,LOW(0)
	ST   Y,R30
	STD  Y+1,R30
;	Enkoder_t -> Y+0
	CLR  R10
	CLR  R11
	CLR  R12
	CLR  R13
;
;            LCD_TulisF(0,"MAJU-JARAK");
	ST   -Y,R30
	__POINTD2FN _0x0,326
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            LCD_GotoXY(13,0);    LCD_Angka3(notasi_bebas[2]);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	CALL _LCD_Angka3
;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]*Pulse_PerCM);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(283)
	LDI  R31,HIGH(283)
	CALL __MULW12U
	CLR  R22
	CLR  R23
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41A0D97C
	CALL __DIVF21
	CALL __CFD1
	MOVW R26,R30
	CALL _LCD_Angka3
;
;            //SetDataMotorPWM(notasi_bebas[3],notasi_bebas[3]);
;            SetDataMotorPID(notasi_bebas[3],notasi_bebas[3]);
	__GETB1MN _notasi_bebas,3
	ST   -Y,R30
	__GETB2MN _notasi_bebas,3
	CALL _SetDataMotorPID
;
;            while(Enkoder_t <= notasi_bebas[2]*Pulse_PerCM)
_0x1C7:
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(283)
	LDI  R31,HIGH(283)
	CALL __MULW12U
	CLR  R22
	CLR  R23
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41A0D97C
	CALL __DIVF21
	LD   R26,Y
	LDD  R27,Y+1
	CALL __CWD2
	CALL __CDF2
	CALL __CMPF12
	BREQ PC+4
	BRCS PC+3
	JMP  _0x1C9
;            {
;                Enkoder_t = (Enkoder1+Enkoder2)/2;
	MOVW R26,R12
	ADD  R26,R10
	ADC  R27,R11
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL __DIVW21
	ST   Y,R30
	STD  Y+1,R31
;                LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	MOVW R26,R10
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;                LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	MOVW R26,R12
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;            }
	RJMP _0x1C7
_0x1C9:
;
;            //SetDataMotorPWM(0,0); //Menghentikan Motor
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
	ADIW R28,2
;    }
_0x1C6:
_0x1C5:
;
;    /////--Mundur--/////
;    else if(notasi_bebas[0]==0x01)
	RJMP _0x1CA
_0x1C3:
	LDS  R26,_notasi_bebas
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1CB
;    {
;        int16_t tempki,tempka;
;        if(notasi_bebas[1]==0x00) //Waktu
	SBIW R28,4
;	tempki -> Y+2
;	tempka -> Y+0
	__GETB1MN _notasi_bebas,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1CC
;        {
;            notasi_bebas[4]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,4
;
;            LCD_TulisF(0,"MUNDUR-WAKTU");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,337
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,3
	LDI  R27,0
	CALL _LCD_Angka3
;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,4
	LDI  R27,0
	CALL _LCD_Angka3
;
;            tempki=notasi_bebas[3];
	__GETB1MN _notasi_bebas,3
	LDI  R31,0
	STD  Y+2,R30
	STD  Y+2+1,R31
;            tempka=notasi_bebas[4];
	__GETB1MN _notasi_bebas,4
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;            //SetDataMotorPWM(tempki*-1,tempka*-1);
;            SetDataMotorPID(tempki*-1,tempka*-1);
	LDD  R30,Y+2
	LDI  R26,LOW(255)
	MULS R30,R26
	ST   -Y,R0
	LDD  R30,Y+1
	MULS R30,R26
	MOVW R30,R0
	MOV  R26,R30
	CALL _SetDataMotorPID
;
;            delay_ms(notasi_bebas[2]*1000);
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _delay_ms
;            //SetDataMotorPWM(0,0); //Menghentikan Motor
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
;        else if(notasi_bebas[1]==0x01) //Jarak
	RJMP _0x1CD
_0x1CC:
	__GETB2MN _notasi_bebas,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1CE
;        {
;            int16_t Enkoder_t=0;
;            Enkoder1=0;Enkoder2=0;
	SBIW R28,2
	LDI  R30,LOW(0)
	ST   Y,R30
	STD  Y+1,R30
;	tempki -> Y+4
;	tempka -> Y+2
;	Enkoder_t -> Y+0
	CLR  R10
	CLR  R11
	CLR  R12
	CLR  R13
;
;            LCD_TulisF(0,"MUNDUR-JARAK");
	ST   -Y,R30
	__POINTD2FN _0x0,350
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            LCD_GotoXY(13,0);    LCD_Angka3(notasi_bebas[2]);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	CALL _LCD_Angka3
;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]*Pulse_PerCM);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(283)
	LDI  R31,HIGH(283)
	CALL __MULW12U
	CLR  R22
	CLR  R23
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41A0D97C
	CALL __DIVF21
	CALL __CFD1
	MOVW R26,R30
	CALL _LCD_Angka3
;
;            tempki=notasi_bebas[3];
	__GETB1MN _notasi_bebas,3
	LDI  R31,0
	STD  Y+4,R30
	STD  Y+4+1,R31
;            tempka=notasi_bebas[3];
	__GETB1MN _notasi_bebas,3
	LDI  R31,0
	STD  Y+2,R30
	STD  Y+2+1,R31
;            //SetDataMotorPWM(tempki*-1,tempka*-1);
;            SetDataMotorPID(tempki*-1,tempka*-1);
	LDD  R30,Y+4
	LDI  R26,LOW(255)
	MULS R30,R26
	ST   -Y,R0
	LDD  R30,Y+3
	MULS R30,R26
	MOVW R30,R0
	MOV  R26,R30
	CALL _SetDataMotorPID
;
;            while(Enkoder_t <= notasi_bebas[2]*Pulse_PerCM)
_0x1CF:
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(283)
	LDI  R31,HIGH(283)
	CALL __MULW12U
	CLR  R22
	CLR  R23
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41A0D97C
	CALL __DIVF21
	LD   R26,Y
	LDD  R27,Y+1
	CALL __CWD2
	CALL __CDF2
	CALL __CMPF12
	BREQ PC+4
	BRCS PC+3
	JMP  _0x1D1
;            {
;                Enkoder_t = ((Enkoder1+Enkoder2)/2)*-1;
	MOVW R26,R12
	ADD  R26,R10
	ADC  R27,R11
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL __DIVW21
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ST   Y,R30
	STD  Y+1,R31
;                LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	MOVW R26,R10
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;                LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	MOVW R26,R12
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;            }
	RJMP _0x1CF
_0x1D1:
;
;            //SetDataMotorPWM(0,0); //Menghentikan Motor
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
	ADIW R28,2
;    }
_0x1CE:
_0x1CD:
	ADIW R28,4
;
;    /////--Kanan--/////
;    else if(notasi_bebas[0]==0x02)
	RJMP _0x1D2
_0x1CB:
	LDS  R26,_notasi_bebas
	CPI  R26,LOW(0x2)
	BREQ PC+3
	JMP _0x1D3
;    {
;        int16_t tempka;
;        if(notasi_bebas[1]==0x00) //Waktu
	SBIW R28,2
;	tempka -> Y+0
	__GETB1MN _notasi_bebas,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1D4
;        {
;            notasi_bebas[4]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,4
;
;            LCD_TulisF(0,"KANAN-WAKTU");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,363
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            tempka=notasi_bebas[4];
	__GETB1MN _notasi_bebas,4
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,3
	LDI  R27,0
	CALL _LCD_Angka3
;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,4
	LDI  R27,0
	CALL _LCD_Angka3
;            //SetDataMotorPWM(notasi_bebas[3],(tempka*-1));
;            SetDataMotorPID(notasi_bebas[3],(tempka*-1));
	__GETB1MN _notasi_bebas,3
	ST   -Y,R30
	LDD  R30,Y+1
	LDI  R26,LOW(255)
	MULS R30,R26
	MOVW R30,R0
	MOV  R26,R30
	CALL _SetDataMotorPID
;
;            delay_ms(notasi_bebas[2]*1000);
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _delay_ms
;            //SetDataMotorPWM(0,0); //Menghentikan Motor
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
;        else if(notasi_bebas[1]==0x01) //Sudut
	RJMP _0x1D5
_0x1D4:
	__GETB2MN _notasi_bebas,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1D6
;        {
;            int16_t Enkoder_t=0;
;            float wL,wR,heading=0,teta=0;
;            Enkoder1=0;Enkoder2=0;
	SBIW R28,18
	LDI  R24,18
	LDI  R26,LOW(0)
	LDI  R27,HIGH(0)
	LDI  R30,LOW(_0x1D7*2)
	LDI  R31,HIGH(_0x1D7*2)
	LDI  R22,BYTE3(_0x1D7*2)
	CALL __INITLOCB
;	tempka -> Y+18
;	Enkoder_t -> Y+16
;	wL -> Y+12
;	wR -> Y+8
;	heading -> Y+4
;	teta -> Y+0
	CLR  R10
	CLR  R11
	CLR  R12
	CLR  R13
;
;            LCD_TulisF(0,"KANAN-DERAJAT");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,375
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            tempka=notasi_bebas[3];
	__GETB1MN _notasi_bebas,3
	LDI  R31,0
	STD  Y+18,R30
	STD  Y+18+1,R31
;
;            SetDataMotorPID(0,0); //Stop Sejenak untuk Akurasi Perhitungan
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;            delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;
;            //SetDataMotorPWM(notasi_bebas[3],(tempka*-1));
;            SetDataMotorPID(notasi_bebas[3],(tempka*-1));
	__GETB1MN _notasi_bebas,3
	ST   -Y,R30
	LDD  R30,Y+19
	LDI  R26,LOW(255)
	MULS R30,R26
	MOVW R30,R0
	MOV  R26,R30
	CALL _SetDataMotorPID
;
;            while(heading <= notasi_bebas[2])
_0x1D8:
	__GETB1MN _notasi_bebas,2
	__GETD2S 4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __CDF1
	CALL __CMPF12
	BREQ PC+4
	BRCS PC+3
	JMP  _0x1DA
;            {
;                Enkoder_t = ((Enkoder1+(Enkoder2*-1))/2);
	MOVW R30,R12
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ADD  R30,R10
	ADC  R31,R11
	MOVW R26,R30
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL __DIVW21
	STD  Y+16,R30
	STD  Y+16+1,R31
;                //LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);      LCD_Data(' ');
;                //LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2*-1);   LCD_Data(' ');
;
;                wL=Enkoder1*CM_PerPulse;
	MOVW R30,R10
	CALL __CWD1
	CALL __CDF1
	__GETD2N 0x41A0D97C
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x438D8000
	CALL __DIVF21
	__PUTD1S 12
;                wR=Enkoder2*CM_PerPulse;
	MOVW R30,R12
	CALL __CWD1
	CALL __CDF1
	__GETD2N 0x41A0D97C
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x438D8000
	CALL __DIVF21
	__PUTD1S 8
;
;                teta=(wL-wR)/Jarak_Roda;
	__GETD2S 8
	__GETD1S 12
	CALL __SUBF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41780000
	CALL __DIVF21
	CALL __PUTD1S0
;                heading=teta*RAD2DEG;
	CALL __GETD2S0
	__GETD1N 0x42652EE1
	CALL __MULF12
	__PUTD1S 4
;
;                LCD_GotoXY(0,1);    LCD_Angka4(teta);      LCD_Data(' ');
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	CALL __GETD1S0
	CALL __CFD1
	MOVW R26,R30
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;                LCD_GotoXY(6,1);    LCD_Angka4(heading);   LCD_Data(' ');
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETD1S 4
	CALL __CFD1
	MOVW R26,R30
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;            }
	RJMP _0x1D8
_0x1DA:
;
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
	ADIW R28,18
;    }
_0x1D6:
_0x1D5:
	RJMP _0x284
;
;    /////--Kiri--/////
;    else if(notasi_bebas[0]==0x03)
_0x1D3:
	LDS  R26,_notasi_bebas
	CPI  R26,LOW(0x3)
	BREQ PC+3
	JMP _0x1DC
;    {
;        int16_t tempki;
;        if(notasi_bebas[1]==0x00) //Waktu
	SBIW R28,2
;	tempki -> Y+0
	__GETB1MN _notasi_bebas,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1DD
;        {
;            notasi_bebas[4]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_bebas,4
;
;            LCD_TulisF(0,"KIRI-WAKTU");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,389
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            tempki=notasi_bebas[3];
	__GETB1MN _notasi_bebas,3
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_bebas[3]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,3
	LDI  R27,0
	CALL _LCD_Angka3
;            LCD_GotoXY(8,1);    LCD_Angka3(notasi_bebas[4]);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,4
	LDI  R27,0
	CALL _LCD_Angka3
;            //SetDataMotorPWM((tempki*-1),notasi_bebas[4]);
;            SetDataMotorPID((tempki*-1),notasi_bebas[4]);
	LD   R30,Y
	LDI  R26,LOW(255)
	MULS R30,R26
	ST   -Y,R0
	__GETB2MN _notasi_bebas,4
	CALL _SetDataMotorPID
;
;            delay_ms(notasi_bebas[2]*1000);
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _delay_ms
;            //SetDataMotorPWM(0,0); //Menghentikan Motor
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
;
;        else if(notasi_bebas[1]==0x01) // Sudut
	RJMP _0x1DE
_0x1DD:
	__GETB2MN _notasi_bebas,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1DF
;        {
;            int16_t Enkoder_t=0;
;            float wL,wR,heading=0,teta=0;
;            Enkoder1=0;Enkoder2=0;
	SBIW R28,18
	LDI  R24,18
	LDI  R26,LOW(0)
	LDI  R27,HIGH(0)
	LDI  R30,LOW(_0x1E0*2)
	LDI  R31,HIGH(_0x1E0*2)
	LDI  R22,BYTE3(_0x1E0*2)
	CALL __INITLOCB
;	tempki -> Y+18
;	Enkoder_t -> Y+16
;	wL -> Y+12
;	wR -> Y+8
;	heading -> Y+4
;	teta -> Y+0
	CLR  R10
	CLR  R11
	CLR  R12
	CLR  R13
;
;            LCD_TulisF(0,"KIRI-DERAJAT");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,400
	CALL _LCD_TulisF
;            sprintf(xstring,"%d %d %d",notasi_bebas[2],notasi_bebas[3],notasi_bebas[4]);
	LDI  R30,LOW(_xstring)
	LDI  R31,HIGH(_xstring)
	ST   -Y,R31
	ST   -Y,R30
	__POINTD1FN _0x0,317
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,2
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,3
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	__GETB1MN _notasi_bebas,4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __PUTPARD1
	LDI  R24,12
	CALL _sprintf
	ADIW R28,18
;            //LCD_TulisF(1,xstring);
;
;            LCD_GotoXY(13,1);    LCD_Angka3(notasi_bebas[2]);
	LDI  R30,LOW(13)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_bebas,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SetDataMotorPID(0,0); //Stop Sejenak untuk Akurasi Perhitungan
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;            delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;
;            tempki=notasi_bebas[3];
	__GETB1MN _notasi_bebas,3
	LDI  R31,0
	STD  Y+18,R30
	STD  Y+18+1,R31
;            //SetDataMotorPWM((tempki*-1),notasi_bebas[3]);
;            SetDataMotorPID((tempki*-1),notasi_bebas[3]);
	LDD  R30,Y+18
	LDI  R26,LOW(255)
	MULS R30,R26
	ST   -Y,R0
	__GETB2MN _notasi_bebas,3
	CALL _SetDataMotorPID
;
;            while(heading <= notasi_bebas[2])
_0x1E1:
	__GETB1MN _notasi_bebas,2
	__GETD2S 4
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __CDF1
	CALL __CMPF12
	BREQ PC+4
	BRCS PC+3
	JMP  _0x1E3
;            {
;                Enkoder_t = ((Enkoder1+(Enkoder2*-1))/2);
	MOVW R30,R12
	LDI  R26,LOW(65535)
	LDI  R27,HIGH(65535)
	CALL __MULW12
	ADD  R30,R10
	ADC  R31,R11
	MOVW R26,R30
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL __DIVW21
	STD  Y+16,R30
	STD  Y+16+1,R31
;                //LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);      LCD_Data(' ');
;                //LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2*-1);   LCD_Data(' ');
;
;                wL=Enkoder1*CM_PerPulse;
	MOVW R30,R10
	CALL __CWD1
	CALL __CDF1
	__GETD2N 0x41A0D97C
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x438D8000
	CALL __DIVF21
	__PUTD1S 12
;                wR=Enkoder2*CM_PerPulse;
	MOVW R30,R12
	CALL __CWD1
	CALL __CDF1
	__GETD2N 0x41A0D97C
	CALL __MULF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x438D8000
	CALL __DIVF21
	__PUTD1S 8
;
;                teta=((wL-wR)/Jarak_Roda)*-1;
	__GETD2S 8
	__GETD1S 12
	CALL __SUBF12
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41780000
	CALL __DIVF21
	__GETD2N 0xBF800000
	CALL __MULF12
	CALL __PUTD1S0
;                heading=teta*RAD2DEG;
	CALL __GETD2S0
	__GETD1N 0x42652EE1
	CALL __MULF12
	__PUTD1S 4
;
;                LCD_GotoXY(0,1);    LCD_Angka4(teta);      LCD_Data(' ');
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	CALL __GETD1S0
	CALL __CFD1
	MOVW R26,R30
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;                LCD_GotoXY(6,1);    LCD_Angka4(heading);   LCD_Data(' ');
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETD1S 4
	CALL __CFD1
	MOVW R26,R30
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;            }
	RJMP _0x1E1
_0x1E3:
;
;            SetDataMotorPID(0,0); //Menghentikan Motor
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;        }
	ADIW R28,18
;    }
_0x1DF:
_0x1DE:
_0x284:
	ADIW R28,2
;}
_0x1DC:
_0x1D2:
_0x1CA:
	RET
;
;void Dinding()
;{
_Dinding:
;    LCD_Hapus();
	CALL _LCD_Hapus
;
;    notasi_dinding[0]=getchar(); //Acuan Kiri/Kanan
	CALL _getchar
	STS  _notasi_dinding,R30
;    notasi_dinding[1]=getchar(); //Garis   //  Waktu
	CALL _getchar
	__PUTB1MN _notasi_dinding,1
;    notasi_dinding[2]=getchar(); //nGaris  //  Waktu Tempuh
	CALL _getchar
	__PUTB1MN _notasi_dinding,2
;    notasi_dinding[3]=getchar(); //   Jarak Dinding
	CALL _getchar
	__PUTB1MN _notasi_dinding,3
;    notasi_dinding[4]=getchar(); //     Kecepatan
	CALL _getchar
	__PUTB1MN _notasi_dinding,4
;
;    /////--Kiri--/////
;    if(notasi_dinding[0]==0x00)
	LDS  R30,_notasi_dinding
	CPI  R30,0
	BREQ PC+3
	JMP _0x1E4
;    {
;        int16_t SpeedWall = notasi_dinding[4]*4;
;
;        if(notasi_dinding[1]==0x00) //Garis
	SBIW R28,2
;	SpeedWall -> Y+0
	__GETB1MN _notasi_dinding,4
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
	__GETB1MN _notasi_dinding,1
	CPI  R30,0
	BRNE _0x1E5
;        {
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"GARIS-KIRI");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,413
	CALL _LCD_TulisF
;
;            for(i=notasi_dinding[2];i>0;i--)
	__GETB1MN _notasi_dinding,2
	STS  _i,R30
_0x1E7:
	LDS  R26,_i
	CPI  R26,LOW(0x1)
	BRLO _0x1E8
;            {
;                GarisDindingKi(SpeedWall,notasi_dinding[3],pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _notasi_dinding,3
	LDI  R31,0
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _GarisDindingKi
;                Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;            }
	LDS  R30,_i
	SUBI R30,LOW(1)
	STS  _i,R30
	RJMP _0x1E7
_0x1E8:
;        }
;        else if(notasi_dinding[1]==0x01) //Waktu
	RJMP _0x1E9
_0x1E5:
	__GETB2MN _notasi_dinding,1
	CPI  R26,LOW(0x1)
	BRNE _0x1EA
;        {
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"WAKTU-KIRI");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,424
	CALL _LCD_TulisF
;            WaktuDindingKi(SpeedWall,notasi_dinding[3],notasi_dinding[2]);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _notasi_dinding,3
	LDI  R31,0
	ST   -Y,R31
	ST   -Y,R30
	__GETB2MN _notasi_dinding,2
	RCALL _WaktuDindingKi
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
;    }
_0x1EA:
_0x1E9:
	RJMP _0x285
;
;    /////--Kanan--/////
;    else if(notasi_dinding[0]==0x01)
_0x1E4:
	LDS  R26,_notasi_dinding
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1EC
;    {
;        int16_t SpeedWall = notasi_dinding[4]*4;
;
;        if(notasi_dinding[1]==0x00) //Garis
	SBIW R28,2
;	SpeedWall -> Y+0
	__GETB1MN _notasi_dinding,4
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
	__GETB1MN _notasi_dinding,1
	CPI  R30,0
	BRNE _0x1ED
;        {
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"GARIS-KANAN");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,435
	CALL _LCD_TulisF
;
;            for(i=notasi_dinding[2];i>0;i--)
	__GETB1MN _notasi_dinding,2
	STS  _i,R30
_0x1EF:
	LDS  R26,_i
	CPI  R26,LOW(0x1)
	BRLO _0x1F0
;            {
;                GarisDindingKa(SpeedWall,notasi_dinding[3],pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _notasi_dinding,3
	LDI  R31,0
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _GarisDindingKa
;                Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;            }
	LDS  R30,_i
	SUBI R30,LOW(1)
	STS  _i,R30
	RJMP _0x1EF
_0x1F0:
;        }
;        else if(notasi_dinding[1]==0x01) //Waktu
	RJMP _0x1F1
_0x1ED:
	__GETB2MN _notasi_dinding,1
	CPI  R26,LOW(0x1)
	BRNE _0x1F2
;        {
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"WAKTU-KANAN");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,447
	CALL _LCD_TulisF
;
;            WaktuDindingKa(SpeedWall,notasi_dinding[3],notasi_dinding[2]);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	__GETB1MN _notasi_dinding,3
	LDI  R31,0
	ST   -Y,R31
	ST   -Y,R30
	__GETB2MN _notasi_dinding,2
	RCALL _WaktuDindingKa
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
;    }
_0x1F2:
_0x1F1:
_0x285:
	ADIW R28,2
;}
_0x1EC:
	RET
;
;void Garis()
;{
_Garis:
;    LCD_Hapus();
	CALL _LCD_Hapus
;
;    notasi_garis[0]=getchar();
	CALL _getchar
	STS  _notasi_garis,R30
;    notasi_garis[1]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_garis,1
;    notasi_garis[2]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_garis,2
;
;    /////--Pertigaan Kanan--/////
;    if(notasi_garis[0]==0x00)
	LDS  R30,_notasi_garis
	CPI  R30,0
	BREQ PC+3
	JMP _0x1F3
;    {
;        if(notasi_garis[1]==0x00) //KANAN
	__GETB1MN _notasi_garis,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1F4
;        {
;            int16_t SpeedGaris;
;            LCD_Hapus();
	SBIW R28,2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;            LCD_TulisF(0,"3KANAN-KANAN");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,459
	CALL _LCD_TulisF
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;
;            Scan3Kanan(SpeedGaris,pBacaSensorR,pBacaSensorR);
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _Scan3Kanan
;            LCD_GotoXY(8,1);    LCD_Angka3(1);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDI  R26,LOW(1)
	LDI  R27,0
	CALL _LCD_Angka3
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;            //Scan3Kanan(notasi_garis[2],pBacaSensorR,pBacaSensorR);
;            //LCD_GotoXY(8,1);    LCD_Angka3(2);
;            //Buzzer(C6,20);
;            BelKaPWM(SpeedGaris,-SpeedGaris,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	CALL __ANEGW1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BelKaPWM
;            LCD_GotoXY(8,1);    LCD_Angka3(2);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDI  R26,LOW(2)
	RJMP _0x286
;            Buzzer(C6,20);
;        }
;        else if(notasi_garis[1]==0x01) // LURUS
_0x1F4:
	__GETB2MN _notasi_garis,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1F6
;        {
;            int16_t SpeedGaris;
;            LCD_Hapus();
	SBIW R28,2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;            LCD_TulisF(0,"3KANAN-LURUS");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,472
	CALL _LCD_TulisF
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;
;            Scan3Kanan(SpeedGaris,pBacaSensorR,pBacaSensorR);
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _Scan3Kanan
;            LCD_GotoXY(8,1);    LCD_Angka3(1);
	LDI  R30,LOW(8)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDI  R26,LOW(1)
_0x286:
	LDI  R27,0
	CALL _LCD_Angka3
;            //Scan3Kanan(notasi_garis[2],pBacaSensorR,pBacaSensorR);
;            //LCD_GotoXY(8,1);    LCD_Angka3(2);
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
	ADIW R28,2
;    }
_0x1F6:
;
;    /////--Pertigaan Kiri--/////
;    else if(notasi_garis[0]==0x01)
	RJMP _0x1F7
_0x1F3:
	LDS  R26,_notasi_garis
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x1F8
;    {
;        if(notasi_garis[1]==0x00) //KIRI
	__GETB1MN _notasi_garis,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1F9
;        {
;            int16_t SpeedGaris;
;            LCD_Hapus();
	SBIW R28,2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;            LCD_TulisF(0,"3KIRI-KIRI");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,485
	CALL _LCD_TulisF
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;
;            Scan3Kiri(SpeedGaris,pBacaSensorR,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _Scan3Kiri
;            BelKiPWM(-SpeedGaris,SpeedGaris,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	CALL __ANEGW1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BelKiPWM
;            Buzzer(C6,20);
	RJMP _0x287
;        }
;        else if(notasi_garis[1]==0x01) // LURUS
_0x1F9:
	__GETB2MN _notasi_garis,1
	CPI  R26,LOW(0x1)
	BRNE _0x1FB
;        {
;            int16_t SpeedGaris;
;            LCD_Hapus();
	SBIW R28,2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;            LCD_TulisF(0,"3KIRI-LURUS");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,496
	CALL _LCD_TulisF
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;
;            Scan3Kiri(SpeedGaris,pBacaSensorR,pBacaSensorR);
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _Scan3Kiri
;            Buzzer(C6,20);
_0x287:
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
	ADIW R28,2
;    }
_0x1FB:
;
;    /////--Perempatan--/////
;    else if(notasi_garis[0]==0x02)
	RJMP _0x1FC
_0x1F8:
	LDS  R26,_notasi_garis
	CPI  R26,LOW(0x2)
	BREQ PC+3
	JMP _0x1FD
;    {
;        if(notasi_garis[1]==0x00) //KANAN
	__GETB1MN _notasi_garis,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x1FE
;        {
;            int16_t SpeedGaris;
;            LCD_Hapus();
	SBIW R28,2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;            LCD_TulisF(0,"PEREMPATAN-KANAN");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,508
	CALL _LCD_TulisF
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;
;            ScanPerempatan(SpeedGaris,pBacaSensorR,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _ScanPerempatan
;            BelKaPWM(SpeedGaris,-SpeedGaris,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	CALL __ANEGW1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BelKaPWM
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
	ADIW R28,2
;        else if(notasi_garis[1]==0x01) //KIRI
	RJMP _0x1FF
_0x1FE:
	__GETB2MN _notasi_garis,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x200
;        {
;            int16_t SpeedGaris;
;            LCD_Hapus();
	SBIW R28,2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;            LCD_TulisF(0,"PEREMPATAN-KIRI");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,525
	CALL _LCD_TulisF
;
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;
;            ScanPerempatan(SpeedGaris,pBacaSensorR,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _ScanPerempatan
;            BelKiPWM(-SpeedGaris,SpeedGaris,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	CALL __ANEGW1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BelKiPWM
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
	ADIW R28,2
;        else if(notasi_garis[1]==0x02) // LURUS
	RJMP _0x201
_0x200:
	__GETB2MN _notasi_garis,1
	CPI  R26,LOW(0x2)
	BREQ PC+3
	JMP _0x202
;        {
;            int16_t SpeedGaris,Enkoder_t=0;
;            Enkoder1=0;Enkoder2=0;
	SBIW R28,4
	LDI  R30,LOW(0)
	ST   Y,R30
	STD  Y+1,R30
;	SpeedGaris -> Y+2
;	Enkoder_t -> Y+0
	CLR  R10
	CLR  R11
	CLR  R12
	CLR  R13
;
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"PEREMPATAN-LURUS");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,541
	CALL _LCD_TulisF
;            LCD_GotoXY(0,1);    LCD_Angka3(notasi_garis[2]);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	__GETB2MN _notasi_garis,2
	LDI  R27,0
	CALL _LCD_Angka3
;
;            SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	STD  Y+2,R30
	STD  Y+2+1,R31
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;
;            ScanPerempatan(SpeedGaris,pBacaSensorR,pBacaSensorR);
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _ScanPerempatan
;            SetDataMotorPWM(SpeedGaris,SpeedGaris);
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	CALL _SetDataMotorPWM
;            while(Enkoder_t <= 2*Pulse_PerCM)
_0x203:
	LD   R30,Y
	LDD  R31,Y+1
	CALL __CWD1
	CALL __CDF1
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x41E13449
	CALL __CMPF12
	BREQ PC+4
	BRCS PC+3
	JMP  _0x205
;            {
;                Enkoder_t = (Enkoder1+Enkoder2)/2;
	MOVW R26,R12
	ADD  R26,R10
	ADC  R27,R11
	LDI  R30,LOW(2)
	LDI  R31,HIGH(2)
	CALL __DIVW21
	ST   Y,R30
	STD  Y+1,R31
;                LCD_GotoXY(0,1);    LCD_Angka4(Enkoder1);   LCD_Data(' ');
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	MOVW R26,R10
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;                LCD_GotoXY(6,1);    LCD_Angka4(Enkoder2);   LCD_Data(' ');
	LDI  R30,LOW(6)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	MOVW R26,R12
	CALL _LCD_Angka4
	LDI  R26,LOW(32)
	CALL _LCD_Data
;            }
	RJMP _0x203
_0x205:
;            SetDataMotorPWM(0,0);
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	LDI  R27,0
	CALL _SetDataMotorPWM
;
;            Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;        }
	ADIW R28,4
;    }
_0x202:
_0x201:
_0x1FF:
;
;    /////--Jalan Bebas--/////
;    else if(notasi_garis[0]==0x03)
	RJMP _0x206
_0x1FD:
	LDS  R26,_notasi_garis
	CPI  R26,LOW(0x3)
	BREQ PC+3
	JMP _0x207
;    {
;        uint16_t i,TimeJalanBebas,SpeedGaris;
;        LCD_Hapus();
	SBIW R28,6
;	i -> Y+4
;	TimeJalanBebas -> Y+2
;	SpeedGaris -> Y+0
	CALL _LCD_Hapus
;        LCD_TulisF(0,"JALAN BEBAS");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,558
	CALL _LCD_TulisF
;
;        TimeJalanBebas=notasi_garis[1];
	__GETB1MN _notasi_garis,1
	LDI  R31,0
	STD  Y+2,R30
	STD  Y+2+1,R31
;        SpeedGaris = notasi_garis[2]*4;
	__GETB1MN _notasi_garis,2
	LSL  R30
	LSL  R30
	LDI  R31,0
	ST   Y,R30
	STD  Y+1,R31
;
;        for(i=0;i<TimeJalanBebas;i++)
	LDI  R30,LOW(0)
	STD  Y+4,R30
	STD  Y+4+1,R30
_0x209:
	LDD  R30,Y+2
	LDD  R31,Y+2+1
	LDD  R26,Y+4
	LDD  R27,Y+4+1
	CP   R26,R30
	CPC  R27,R31
	BRSH _0x20A
;        {
;            usCounter=0;
	LDI  R30,LOW(0)
	STS  _usCounter,R30
	STS  _usCounter+1,R30
;            while(usCounter<=40000) //1000uS/25uS=40 -> proses selama 1ms
_0x20B:
	LDS  R26,_usCounter
	LDS  R27,_usCounter+1
	CPI  R26,LOW(0x9C41)
	LDI  R30,HIGH(0x9C41)
	CPC  R27,R30
	BRSH _0x20D
;            {
;                ScanGaris(SpeedGaris,pBacaSensorR);
	LD   R30,Y
	LDD  R31,Y+1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _ScanGaris
;            }
	RJMP _0x20B
_0x20D:
;        }
	LDD  R30,Y+4
	LDD  R31,Y+4+1
	ADIW R30,1
	STD  Y+4,R30
	STD  Y+4+1,R31
	RJMP _0x209
_0x20A:
;
;        SetDataMotorPWM(0,0);
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	LDI  R27,0
	CALL _SetDataMotorPWM
;        Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
;    }
	ADIW R28,6
;}
_0x207:
_0x206:
_0x1FC:
_0x1F7:
	RET
;
;void Alarm()
;{
_Alarm:
;    uint16_t Freq_Alarm = C6;
;
;    LCD_Hapus();
	ST   -Y,R17
	ST   -Y,R16
;	Freq_Alarm -> R16,R17
	__GETWRN 16,17,1046
	CALL _LCD_Hapus
;    notasi_buzzer[0]=getchar();
	CALL _getchar
	STS  _notasi_buzzer,R30
;
;    /////--Monostable--/////
;    if(notasi_buzzer[0]==0)
	CPI  R30,0
	BRNE _0x20E
;    {
;        notasi_buzzer[1]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_buzzer,1
;        LCD_TulisF(0,"Buzzer Status:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,570
	CALL _LCD_TulisF
;        LCD_TulisF(1,"ON");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,585
	CALL _LCD_TulisF
;
;        Buzzer(Freq_Alarm,notasi_buzzer[1]*1000);
	ST   -Y,R17
	ST   -Y,R16
	__GETB2MN _notasi_buzzer,1
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _Buzzer
;
;        LCD_Hapus();
	CALL _LCD_Hapus
;        LCD_TulisF(0,"Buzzer Status:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,570
	CALL _LCD_TulisF
;        LCD_TulisF(1,"OFF");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,588
	CALL _LCD_TulisF
;    }
;
;    /////--Astable--/////
;    if(notasi_buzzer[0]==1)
_0x20E:
	LDS  R26,_notasi_buzzer
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x20F
;    {
;        notasi_buzzer[1]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_buzzer,1
;        notasi_buzzer[2]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_buzzer,2
;        notasi_buzzer[3]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_buzzer,3
;
;        for(i=0;i<notasi_buzzer[3];i++)
	LDI  R30,LOW(0)
	STS  _i,R30
_0x211:
	__GETB1MN _notasi_buzzer,3
	LDS  R26,_i
	CP   R26,R30
	BRLO PC+3
	JMP _0x212
;        {
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"Buzzer Status:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,570
	CALL _LCD_TulisF
;            LCD_TulisF(1,"ON");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,585
	CALL _LCD_TulisF
;            LCD_GotoXY(14,1);
	LDI  R30,LOW(14)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
;            LCD_Data(i+48);
	LDS  R26,_i
	SUBI R26,-LOW(48)
	CALL _LCD_Data
;
;            Buzzer(Freq_Alarm,notasi_buzzer[1]*1000);
	ST   -Y,R17
	ST   -Y,R16
	__GETB2MN _notasi_buzzer,1
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _Buzzer
;
;            LCD_Hapus();
	CALL _LCD_Hapus
;            LCD_TulisF(0,"Buzzer Status:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,570
	CALL _LCD_TulisF
;            LCD_TulisF(1,"OFF");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,588
	CALL _LCD_TulisF
;            LCD_GotoXY(14,1);
	LDI  R30,LOW(14)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
;            LCD_Data(i+49);
	LDS  R26,_i
	SUBI R26,-LOW(49)
	CALL _LCD_Data
;
;            delay_ms(notasi_buzzer[2]*1000);
	__GETB2MN _notasi_buzzer,2
	LDI  R27,0
	LDI  R30,LOW(1000)
	LDI  R31,HIGH(1000)
	CALL __MULW12U
	MOVW R26,R30
	CALL _delay_ms
;        }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x211
_0x212:
;    }
;
;    /////--Lagu--/////
;    if(notasi_buzzer[0]==2)
_0x20F:
	LDS  R26,_notasi_buzzer
	CPI  R26,LOW(0x2)
	BRNE _0x213
;    {
;        LCD_Hapus();
	CALL _LCD_Hapus
;        LCD_TulisF(0," -=Buzzer Nada=-");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,592
	CALL _LCD_TulisF
;
;        for(i=0;i<78;i++)
	LDI  R30,LOW(0)
	STS  _i,R30
_0x215:
	LDS  R26,_i
	CPI  R26,LOW(0x4E)
	BRSH _0x216
;        {
;            Buzzer(Melodi[i],Tempo[i]*13);
	LDS  R30,_i
	LDI  R26,LOW(_Melodi*2)
	LDI  R27,HIGH(_Melodi*2)
	LDI  R24,BYTE3(_Melodi*2)
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __LSLD1
	CALL __ADDD12
	CALL __GETW1PF
	ST   -Y,R31
	ST   -Y,R30
	LDS  R30,_i
	CLR  R31
	CLR  R22
	CLR  R23
	SUBI R30,LOW(-_Tempo*2)
	SBCI R31,HIGH(-_Tempo*2)
	SBCI R22,BYTE3(-_Tempo*2)
	__GETBRPF 30
	LDI  R26,LOW(13)
	MUL  R30,R26
	MOVW R30,R0
	LDI  R31,0
	MOVW R26,R30
	CALL _Buzzer
;        }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x215
_0x216:
;    }
;}
_0x213:
	LD   R16,Y+
	LD   R17,Y+
	RET
;
;void Lcd()
;{
_Lcd:
;    if(flag_aksi==0x08)
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x8)
	BRNE _0x217
;    {
;        LCD_Hapus();
	CALL _LCD_Hapus
;        LCD_TulisF(0,"PESAN :");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,609
	CALL _LCD_TulisF
;
;        notasi_lcd[0]=getchar();
	CALL _getchar
	STS  _notasi_lcd,R30
;        for(i=0;i<notasi_lcd[0];i++)
	LDI  R30,LOW(0)
	STS  _i,R30
_0x219:
	LDS  R30,_notasi_lcd
	LDS  R26,_i
	CP   R26,R30
	BRSH _0x21A
;        {
;            notasi_lcd[i+1]=getchar();
	LDS  R30,_i
	LDI  R31,0
	__ADDW1MN _notasi_lcd,1
	PUSH R31
	PUSH R30
	CALL _getchar
	POP  R26
	POP  R27
	ST   X,R30
;            LCD_GotoXY(i,1);
	LDS  R30,_i
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
;            LCD_Data(notasi_lcd[i+1]);
	LDS  R30,_i
	LDI  R31,0
	__ADDW1MN _notasi_lcd,1
	LD   R26,Z
	CALL _LCD_Data
;        }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x219
_0x21A:
;    }
;}
_0x217:
	RET
;
;void Tunda()
;{
_Tunda:
;    LCD_Hapus();
	CALL _LCD_Hapus
;    LCD_TulisF(0,"DELAY");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,617
	CALL _LCD_TulisF
;
;    notasi_delay[0]=getchar();
	CALL _getchar
	STS  _notasi_delay,R30
;    for(i=notasi_delay[0];i>0;i--)
	STS  _i,R30
_0x21C:
	LDS  R26,_i
	CPI  R26,LOW(0x1)
	BRLO _0x21D
;    {
;        LCD_GotoXY(0,1);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
;        LCD_Angka3(i-1);
	LDS  R30,_i
	SUBI R30,LOW(1)
	LDI  R31,0
	MOVW R26,R30
	CALL _LCD_Angka3
;        delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
;    }
	LDS  R30,_i
	SUBI R30,LOW(1)
	STS  _i,R30
	RJMP _0x21C
_0x21D:
;
;}
	RET
;
;void Gripper()
;{
_Gripper:
;    LCD_Hapus();
	CALL _LCD_Hapus
;
;    notasi_gripper[0]=getchar();
	CALL _getchar
	STS  _notasi_gripper,R30
;    notasi_gripper[1]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_gripper,1
;
;    /////--CAPIT--/////
;    if(notasi_gripper[0]==0)
	LDS  R30,_notasi_gripper
	CPI  R30,0
	BREQ PC+3
	JMP _0x21E
;    {
;        if(notasi_gripper[1]==0)
	__GETB1MN _notasi_gripper,1
	CPI  R30,0
	BRNE _0x21F
;        {
;            LCD_TulisF(0,"GRIPPER:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,623
	CALL _LCD_TulisF
;            LCD_TulisF(1,"BUKA ");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,632
	CALL _LCD_TulisF
;            Capit1(60);
	LDI  R26,LOW(60)
	CALL _SudutServo7
;            Capit2(120);
	LDI  R26,LOW(120)
	CALL _SudutServo8
;        }
;        else if(notasi_gripper[1]==1)
	RJMP _0x220
_0x21F:
	__GETB2MN _notasi_gripper,1
	CPI  R26,LOW(0x1)
	BRNE _0x221
;        {
;            LCD_TulisF(0,"GRIPPER:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,623
	CALL _LCD_TulisF
;            LCD_TulisF(1,"TUTUP");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,638
	CALL _LCD_TulisF
;            Capit1(120);
	LDI  R26,LOW(120)
	CALL _SudutServo7
;            Capit2(60);
	LDI  R26,LOW(60)
	CALL _SudutServo8
;        }
;        else if(notasi_gripper[1]==2)
	RJMP _0x222
_0x221:
	__GETB2MN _notasi_gripper,1
	CPI  R26,LOW(0x2)
	BRNE _0x223
;        {
;            notasi_gripper[2]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_gripper,2
;
;            LCD_TulisF(0,"GRIPPER:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,623
	CALL _LCD_TulisF
;            LCD_TulisF(1,"VARIATIF : ");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,644
	CALL _LCD_TulisF
;            LCD_Angka3(notasi_gripper[2]);
	__GETB2MN _notasi_gripper,2
	LDI  R27,0
	CALL _LCD_Angka3
;            Capit1(notasi_gripper[2]);
	__GETB2MN _notasi_gripper,2
	CALL _SudutServo7
;        }
;    }
_0x223:
_0x222:
_0x220:
;
;    /////--LENGAN--/////
;    if(notasi_gripper[0]==1)
_0x21E:
	LDS  R26,_notasi_gripper
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x224
;    {
;        if(notasi_gripper[1]==0)
	__GETB1MN _notasi_gripper,1
	CPI  R30,0
	BRNE _0x225
;        {
;            LCD_TulisF(0,"LENGAN:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,656
	CALL _LCD_TulisF
;            LCD_TulisF(1,"NAIK");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,664
	CALL _LCD_TulisF
;            Lengan(70);
	LDI  R26,LOW(70)
	RJMP _0x288
;        }
;        else if(notasi_gripper[1]==1)
_0x225:
	__GETB2MN _notasi_gripper,1
	CPI  R26,LOW(0x1)
	BRNE _0x227
;        {
;            LCD_TulisF(0,"LENGAN:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,656
	CALL _LCD_TulisF
;            LCD_TulisF(1,"TURUN");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,669
	CALL _LCD_TulisF
;            Lengan(160);
	LDI  R26,LOW(160)
	RJMP _0x288
;        }
;        else if(notasi_gripper[1]==2)
_0x227:
	__GETB2MN _notasi_gripper,1
	CPI  R26,LOW(0x2)
	BRNE _0x229
;        {
;            notasi_gripper[2]=getchar();
	CALL _getchar
	__PUTB1MN _notasi_gripper,2
;
;            LCD_TulisF(0,"LENGAN:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,656
	CALL _LCD_TulisF
;            LCD_TulisF(1,"SUDUT : ");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,675
	CALL _LCD_TulisF
;            LCD_Angka3(notasi_gripper[2]);
	__GETB2MN _notasi_gripper,2
	LDI  R27,0
	CALL _LCD_Angka3
;            Lengan(notasi_gripper[2]);
	__GETB2MN _notasi_gripper,2
_0x288:
	CALL _SudutServo6
;        }
;    }
_0x229:
;
;    /////--POLA--/////
;    if(notasi_gripper[0]==2)
_0x224:
	LDS  R26,_notasi_gripper
	CPI  R26,LOW(0x2)
	BREQ PC+3
	JMP _0x22A
;    {
;        if(notasi_gripper[1]==0)
	__GETB1MN _notasi_gripper,1
	CPI  R30,0
	BREQ PC+3
	JMP _0x22B
;        {
;            LCD_TulisF(0,"POLA:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,684
	CALL _LCD_TulisF
;            LCD_TulisF(1,"ANGKAT");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,690
	CALL _LCD_TulisF
;
;            delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
;
;            Lengan(160);         //1. Lengan Turun
	LDI  R26,LOW(160)
	CALL _SudutServo6
;            Capit1(20);        //2. Buka Capit
	LDI  R26,LOW(20)
	CALL _SudutServo7
;            Capit2(160);
	LDI  R26,LOW(160)
	CALL _SudutServo8
;
;            delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;            SetDataMotorPID(1,1);delay_ms(500);SetDataMotorPID(0,0); //3. Maju
	LDI  R30,LOW(1)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _SetDataMotorPID
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;            Capit1(120);        //4. Tutup Capit
	LDI  R26,LOW(120)
	CALL _SudutServo7
;            Capit2(60);
	LDI  R26,LOW(60)
	CALL _SudutServo8
;            delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;
;            for(i=160;i>70;i--)
	LDI  R30,LOW(160)
	STS  _i,R30
_0x22D:
	LDS  R26,_i
	CPI  R26,LOW(0x47)
	BRLO _0x22E
;            {
;                Lengan(i);
	CALL _SudutServo6
;                delay_ms(15);
	LDI  R26,LOW(15)
	LDI  R27,0
	CALL _delay_ms
;            }
	LDS  R30,_i
	SUBI R30,LOW(1)
	STS  _i,R30
	RJMP _0x22D
_0x22E:
;            //Lengan(70);         //5. Lengan Angkat
;            delay_ms(500);
	RJMP _0x289
;        }
;        else if(notasi_gripper[1]==1)
_0x22B:
	__GETB2MN _notasi_gripper,1
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x230
;        {
;            LCD_TulisF(0,"POLA:");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,684
	CALL _LCD_TulisF
;            LCD_TulisF(1,"TARUH");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,697
	CALL _LCD_TulisF
;
;            //Lengan(2);         //1. Lengan Turun
;            for(i=70;i<160;i++)
	LDI  R30,LOW(70)
	STS  _i,R30
_0x232:
	LDS  R26,_i
	CPI  R26,LOW(0xA0)
	BRSH _0x233
;            {
;                Lengan(i);
	CALL _SudutServo6
;                delay_ms(15);
	LDI  R26,LOW(15)
	LDI  R27,0
	CALL _delay_ms
;            }
	LDS  R30,_i
	SUBI R30,-LOW(1)
	STS  _i,R30
	RJMP _0x232
_0x233:
;            delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;            Capit1(20);        //2. Buka Capit
	LDI  R26,LOW(20)
	CALL _SudutServo7
;            Capit2(160);
	LDI  R26,LOW(160)
	CALL _SudutServo8
;            delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;            SetDataMotorPID(-1,-1);delay_ms(500);SetDataMotorPID(0,0); //3. Mundur
	LDI  R30,LOW(255)
	ST   -Y,R30
	LDI  R26,LOW(255)
	CALL _SetDataMotorPID
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
;            Capit1(120);        //4. Tutup Capit
	LDI  R26,LOW(120)
	CALL _SudutServo7
;            Capit2(60);
	LDI  R26,LOW(60)
	CALL _SudutServo8
;            delay_ms(500);
_0x289:
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
;        }
;    }
_0x230:
;}
_0x22A:
	RET
;
;//  --------------  DEKLARASI VARIABEL GLOBAL --------------------------
;
;void main(void)
; 0000 0019 {
_main:
; 0000 001A     delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
; 0000 001B 
; 0000 001C     SystemInit();
	CALL _SystemInit
; 0000 001D     SetDataMotorPID(0,0);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _SetDataMotorPID
; 0000 001E 
; 0000 001F     Greeting();
	CALL _Greeting
; 0000 0020 
; 0000 0021     while(1)
_0x234:
; 0000 0022     {
; 0000 0023         LCD_Hapus();
	CALL _LCD_Hapus
; 0000 0024         LCD_TulisF(0,"StandBy..........");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,703
	CALL _LCD_TulisF
; 0000 0025         delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
; 0000 0026 
; 0000 0027         while(!PB1)
	SBIC 0x13,3
	RJMP _0x239
; 0000 0028         {
; 0000 0029             delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 002A             while(!PB1){}
_0x23A:
	SBIS 0x13,3
	RJMP _0x23A
; 0000 002B 
; 0000 002C             while(1)
_0x23D:
; 0000 002D             {
; 0000 002E                 LCD_Hapus();
	CALL _LCD_Hapus
; 0000 002F                 LCD_TulisF(0,"GOOOOOO.........");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,721
	CALL _LCD_TulisF
; 0000 0030 
; 0000 0031                 while(getchar()==0xFF)
_0x240:
	CALL _getchar
	CPI  R30,LOW(0xFF)
	BREQ PC+3
	JMP _0x242
; 0000 0032                 {
; 0000 0033                     flag_aksi=getchar();
	CALL _getchar
	STS  _flag_aksi,R30
; 0000 0034                     Buzzer(C6,20);
	LDI  R30,LOW(1046)
	LDI  R31,HIGH(1046)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(20)
	LDI  R27,0
	CALL _Buzzer
; 0000 0035 
; 0000 0036                     ///////////==BEBAS==///////////
; 0000 0037                     if(flag_aksi==0x00)
	LDS  R30,_flag_aksi
	CPI  R30,0
	BRNE _0x243
; 0000 0038                     {
; 0000 0039                         Bebas();
	CALL _Bebas
; 0000 003A                     }
; 0000 003B 
; 0000 003C                     ///////////==TES GARIS==///////////
; 0000 003D                     if(flag_aksi==0x01)
_0x243:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x1)
	BREQ PC+3
	JMP _0x244
; 0000 003E                     {
; 0000 003F                         notasi_tes[0]=getchar();
	CALL _getchar
	STS  _notasi_tes,R30
; 0000 0040                         if(notasi_tes[0]==0x00)
	CPI  R30,0
	BRNE _0x245
; 0000 0041                         {
; 0000 0042                             ScanPerempatan(150,pBacaSensorR,pBacaSensorR);
	LDI  R30,LOW(150)
	LDI  R31,HIGH(150)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _ScanPerempatan
; 0000 0043                         }
; 0000 0044                         else if(notasi_tes[0]==0x01)
	RJMP _0x246
_0x245:
	LDS  R26,_notasi_tes
	CPI  R26,LOW(0x1)
	BRNE _0x247
; 0000 0045                         {
; 0000 0046                             Scan3Kanan(150,pBacaSensorR,pBacaSensorR);
	LDI  R30,LOW(150)
	LDI  R31,HIGH(150)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _Scan3Kanan
; 0000 0047                         }
; 0000 0048                         else if(notasi_tes[0]==0x02)
	RJMP _0x248
_0x247:
	LDS  R26,_notasi_tes
	CPI  R26,LOW(0x2)
	BRNE _0x249
; 0000 0049                         {
; 0000 004A                             Scan3Kiri(150,pBacaSensorR,pBacaSensorR);
	LDI  R30,LOW(150)
	LDI  R31,HIGH(150)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(64)
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _Scan3Kiri
; 0000 004B                         }
; 0000 004C                         else if(notasi_tes[0]==0x03)
	RJMP _0x24A
_0x249:
	LDS  R26,_notasi_tes
	CPI  R26,LOW(0x3)
	BRNE _0x24B
; 0000 004D                         {
; 0000 004E                             BelKaPWM(150,-150,pBacaSensorR);
	LDI  R30,LOW(150)
	LDI  R31,HIGH(150)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(65386)
	LDI  R31,HIGH(65386)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BelKaPWM
; 0000 004F                         }
; 0000 0050                         else if(notasi_tes[0]==0x04)
	RJMP _0x24C
_0x24B:
	LDS  R26,_notasi_tes
	CPI  R26,LOW(0x4)
	BRNE _0x24D
; 0000 0051                         {
; 0000 0052                             BelKiPWM(-150,150,pBacaSensorR);
	LDI  R30,LOW(65386)
	LDI  R31,HIGH(65386)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(150)
	LDI  R31,HIGH(150)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(64)
	CALL _BelKiPWM
; 0000 0053                         }
; 0000 0054 
; 0000 0055                     }
_0x24D:
_0x24C:
_0x24A:
_0x248:
_0x246:
; 0000 0056 
; 0000 0057                     ///////////==Dinding==///////////
; 0000 0058                     if(flag_aksi==0x04)
_0x244:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x4)
	BRNE _0x24E
; 0000 0059                     {
; 0000 005A                         Dinding();
	RCALL _Dinding
; 0000 005B                     }
; 0000 005C 
; 0000 005D                     ///////////==GARIS==///////////
; 0000 005E                     if(flag_aksi==0x05)
_0x24E:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x5)
	BRNE _0x24F
; 0000 005F                     {
; 0000 0060                         Garis();
	RCALL _Garis
; 0000 0061                     }
; 0000 0062 
; 0000 0063                     ///////////==GRIPPER==///////////
; 0000 0064                     if(flag_aksi==0x06)
_0x24F:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x6)
	BRNE _0x250
; 0000 0065                     {
; 0000 0066                         Gripper();
	RCALL _Gripper
; 0000 0067                     }
; 0000 0068 
; 0000 0069                     ///////////==BUZZER==///////////
; 0000 006A                     if(flag_aksi==0x07)
_0x250:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x7)
	BRNE _0x251
; 0000 006B                     {
; 0000 006C                         Alarm();
	RCALL _Alarm
; 0000 006D                     }
; 0000 006E 
; 0000 006F                     ////////////==LCD==////////////
; 0000 0070                     if(flag_aksi==0x08)
_0x251:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x8)
	BRNE _0x252
; 0000 0071                     {
; 0000 0072                         Lcd();
	RCALL _Lcd
; 0000 0073                     }
; 0000 0074 
; 0000 0075                     ///////////==DELAY==///////////
; 0000 0076                     if(flag_aksi==0x09)
_0x252:
	LDS  R26,_flag_aksi
	CPI  R26,LOW(0x9)
	BRNE _0x253
; 0000 0077                     {
; 0000 0078                         Tunda();
	RCALL _Tunda
; 0000 0079                     }
; 0000 007A                 }
_0x253:
	RJMP _0x240
_0x242:
; 0000 007B             }
	RJMP _0x23D
; 0000 007C         }
_0x239:
; 0000 007D         while(!PB2)
_0x254:
	SBIC 0x13,2
	RJMP _0x256
; 0000 007E         {
; 0000 007F             KalibrasiHitamPutihEx(0,pKalibrasiHPR);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(192)
	CALL _KalibrasiHitamPutihEx
; 0000 0080         }
	RJMP _0x254
_0x256:
; 0000 0081         while(!PB3)
_0x257:
	SBIC 0x13,1
	RJMP _0x259
; 0000 0082         {
; 0000 0083             LCD_Hapus();
	CALL _LCD_Hapus
; 0000 0084             LCD_TulisF(0,"SET PID");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,738
	CALL _LCD_TulisF
; 0000 0085             LCD_TulisF(1,"1: KP   2: KD");
	LDI  R30,LOW(1)
	ST   -Y,R30
	__POINTD2FN _0x0,746
	CALL _LCD_TulisF
; 0000 0086             delay_ms(500);
	LDI  R26,LOW(500)
	LDI  R27,HIGH(500)
	CALL _delay_ms
; 0000 0087 
; 0000 0088             while(1)
_0x25A:
; 0000 0089             {
; 0000 008A                 if(!PB1)
	SBIC 0x13,3
	RJMP _0x25D
; 0000 008B                 {
; 0000 008C                     while(PB4)
_0x25E:
	SBIS 0x13,0
	RJMP _0x260
; 0000 008D                     {
; 0000 008E                         LCD_Hapus();
	CALL _LCD_Hapus
; 0000 008F                         LCD_TulisF(0,"KP");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,760
	CALL _LCD_TulisF
; 0000 0090                         LCD_GotoXY(0,1);    LCD_Angka3(SetKP);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDI  R26,LOW(_SetKP)
	LDI  R27,HIGH(_SetKP)
	CALL __EEPROMRDW
	MOVW R26,R30
	CALL _LCD_Angka3
; 0000 0091                         delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 0092 
; 0000 0093                         if(PB1==0)
	SBIC 0x13,3
	RJMP _0x261
; 0000 0094                         {
; 0000 0095                             delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 0096                             SetKP++;
	LDI  R26,LOW(_SetKP)
	LDI  R27,HIGH(_SetKP)
	CALL __EEPROMRDW
	ADIW R30,1
	CALL __EEPROMWRW
	SBIW R30,1
; 0000 0097                         }
; 0000 0098                         else if (PB2==0)
	RJMP _0x262
_0x261:
	SBIC 0x13,2
	RJMP _0x263
; 0000 0099                         {
; 0000 009A                             delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 009B                             SetKP--;
	LDI  R26,LOW(_SetKP)
	LDI  R27,HIGH(_SetKP)
	CALL __EEPROMRDW
	SBIW R30,1
	CALL __EEPROMWRW
	ADIW R30,1
; 0000 009C                         }
; 0000 009D                     }
_0x263:
_0x262:
	RJMP _0x25E
_0x260:
; 0000 009E 
; 0000 009F                     delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
; 0000 00A0                 }
; 0000 00A1                 else if (!PB2)
	RJMP _0x264
_0x25D:
	SBIC 0x13,2
	RJMP _0x265
; 0000 00A2                 {
; 0000 00A3                     while(PB4)
_0x266:
	SBIS 0x13,0
	RJMP _0x268
; 0000 00A4                     {
; 0000 00A5                         LCD_Hapus();
	CALL _LCD_Hapus
; 0000 00A6                         LCD_TulisF(0,"KD");
	LDI  R30,LOW(0)
	ST   -Y,R30
	__POINTD2FN _0x0,757
	CALL _LCD_TulisF
; 0000 00A7                         LCD_GotoXY(0,1);    LCD_Angka3(SetKD);
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(1)
	CALL _LCD_GotoXY
	LDI  R26,LOW(_SetKD)
	LDI  R27,HIGH(_SetKD)
	CALL __EEPROMRDW
	MOVW R26,R30
	CALL _LCD_Angka3
; 0000 00A8                         delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 00A9 
; 0000 00AA                         if(PB1==0)
	SBIC 0x13,3
	RJMP _0x269
; 0000 00AB                         {
; 0000 00AC                             delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 00AD                             SetKD++;
	LDI  R26,LOW(_SetKD)
	LDI  R27,HIGH(_SetKD)
	CALL __EEPROMRDW
	ADIW R30,1
	CALL __EEPROMWRW
	SBIW R30,1
; 0000 00AE                         }
; 0000 00AF                         else if (PB2==0)
	RJMP _0x26A
_0x269:
	SBIC 0x13,2
	RJMP _0x26B
; 0000 00B0                         {
; 0000 00B1                             delay_ms(100);
	LDI  R26,LOW(100)
	LDI  R27,0
	CALL _delay_ms
; 0000 00B2                             SetKD--;
	LDI  R26,LOW(_SetKD)
	LDI  R27,HIGH(_SetKD)
	CALL __EEPROMRDW
	SBIW R30,1
	CALL __EEPROMWRW
	ADIW R30,1
; 0000 00B3                         }
; 0000 00B4                     }
_0x26B:
_0x26A:
	RJMP _0x266
_0x268:
; 0000 00B5 
; 0000 00B6                     delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
; 0000 00B7                 }
; 0000 00B8                 else if (!PB4){LCD_Hapus();delay_ms(1000);break;}
	RJMP _0x26C
_0x265:
	SBIC 0x13,0
	RJMP _0x26D
	CALL _LCD_Hapus
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
	RJMP _0x25C
; 0000 00B9             }
_0x26D:
_0x26C:
_0x264:
	RJMP _0x25A
_0x25C:
; 0000 00BA         }
	RJMP _0x257
_0x259:
; 0000 00BB         while(!PB4)
_0x26E:
	SBIS 0x13,0
; 0000 00BC         {
; 0000 00BD             /*
; 0000 00BE             int16_t direction,speed;
; 0000 00BF 
; 0000 00C0             delay_ms(100);
; 0000 00C1             while(!PBEx4);
; 0000 00C2 
; 0000 00C3             LCD_Hapus();
; 0000 00C4             LCD_TulisF(0,"REMOT");
; 0000 00C5             delay_ms(500);
; 0000 00C6 
; 0000 00C7             while(PBEx4)
; 0000 00C8             {
; 0000 00C9                 while(getchar()==0x55)
; 0000 00CA                 {
; 0000 00CB                     speed=getchar()*40;
; 0000 00CC                     direction=getchar();
; 0000 00CD 
; 0000 00CE                     LCD_GotoXY(0,0);
; 0000 00CF                     LCD_Angka3(speed/40);
; 0000 00D0                     LCD_Angka3(direction);
; 0000 00D1 
; 0000 00D2                     if(direction>=0&&direction<=5||direction>31&&direction<=35)
; 0000 00D3                     {
; 0000 00D4                         SetDataMotorPWM(speed,speed);
; 0000 00D5                     }
; 0000 00D6                     else if(direction>5&&direction<=14)
; 0000 00D7                     {
; 0000 00D8                         SetDataMotorPWM(-speed,speed);
; 0000 00D9                     }
; 0000 00DA                     else if(direction>14&&direction<=23)
; 0000 00DB                     {
; 0000 00DC                         SetDataMotorPWM(-speed,-speed);
; 0000 00DD                     }
; 0000 00DE                     else if(direction>23&&direction<=31)
; 0000 00DF                     {
; 0000 00E0                         SetDataMotorPWM(speed,-speed);
; 0000 00E1                     }
; 0000 00E2                     else
; 0000 00E3                     {
; 0000 00E4                         SetDataMotorPWM(0,0);
; 0000 00E5                     }
; 0000 00E6                 }
; 0000 00E7             }
; 0000 00E8 
; 0000 00E9             SetDataMotorPWM(0,0);
; 0000 00EA             delay_ms(1000);
; 0000 00EB             */
; 0000 00EC         }
	RJMP _0x26E
; 0000 00ED     }
	RJMP _0x234
; 0000 00EE }
_0x271:
	RJMP _0x271
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif

	.CSEG
_put_buff_G100:
	ST   -Y,R27
	ST   -Y,R26
	ST   -Y,R17
	ST   -Y,R16
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,2
	CALL __GETW1P
	SBIW R30,0
	BREQ _0x2000010
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,4
	CALL __GETW1P
	MOVW R16,R30
	SBIW R30,0
	BREQ _0x2000012
	__CPWRN 16,17,2
	BRLO _0x2000013
	MOVW R30,R16
	SBIW R30,1
	MOVW R16,R30
	__PUTW1SNS 2,4
_0x2000012:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	ADIW R26,2
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	SBIW R30,1
	LDD  R26,Y+4
	STD  Z+0,R26
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	CALL __GETW1P
	TST  R31
	BRMI _0x2000014
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
_0x2000014:
_0x2000013:
	RJMP _0x2000015
_0x2000010:
	LDD  R26,Y+2
	LDD  R27,Y+2+1
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	ST   X+,R30
	ST   X,R31
_0x2000015:
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,5
	RET
__print_G100:
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,8
	CALL __SAVELOCR6
	LDI  R17,0
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   X+,R30
	ST   X,R31
_0x2000016:
	MOVW R26,R28
	ADIW R26,20
	CALL __GETD1P_INC
	__ADDD1N 1
	CALL __PUTDP1_DEC
	__SUBD1N 1
	__GETBRPF 30
	MOV  R18,R30
	CPI  R30,0
	BRNE PC+3
	JMP _0x2000018
	MOV  R30,R17
	CPI  R30,0
	BRNE _0x200001C
	CPI  R18,37
	BRNE _0x200001D
	LDI  R17,LOW(1)
	RJMP _0x200001E
_0x200001D:
	ST   -Y,R18
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
_0x200001E:
	RJMP _0x200001B
_0x200001C:
	CPI  R30,LOW(0x1)
	BRNE _0x200001F
	CPI  R18,37
	BRNE _0x2000020
	ST   -Y,R18
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	RJMP _0x20000C9
_0x2000020:
	LDI  R17,LOW(2)
	LDI  R20,LOW(0)
	LDI  R16,LOW(0)
	CPI  R18,45
	BRNE _0x2000021
	LDI  R16,LOW(1)
	RJMP _0x200001B
_0x2000021:
	CPI  R18,43
	BRNE _0x2000022
	LDI  R20,LOW(43)
	RJMP _0x200001B
_0x2000022:
	CPI  R18,32
	BRNE _0x2000023
	LDI  R20,LOW(32)
	RJMP _0x200001B
_0x2000023:
	RJMP _0x2000024
_0x200001F:
	CPI  R30,LOW(0x2)
	BRNE _0x2000025
_0x2000024:
	LDI  R21,LOW(0)
	LDI  R17,LOW(3)
	CPI  R18,48
	BRNE _0x2000026
	ORI  R16,LOW(128)
	RJMP _0x200001B
_0x2000026:
	RJMP _0x2000027
_0x2000025:
	CPI  R30,LOW(0x3)
	BREQ PC+3
	JMP _0x200001B
_0x2000027:
	CPI  R18,48
	BRLO _0x200002A
	CPI  R18,58
	BRLO _0x200002B
_0x200002A:
	RJMP _0x2000029
_0x200002B:
	LDI  R26,LOW(10)
	MUL  R21,R26
	MOV  R21,R0
	MOV  R30,R18
	SUBI R30,LOW(48)
	ADD  R21,R30
	RJMP _0x200001B
_0x2000029:
	MOV  R30,R18
	CPI  R30,LOW(0x63)
	BRNE _0x200002F
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	SBIW R30,4
	STD  Y+18,R30
	STD  Y+18+1,R31
	LDD  R26,Z+4
	ST   -Y,R26
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	RJMP _0x2000030
_0x200002F:
	CPI  R30,LOW(0x73)
	BRNE _0x2000032
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	SBIW R30,4
	STD  Y+18,R30
	STD  Y+18+1,R31
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	CALL _strlen
	MOV  R17,R30
	RJMP _0x2000033
_0x2000032:
	CPI  R30,LOW(0x70)
	BRNE _0x2000035
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	SBIW R30,4
	STD  Y+18,R30
	STD  Y+18+1,R31
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	ADIW R26,4
	CALL __GETD1P
	__PUTD1S 6
	__GETD2S 6
	CALL _strlenf
	MOV  R17,R30
	ORI  R16,LOW(8)
_0x2000033:
	ORI  R16,LOW(2)
	ANDI R16,LOW(127)
	LDI  R19,LOW(0)
	RJMP _0x2000036
_0x2000035:
	CPI  R30,LOW(0x64)
	BREQ _0x2000039
	CPI  R30,LOW(0x69)
	BRNE _0x200003A
_0x2000039:
	ORI  R16,LOW(4)
	RJMP _0x200003B
_0x200003A:
	CPI  R30,LOW(0x75)
	BRNE _0x200003C
_0x200003B:
	__POINTD1FN _tbl10_G100,0
	__PUTD1S 6
	LDI  R17,LOW(5)
	RJMP _0x200003D
_0x200003C:
	CPI  R30,LOW(0x58)
	BRNE _0x200003F
	ORI  R16,LOW(8)
	RJMP _0x2000040
_0x200003F:
	CPI  R30,LOW(0x78)
	BREQ PC+3
	JMP _0x2000071
_0x2000040:
	__POINTD1FN _tbl16_G100,0
	__PUTD1S 6
	LDI  R17,LOW(4)
_0x200003D:
	SBRS R16,2
	RJMP _0x2000042
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	SBIW R30,4
	STD  Y+18,R30
	STD  Y+18+1,R31
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+12,R30
	STD  Y+12+1,R31
	LDD  R26,Y+13
	TST  R26
	BRPL _0x2000043
	CALL __ANEGW1
	STD  Y+12,R30
	STD  Y+12+1,R31
	LDI  R20,LOW(45)
_0x2000043:
	CPI  R20,0
	BREQ _0x2000044
	SUBI R17,-LOW(1)
	RJMP _0x2000045
_0x2000044:
	ANDI R16,LOW(251)
_0x2000045:
	RJMP _0x2000046
_0x2000042:
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	SBIW R30,4
	STD  Y+18,R30
	STD  Y+18+1,R31
	LDD  R26,Y+18
	LDD  R27,Y+18+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+12,R30
	STD  Y+12+1,R31
_0x2000046:
_0x2000036:
	SBRC R16,0
	RJMP _0x2000047
_0x2000048:
	CP   R17,R21
	BRSH _0x200004A
	SBRS R16,7
	RJMP _0x200004B
	SBRS R16,2
	RJMP _0x200004C
	ANDI R16,LOW(251)
	MOV  R18,R20
	SUBI R17,LOW(1)
	RJMP _0x200004D
_0x200004C:
	LDI  R18,LOW(48)
_0x200004D:
	RJMP _0x200004E
_0x200004B:
	LDI  R18,LOW(32)
_0x200004E:
	ST   -Y,R18
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	SUBI R21,LOW(1)
	RJMP _0x2000048
_0x200004A:
_0x2000047:
	MOV  R19,R17
	SBRS R16,1
	RJMP _0x200004F
_0x2000050:
	CPI  R19,0
	BREQ _0x2000052
	SBRS R16,3
	RJMP _0x2000053
	MOVW R26,R28
	ADIW R26,6
	CALL __GETD1P_INC
	__ADDD1N 1
	CALL __PUTDP1_DEC
	__SUBD1N 1
	__GETBRPF 18
	RJMP _0x2000054
_0x2000053:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LD   R18,X+
	STD  Y+6,R26
	STD  Y+6+1,R27
_0x2000054:
	ST   -Y,R18
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	CPI  R21,0
	BREQ _0x2000055
	SUBI R21,LOW(1)
_0x2000055:
	SUBI R19,LOW(1)
	RJMP _0x2000050
_0x2000052:
	RJMP _0x2000056
_0x200004F:
_0x2000058:
	LDI  R18,LOW(48)
	__GETD1S 6
	CALL __GETW1PF
	STD  Y+10,R30
	STD  Y+10+1,R31
	__GETD1S 6
	__ADDD1N 2
	__PUTD1S 6
_0x200005A:
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	CP   R26,R30
	CPC  R27,R31
	BRLO _0x200005C
	SUBI R18,-LOW(1)
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	LDD  R30,Y+12
	LDD  R31,Y+12+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+12,R30
	STD  Y+12+1,R31
	RJMP _0x200005A
_0x200005C:
	CPI  R18,58
	BRLO _0x200005D
	SBRS R16,3
	RJMP _0x200005E
	SUBI R18,-LOW(7)
	RJMP _0x200005F
_0x200005E:
	SUBI R18,-LOW(39)
_0x200005F:
_0x200005D:
	SBRC R16,4
	RJMP _0x2000061
	CPI  R18,49
	BRSH _0x2000063
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	SBIW R26,1
	BRNE _0x2000062
_0x2000063:
	RJMP _0x20000CA
_0x2000062:
	CP   R21,R19
	BRLO _0x2000067
	SBRS R16,0
	RJMP _0x2000068
_0x2000067:
	RJMP _0x2000066
_0x2000068:
	LDI  R18,LOW(32)
	SBRS R16,7
	RJMP _0x2000069
	LDI  R18,LOW(48)
_0x20000CA:
	ORI  R16,LOW(16)
	SBRS R16,2
	RJMP _0x200006A
	ANDI R16,LOW(251)
	ST   -Y,R20
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	CPI  R21,0
	BREQ _0x200006B
	SUBI R21,LOW(1)
_0x200006B:
_0x200006A:
_0x2000069:
_0x2000061:
	ST   -Y,R18
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	CPI  R21,0
	BREQ _0x200006C
	SUBI R21,LOW(1)
_0x200006C:
_0x2000066:
	SUBI R19,LOW(1)
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	SBIW R26,2
	BRLO _0x2000059
	RJMP _0x2000058
_0x2000059:
_0x2000056:
	SBRS R16,0
	RJMP _0x200006D
_0x200006E:
	CPI  R21,0
	BREQ _0x2000070
	SUBI R21,LOW(1)
	LDI  R30,LOW(32)
	ST   -Y,R30
	LDD  R26,Y+15
	LDD  R27,Y+15+1
	LDD  R30,Y+17
	LDD  R31,Y+17+1
	ICALL
	RJMP _0x200006E
_0x2000070:
_0x200006D:
_0x2000071:
_0x2000030:
_0x20000C9:
	LDI  R17,LOW(0)
_0x200001B:
	RJMP _0x2000016
_0x2000018:
	LDD  R26,Y+14
	LDD  R27,Y+14+1
	CALL __GETW1P
	CALL __LOADLOCR6
	ADIW R28,24
	RET
_sprintf:
	PUSH R15
	MOV  R15,R24
	SBIW R28,6
	CALL __SAVELOCR4
	MOVW R26,R28
	ADIW R26,14
	CALL __ADDW2R15
	CALL __GETW1P
	SBIW R30,0
	BRNE _0x2000072
	LDI  R30,LOW(65535)
	LDI  R31,HIGH(65535)
	RJMP _0x20A0001
_0x2000072:
	MOVW R26,R28
	ADIW R26,6
	CALL __ADDW2R15
	MOVW R16,R26
	MOVW R26,R28
	ADIW R26,14
	CALL __ADDW2R15
	CALL __GETW1P
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R30,LOW(0)
	STD  Y+8,R30
	STD  Y+8+1,R30
	MOVW R26,R28
	ADIW R26,10
	CALL __ADDW2R15
	CALL __GETD1P
	CALL __PUTPARD1
	ST   -Y,R17
	ST   -Y,R16
	LDI  R30,LOW(_put_buff_G100)
	LDI  R31,HIGH(_put_buff_G100)
	ST   -Y,R31
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,12
	RCALL __print_G100
	MOVW R18,R30
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LDI  R30,LOW(0)
	ST   X,R30
	MOVW R30,R18
_0x20A0001:
	CALL __LOADLOCR4
	ADIW R28,10
	POP  R15
	RET

	.CSEG

	.CSEG

	.CSEG
_strlen:
	ST   -Y,R27
	ST   -Y,R26
    ld   r26,y+
    ld   r27,y+
    clr  r30
    clr  r31
strlen0:
    ld   r22,x+
    tst  r22
    breq strlen1
    adiw r30,1
    rjmp strlen0
strlen1:
    ret
_strlenf:
	CALL __PUTPARD2
    clr  r26
    clr  r27
    ld   r30,y+
    ld   r31,y+
    ld   r22,y+
    ld   r23,y+
    out  rampz,r22
strlenf0:
    elpm r0,z+
    tst  r0
    breq strlenf1
    adiw r26,1
    rjmp strlenf0
strlenf1:
    movw r30,r26
    ret

	.CSEG

	.DSEG

	.CSEG

	.DSEG
_dMotor1:
	.BYTE 0x1
_dMotor2:
	.BYTE 0x1
_dSpeed1:
	.BYTE 0x1
_dSpeed2:
	.BYTE 0x1
_dCounter1:
	.BYTE 0x1
_dCounter2:
	.BYTE 0x1

	.ESEG
_SetKP:
	.BYTE 0x2
_SetKD:
	.BYTE 0x2

	.DSEG
_lErrorM2_S0000008000:
	.BYTE 0x1
_iErrorM2_S0000008000:
	.BYTE 0x1
_lErrorM1_S0000009000:
	.BYTE 0x1
_iErrorM1_S0000009000:
	.BYTE 0x1
_rx_buffer0:
	.BYTE 0x200
_rx_buffer1:
	.BYTE 0x200
_rx_wr_index1:
	.BYTE 0x1
_rx_rd_index1:
	.BYTE 0x1
_rx_counter1:
	.BYTE 0x1
_SysTick:
	.BYTE 0x1
_usCounter:
	.BYTE 0x2
_ServoCounter_S000003E000:
	.BYTE 0x2
_ServoCounter_S000003F000:
	.BYTE 0x1
_LaguTick_S000003F000:
	.BYTE 0x1
_TempoTick_S000003F000:
	.BYTE 0x1
_DTime:
	.BYTE 0x2
_DTimeTick:
	.BYTE 0x1
__dCounter1_S0000041000:
	.BYTE 0x1
__dCounter2_S0000041000:
	.BYTE 0x1
_Timer2Tick_S0000041000:
	.BYTE 0x1
_LastError_S0000047000:
	.BYTE 0x2
_LastSpeed_S0000048000:
	.BYTE 0x2
_LastSpeed_S0000049000:
	.BYTE 0x2
_LastSpeed_S000004A000:
	.BYTE 0x2
_LastErrorDKi_S000004D000:
	.BYTE 0x2
_LastErrorDKa_S000004E000:
	.BYTE 0x2
_LastSpeed_S000004F000:
	.BYTE 0x2
_LastSpeed_S0000050000:
	.BYTE 0x2
_notasi_bebas:
	.BYTE 0x5
_notasi_dinding:
	.BYTE 0x5
_notasi_buzzer:
	.BYTE 0x4
_notasi_lcd:
	.BYTE 0x11
_notasi_gripper:
	.BYTE 0x3
_notasi_garis:
	.BYTE 0x4
_notasi_delay:
	.BYTE 0x1
_notasi_tes:
	.BYTE 0x5
_xstring:
	.BYTE 0x10
_i:
	.BYTE 0x1
_flag_aksi:
	.BYTE 0x1
__seed_G104:
	.BYTE 0x4

	.CSEG

	.CSEG
_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	__DELAY_USW 0xFA0
	wdr
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

__ROUND_REPACK:
	TST  R21
	BRPL __REPACK
	CPI  R21,0x80
	BRNE __ROUND_REPACK0
	SBRS R30,0
	RJMP __REPACK
__ROUND_REPACK0:
	ADIW R30,1
	ADC  R22,R25
	ADC  R23,R25
	BRVS __REPACK1

__REPACK:
	LDI  R21,0x80
	EOR  R21,R23
	BRNE __REPACK0
	PUSH R21
	RJMP __ZERORES
__REPACK0:
	CPI  R21,0xFF
	BREQ __REPACK1
	LSL  R22
	LSL  R0
	ROR  R21
	ROR  R22
	MOV  R23,R21
	RET
__REPACK1:
	PUSH R21
	TST  R0
	BRMI __REPACK2
	RJMP __MAXRES
__REPACK2:
	RJMP __MINRES

__UNPACK:
	LDI  R21,0x80
	MOV  R1,R25
	AND  R1,R21
	LSL  R24
	ROL  R25
	EOR  R25,R21
	LSL  R21
	ROR  R24

__UNPACK1:
	LDI  R21,0x80
	MOV  R0,R23
	AND  R0,R21
	LSL  R22
	ROL  R23
	EOR  R23,R21
	LSL  R21
	ROR  R22
	RET

__CFD1U:
	SET
	RJMP __CFD1U0
__CFD1:
	CLT
__CFD1U0:
	PUSH R21
	RCALL __UNPACK1
	CPI  R23,0x80
	BRLO __CFD10
	CPI  R23,0xFF
	BRCC __CFD10
	RJMP __ZERORES
__CFD10:
	LDI  R21,22
	SUB  R21,R23
	BRPL __CFD11
	NEG  R21
	CPI  R21,8
	BRTC __CFD19
	CPI  R21,9
__CFD19:
	BRLO __CFD17
	SER  R30
	SER  R31
	SER  R22
	LDI  R23,0x7F
	BLD  R23,7
	RJMP __CFD15
__CFD17:
	CLR  R23
	TST  R21
	BREQ __CFD15
__CFD18:
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R23
	DEC  R21
	BRNE __CFD18
	RJMP __CFD15
__CFD11:
	CLR  R23
__CFD12:
	CPI  R21,8
	BRLO __CFD13
	MOV  R30,R31
	MOV  R31,R22
	MOV  R22,R23
	SUBI R21,8
	RJMP __CFD12
__CFD13:
	TST  R21
	BREQ __CFD15
__CFD14:
	LSR  R23
	ROR  R22
	ROR  R31
	ROR  R30
	DEC  R21
	BRNE __CFD14
__CFD15:
	TST  R0
	BRPL __CFD16
	RCALL __ANEGD1
__CFD16:
	POP  R21
	RET

__CDF1U:
	SET
	RJMP __CDF1U0
__CDF1:
	CLT
__CDF1U0:
	SBIW R30,0
	SBCI R22,0
	SBCI R23,0
	BREQ __CDF10
	CLR  R0
	BRTS __CDF11
	TST  R23
	BRPL __CDF11
	COM  R0
	RCALL __ANEGD1
__CDF11:
	MOV  R1,R23
	LDI  R23,30
	TST  R1
__CDF12:
	BRMI __CDF13
	DEC  R23
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R1
	RJMP __CDF12
__CDF13:
	MOV  R30,R31
	MOV  R31,R22
	MOV  R22,R1
	PUSH R21
	RCALL __REPACK
	POP  R21
__CDF10:
	RET

__SWAPACC:
	PUSH R20
	MOVW R20,R30
	MOVW R30,R26
	MOVW R26,R20
	MOVW R20,R22
	MOVW R22,R24
	MOVW R24,R20
	MOV  R20,R0
	MOV  R0,R1
	MOV  R1,R20
	POP  R20
	RET

__UADD12:
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	RET

__NEGMAN1:
	COM  R30
	COM  R31
	COM  R22
	SUBI R30,-1
	SBCI R31,-1
	SBCI R22,-1
	RET

__SUBF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R25,0x80
	BREQ __ADDF129
	LDI  R21,0x80
	EOR  R1,R21

__ADDF120:
	CPI  R23,0x80
	BREQ __ADDF128
__ADDF121:
	MOV  R21,R23
	SUB  R21,R25
	BRVS __ADDF1211
	BRPL __ADDF122
	RCALL __SWAPACC
	RJMP __ADDF121
__ADDF122:
	CPI  R21,24
	BRLO __ADDF123
	CLR  R26
	CLR  R27
	CLR  R24
__ADDF123:
	CPI  R21,8
	BRLO __ADDF124
	MOV  R26,R27
	MOV  R27,R24
	CLR  R24
	SUBI R21,8
	RJMP __ADDF123
__ADDF124:
	TST  R21
	BREQ __ADDF126
__ADDF125:
	LSR  R24
	ROR  R27
	ROR  R26
	DEC  R21
	BRNE __ADDF125
__ADDF126:
	MOV  R21,R0
	EOR  R21,R1
	BRMI __ADDF127
	RCALL __UADD12
	BRCC __ADDF129
	ROR  R22
	ROR  R31
	ROR  R30
	INC  R23
	BRVC __ADDF129
	RJMP __MAXRES
__ADDF128:
	RCALL __SWAPACC
__ADDF129:
	RCALL __REPACK
	POP  R21
	RET
__ADDF1211:
	BRCC __ADDF128
	RJMP __ADDF129
__ADDF127:
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	BREQ __ZERORES
	BRCC __ADDF1210
	COM  R0
	RCALL __NEGMAN1
__ADDF1210:
	TST  R22
	BRMI __ADDF129
	LSL  R30
	ROL  R31
	ROL  R22
	DEC  R23
	BRVC __ADDF1210

__ZERORES:
	CLR  R30
	CLR  R31
	CLR  R22
	CLR  R23
	POP  R21
	RET

__MINRES:
	SER  R30
	SER  R31
	LDI  R22,0x7F
	SER  R23
	POP  R21
	RET

__MAXRES:
	SER  R30
	SER  R31
	LDI  R22,0x7F
	LDI  R23,0x7F
	POP  R21
	RET

__MULF12:
	PUSH R21
	RCALL __UNPACK
	CPI  R23,0x80
	BREQ __ZERORES
	CPI  R25,0x80
	BREQ __ZERORES
	EOR  R0,R1
	SEC
	ADC  R23,R25
	BRVC __MULF124
	BRLT __ZERORES
__MULF125:
	TST  R0
	BRMI __MINRES
	RJMP __MAXRES
__MULF124:
	PUSH R0
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	CLR  R17
	CLR  R18
	CLR  R25
	MUL  R22,R24
	MOVW R20,R0
	MUL  R24,R31
	MOV  R19,R0
	ADD  R20,R1
	ADC  R21,R25
	MUL  R22,R27
	ADD  R19,R0
	ADC  R20,R1
	ADC  R21,R25
	MUL  R24,R30
	RCALL __MULF126
	MUL  R27,R31
	RCALL __MULF126
	MUL  R22,R26
	RCALL __MULF126
	MUL  R27,R30
	RCALL __MULF127
	MUL  R26,R31
	RCALL __MULF127
	MUL  R26,R30
	ADD  R17,R1
	ADC  R18,R25
	ADC  R19,R25
	ADC  R20,R25
	ADC  R21,R25
	MOV  R30,R19
	MOV  R31,R20
	MOV  R22,R21
	MOV  R21,R18
	POP  R20
	POP  R19
	POP  R18
	POP  R17
	POP  R0
	TST  R22
	BRMI __MULF122
	LSL  R21
	ROL  R30
	ROL  R31
	ROL  R22
	RJMP __MULF123
__MULF122:
	INC  R23
	BRVS __MULF125
__MULF123:
	RCALL __ROUND_REPACK
	POP  R21
	RET

__MULF127:
	ADD  R17,R0
	ADC  R18,R1
	ADC  R19,R25
	RJMP __MULF128
__MULF126:
	ADD  R18,R0
	ADC  R19,R1
__MULF128:
	ADC  R20,R25
	ADC  R21,R25
	RET

__DIVF21:
	PUSH R21
	RCALL __UNPACK
	CPI  R23,0x80
	BRNE __DIVF210
	TST  R1
__DIVF211:
	BRPL __DIVF219
	RJMP __MINRES
__DIVF219:
	RJMP __MAXRES
__DIVF210:
	CPI  R25,0x80
	BRNE __DIVF218
__DIVF217:
	RJMP __ZERORES
__DIVF218:
	EOR  R0,R1
	SEC
	SBC  R25,R23
	BRVC __DIVF216
	BRLT __DIVF217
	TST  R0
	RJMP __DIVF211
__DIVF216:
	MOV  R23,R25
	PUSH R17
	PUSH R18
	PUSH R19
	PUSH R20
	CLR  R1
	CLR  R17
	CLR  R18
	CLR  R19
	CLR  R20
	CLR  R21
	LDI  R25,32
__DIVF212:
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	CPC  R20,R17
	BRLO __DIVF213
	SUB  R26,R30
	SBC  R27,R31
	SBC  R24,R22
	SBC  R20,R17
	SEC
	RJMP __DIVF214
__DIVF213:
	CLC
__DIVF214:
	ROL  R21
	ROL  R18
	ROL  R19
	ROL  R1
	ROL  R26
	ROL  R27
	ROL  R24
	ROL  R20
	DEC  R25
	BRNE __DIVF212
	MOVW R30,R18
	MOV  R22,R1
	POP  R20
	POP  R19
	POP  R18
	POP  R17
	TST  R22
	BRMI __DIVF215
	LSL  R21
	ROL  R30
	ROL  R31
	ROL  R22
	DEC  R23
	BRVS __DIVF217
__DIVF215:
	RCALL __ROUND_REPACK
	POP  R21
	RET

__CMPF12:
	TST  R25
	BRMI __CMPF120
	TST  R23
	BRMI __CMPF121
	CP   R25,R23
	BRLO __CMPF122
	BRNE __CMPF121
	CP   R26,R30
	CPC  R27,R31
	CPC  R24,R22
	BRLO __CMPF122
	BREQ __CMPF123
__CMPF121:
	CLZ
	CLC
	RET
__CMPF122:
	CLZ
	SEC
	RET
__CMPF123:
	SEZ
	CLC
	RET
__CMPF120:
	TST  R23
	BRPL __CMPF122
	CP   R25,R23
	BRLO __CMPF121
	BRNE __CMPF122
	CP   R30,R26
	CPC  R31,R27
	CPC  R22,R24
	BRLO __CMPF122
	BREQ __CMPF123
	RJMP __CMPF121

__ADDW2R15:
	CLR  R0
	ADD  R26,R15
	ADC  R27,R0
	RET

__ADDD12:
	ADD  R30,R26
	ADC  R31,R27
	ADC  R22,R24
	ADC  R23,R25
	RET

__SUBD12:
	SUB  R30,R26
	SBC  R31,R27
	SBC  R22,R24
	SBC  R23,R25
	RET

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__ANEGD1:
	COM  R31
	COM  R22
	COM  R23
	NEG  R30
	SBCI R31,-1
	SBCI R22,-1
	SBCI R23,-1
	RET

__LSLD1:
	LSL  R30
	ROL  R31
	ROL  R22
	ROL  R23
	RET

__CBD1:
	MOV  R31,R30
	ADD  R31,R31
	SBC  R31,R31
	MOV  R22,R31
	MOV  R23,R31
	RET

__CWD1:
	MOV  R22,R31
	ADD  R22,R22
	SBC  R22,R22
	MOV  R23,R22
	RET

__CWD2:
	MOV  R24,R27
	ADD  R24,R24
	SBC  R24,R24
	MOV  R25,R24
	RET

__EQB12:
	CP   R30,R26
	LDI  R30,1
	BREQ __EQB12T
	CLR  R30
__EQB12T:
	RET

__GTW12:
	CP   R30,R26
	CPC  R31,R27
	LDI  R30,1
	BRLT __GTW12T
	CLR  R30
__GTW12T:
	RET

__MULW12U:
	MUL  R31,R26
	MOV  R31,R0
	MUL  R30,R27
	ADD  R31,R0
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	RET

__MULB1W2U:
	MOV  R22,R30
	MUL  R22,R26
	MOVW R30,R0
	MUL  R22,R27
	ADD  R31,R0
	RET

__MULW12:
	RCALL __CHKSIGNW
	RCALL __MULW12U
	BRTC __MULW121
	RCALL __ANEGW1
__MULW121:
	RET

__DIVW21U:
	CLR  R0
	CLR  R1
	LDI  R25,16
__DIVW21U1:
	LSL  R26
	ROL  R27
	ROL  R0
	ROL  R1
	SUB  R0,R30
	SBC  R1,R31
	BRCC __DIVW21U2
	ADD  R0,R30
	ADC  R1,R31
	RJMP __DIVW21U3
__DIVW21U2:
	SBR  R26,1
__DIVW21U3:
	DEC  R25
	BRNE __DIVW21U1
	MOVW R30,R26
	MOVW R26,R0
	RET

__DIVW21:
	RCALL __CHKSIGNW
	RCALL __DIVW21U
	BRTC __DIVW211
	RCALL __ANEGW1
__DIVW211:
	RET

__DIVD21U:
	PUSH R19
	PUSH R20
	PUSH R21
	CLR  R0
	CLR  R1
	CLR  R20
	CLR  R21
	LDI  R19,32
__DIVD21U1:
	LSL  R26
	ROL  R27
	ROL  R24
	ROL  R25
	ROL  R0
	ROL  R1
	ROL  R20
	ROL  R21
	SUB  R0,R30
	SBC  R1,R31
	SBC  R20,R22
	SBC  R21,R23
	BRCC __DIVD21U2
	ADD  R0,R30
	ADC  R1,R31
	ADC  R20,R22
	ADC  R21,R23
	RJMP __DIVD21U3
__DIVD21U2:
	SBR  R26,1
__DIVD21U3:
	DEC  R19
	BRNE __DIVD21U1
	MOVW R30,R26
	MOVW R22,R24
	MOVW R26,R0
	MOVW R24,R20
	POP  R21
	POP  R20
	POP  R19
	RET

__DIVD21:
	RCALL __CHKSIGND
	RCALL __DIVD21U
	BRTC __DIVD211
	RCALL __ANEGD1
__DIVD211:
	RET

__MODW21:
	CLT
	SBRS R27,7
	RJMP __MODW211
	COM  R26
	COM  R27
	ADIW R26,1
	SET
__MODW211:
	SBRC R31,7
	RCALL __ANEGW1
	RCALL __DIVW21U
	MOVW R30,R26
	BRTC __MODW212
	RCALL __ANEGW1
__MODW212:
	RET

__CHKSIGNW:
	CLT
	SBRS R31,7
	RJMP __CHKSW1
	RCALL __ANEGW1
	SET
__CHKSW1:
	SBRS R27,7
	RJMP __CHKSW2
	COM  R26
	COM  R27
	ADIW R26,1
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSW2:
	RET

__CHKSIGND:
	CLT
	SBRS R23,7
	RJMP __CHKSD1
	RCALL __ANEGD1
	SET
__CHKSD1:
	SBRS R25,7
	RJMP __CHKSD2
	CLR  R0
	COM  R26
	COM  R27
	COM  R24
	COM  R25
	ADIW R26,1
	ADC  R24,R0
	ADC  R25,R0
	BLD  R0,0
	INC  R0
	BST  R0,0
__CHKSD2:
	RET

__GETW1P:
	LD   R30,X+
	LD   R31,X
	SBIW R26,1
	RET

__GETD1P:
	LD   R30,X+
	LD   R31,X+
	LD   R22,X+
	LD   R23,X
	SBIW R26,3
	RET

__GETD1P_INC:
	LD   R30,X+
	LD   R31,X+
	LD   R22,X+
	LD   R23,X+
	RET

__PUTDP1_DEC:
	ST   -X,R23
	ST   -X,R22
	ST   -X,R31
	ST   -X,R30
	RET

__GETW1PF:
	OUT  RAMPZ,R22
	ELPM R0,Z+
	ELPM R31,Z
	MOV  R30,R0
	RET

__GETW2PF:
	OUT  RAMPZ,R22
	ELPM R26,Z+
	ELPM R27,Z
	RET

__GETD1S0:
	LD   R30,Y
	LDD  R31,Y+1
	LDD  R22,Y+2
	LDD  R23,Y+3
	RET

__GETD2S0:
	LD   R26,Y
	LDD  R27,Y+1
	LDD  R24,Y+2
	LDD  R25,Y+3
	RET

__PUTD1S0:
	ST   Y,R30
	STD  Y+1,R31
	STD  Y+2,R22
	STD  Y+3,R23
	RET

__PUTPARD1:
	ST   -Y,R23
	ST   -Y,R22
	ST   -Y,R31
	ST   -Y,R30
	RET

__PUTPARD2:
	ST   -Y,R25
	ST   -Y,R24
	ST   -Y,R27
	ST   -Y,R26
	RET

__CDF2U:
	SET
	RJMP __CDF2U0
__CDF2:
	CLT
__CDF2U0:
	RCALL __SWAPD12
	RCALL __CDF1U0

__SWAPD12:
	MOV  R1,R24
	MOV  R24,R22
	MOV  R22,R1
	MOV  R1,R25
	MOV  R25,R23
	MOV  R23,R1

__SWAPW12:
	MOV  R1,R27
	MOV  R27,R31
	MOV  R31,R1

__SWAPB12:
	MOV  R1,R26
	MOV  R26,R30
	MOV  R30,R1
	RET

__EEPROMRDW:
	ADIW R26,1
	RCALL __EEPROMRDB
	MOV  R31,R30
	SBIW R26,1

__EEPROMRDB:
	SBIC EECR,EEWE
	RJMP __EEPROMRDB
	PUSH R31
	IN   R31,SREG
	CLI
	OUT  EEARL,R26
	OUT  EEARH,R27
	SBI  EECR,EERE
	IN   R30,EEDR
	OUT  SREG,R31
	POP  R31
	RET

__EEPROMWRW:
	RCALL __EEPROMWRB
	ADIW R26,1
	PUSH R30
	MOV  R30,R31
	RCALL __EEPROMWRB
	POP  R30
	SBIW R26,1
	RET

__EEPROMWRB:
	SBIS EECR,EEWE
	RJMP __EEPROMWRB1
	WDR
	RJMP __EEPROMWRB
__EEPROMWRB1:
	IN   R25,SREG
	CLI
	OUT  EEARL,R26
	OUT  EEARH,R27
	SBI  EECR,EERE
	IN   R24,EEDR
	CP   R30,R24
	BREQ __EEPROMWRB0
	OUT  EEDR,R30
	SBI  EECR,EEMWE
	SBI  EECR,EEWE
__EEPROMWRB0:
	OUT  SREG,R25
	RET

__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

__INITLOCB:
__INITLOCW:
	ADD  R26,R28
	ADC  R27,R29
	OUT  RAMPZ,R22
__INITLOC0:
	ELPM R0,Z+
	ST   X+,R0
	DEC  R24
	BRNE __INITLOC0
	RET

;END OF CODE MARKER
__END_OF_CODE:
